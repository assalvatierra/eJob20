@model JobsV1.Models.CustEntMain

@{
    ViewBag.Title = "Edit - Company";
    Session["ROOTMENUID"] = 5;
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}
    <div class="view-header">
        <h3>Edit Company </h3>
       
    </div>
    <div class="view-content flex-column">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-rows">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="flex-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b class="  control-label"> Code </b>
                        <div>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b class="  control-label"> Telephone Nos. </b>
                        <div>
                            @Html.EditorFor(model => model.Contact1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b class="  control-label"> Fax Nos. </b>
                        <div>
                            @Html.EditorFor(model => model.Contact2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <b class="  control-label"> Mobile </b>
                        <div>
                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="flex-group">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group hidden">
                        @Html.LabelFor(model => model.iconPath, htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.EditorFor(model => model.iconPath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.iconPath, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <b class="control-label  "> City </b>
                        <div>
                            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control", @id = "cityId" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control", @id = "cityId" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssignedTo, "AssignedTo", htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.DropDownList("AssignedTo", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Exclusive, "Exclusivity", htmlAttributes: new { @class = "control-label  " })
                        <div>
                            @Html.DropDownList("Exclusive", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Exclusive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="flex-group-bottom">
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to Company Details", "Details", new { id = Model.Id })
        </div>

    </div>
