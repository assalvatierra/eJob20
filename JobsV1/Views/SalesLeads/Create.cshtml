@model JobsV1.Models.SalesLead

@{
    ViewBag.Title = "Create : Sales Lead";
}

<link rel="stylesheet" href="~/Content/ModalSalesLead.css">

<h2>Create Sales Lead</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SalesLead</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", @maxlength = "180" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @maxlength = "180" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <b class="control-label col-md-2"> Company </b>
            <div class="col-md-4" style="width:320px">
                <input type="text" class="form-control" id="company-textfield" readonly value="@ViewBag.CompanyName" />
            </div>

            <div class="col-sm-4 " style="width:320px" hidden>
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", @id = "CompanyId" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>

            <span style="float:left">
                <a class="btn btn-default" href="#" id="catbtn" data-toggle="modal" data-target="#CompanyModal" style="margin-top:0px;float:left;">Search Company</a>
            </span>
        </div>

        <div class="form-group" hidden>
            <b class="control-label col-md-2"> Contact </b>
            <div class="col-sm-4" style="width:320px">
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control", @id = "CustomerId" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <b class="control-label col-md-2"> Contact Name</b>
            <div class="col-md-4" style="width:320px">
                @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control", @id = "CustName", @maxlength = "180", @readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
            </div>

            <span style="float:left">
                <a class="btn btn-default" href="#" id="catbtn" data-toggle="modal" data-target="#CustomersModal" style="margin-top:0px;float:left;">Search Customer</a>
            </span>
        </div>
        <div class="form-group">
            <b class="control-label col-md-2"> Contact No. </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustPhone, new { htmlAttributes = new { @class = "form-control", @id = "CustPhone", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.CustPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <b class="control-label col-md-2"> Email </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustEmail, new { htmlAttributes = new { @class = "form-control", @id = "CustEmail", @maxlength = "80" } })
                @Html.ValidationMessageFor(model => model.CustEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.DtEntered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtEntered, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtEntered, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.EnteredBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnteredBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnteredBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedTo, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedTo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesCode, new { htmlAttributes = new { @class = "form-control", @maxlength = "40" } })
                <p style="font-size:10px;color:gray;"> Enter the Sales Code of customer activities to Sync the data </p>
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<!-- Modal -->
<div class="modal fade" id="CustomersModal" tabindex="-1" role="dialog" aria-labelledby="CustomerLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Customer List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <input type="text" id="SearchBarCustomer" onkeyup="searchCustomer()" placeholder="Search for names.." title="Type in a name">

                <ul id="SearchListCustomer">
                    @foreach (var cust in ViewBag.CustomerList as IEnumerable<JobsV1.Models.Customer>)
                    {
                        <li style="cursor:pointer;" value="@cust.Name">
                            <a onclick="SelectCustomer(@cust.Id)">
                                @cust.Name
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<!-- Company Seatch Modal -->
<div class="modal fade" id="CompanyModal" tabindex="-1" role="dialog" aria-labelledby="CompanySearch" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Company List</h4>
            </div>

            <div class="modal-body" id="companyModal-content">

                <input type="text" id="SearchBarCompany" onkeyup="SearchCompany()" placeholder="Search for company.." title="Type in a company name">

                <ul id="SearchListCompany">
                    @foreach (var company in ViewBag.CompanyList as IEnumerable<JobsV1.Models.CustEntMain>)
                    {
                        <li style="cursor:pointer;" value="@company.Name">
                            <a onclick="SelectCompany(@company.Id)">
                                @company.Name
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/Job/SalesLead.js"></script>
    <script>
        function searchCustomer() {
            var input, filter, ul, li, a, i;
            input = document.getElementById("SearchBarCustomer");
            filter = input.value.toUpperCase();
            ul = document.getElementById("SearchListCustomer");
            li = ul.getElementsByTagName("li");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName("a")[0];
                if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }

        function SearchCompany() {
            var input, filter, ul, li, a, i;
            input = document.getElementById("SearchBarCompany");
            filter = input.value.toUpperCase();
            ul = document.getElementById("SearchListCompany");
            li = ul.getElementsByTagName("li");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName("a")[0];
                if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }

        function SelectCustomer(customerId) {
            $('#CustomerId').val(customerId);
            $('#CustomersModal').modal('toggle');

            var customer = $("#CustomerId option:selected").text();
            //console.log("customer : " + customer);
            //$("#jobdesc").val(customer);
            getEmail();
            getNumber();
            getCompany();

            $("#CustName").val(customer);
        }

        
        function SelectCompany(companyId) {

            console.log(companyId);
            $('#CompanyId').val(companyId);
            $('#CompanyModal').modal('toggle');

            var company = $("#CompanyId option:selected").text();

            GetCustomer(companyId);

            $("#company-textfield").val(company);
        }


        //get company using ajax post
        function getCompany() {
            $.get("/Customers/GetCustomerCompanyOrDefault",
                {
                    id: $("#CustomerId option:selected").val()
                },
                function (data, status) {
                    //console.log("CompanyId: " + data);
                    $('#CompanyId').val(data);
                    $('#company-textfield').val($("#CompanyId option:selected").text());
                });
        }
        

        //get company using ajax post
        function GetCustomer(companyId) {
            $.get("/Customers/GetCustomerByCompanyId",
                {
                    id: companyId
                },
                function (data, status) {
                    //console.log(data);
                    //$('#CompanyId').val(data);
                    //$('#company-textfield').val($("#CompanyId option:selected").text());
                }).done((customer) => {

                    console.log(customer);
                    
                    $("#CompanyId").val(companyId);
                    $("#CustomerId").val(customer["Id"]);
                    $("#CustName").val(customer["Name"]);
                    $("#CustEmail").val(customer["Email"]);
                    $("#CustPhone").val(customer["Contact1"]);

                }).fail(() => {
                    alert("Unable to get Customer Details")
                });
        }

        //get email using ajax post
        function getEmail() {
            $.post("/JobOrder/getCustomerEmail",
                {
                    id: $("#CustomerId option:selected").val()
                },
                function (data, status) {
                    $("#CustEmail").val(data);
                    //  alert("Data: " + data + "\nStatus: " + status);
                });
        }

        //get number using ajax post
        function getNumber() {
            $.post("/JobOrder/getCustomerNumber",
                {
                    id: $("#CustomerId option:selected").val()
                },
                function (data, status) {
                    $("#CustPhone").val(data);
            });
        }


        //Change job desription bsed on the cutomer name
        $("#CustomerId").change(function () {
            var customer = $("#CustomerId option:selected").text();
            //console.log("customer : " + customer);
            //$("#jobdesc").val(customer);
            getEmail();
            getNumber();
            getCompany();

            $("#CustName").val(customer);
        });

        //on select of the customer
        //$('#CustomerId').on('change', function () {
        //    var custId = $('#CustomerId').val();
        //    console.log('customerId: ' + custId);
        //    ajax_loadContent(custId);
        //});

        //load table content on search btn click
        //request data from server using ajax call
        //then clear and add contents to the table
        function ajax_loadContent(custId) {
            //build json object
            var data = {
                custId: custId
            };

            //request data from server using ajax call
            $.ajax({
                url: 'getCompanyId',
                type: "GET",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log("SUCCESS");
                    console.log(data);
                },
                error: function (data) {
                    console.log("ERROR");
                    console.log(data);
                    var comId = parseInt(data['responseText']);
                    console.log(comId);
                    $('#CompanyId').val(comId);
                }
            });
        }

    </script>
}