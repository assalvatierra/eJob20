@model JobsV1.Models.SalesLead

@{
    ViewBag.Title = "Create : Sales Lead";
}

<link rel="stylesheet" href="~/Content/ModalSalesLead.css">

<h2>Create Sales Lead</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SalesLead</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control", @maxlength = "240" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @maxlength = "240" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <b class="control-label col-md-2"> Company </b>
            <div class="col-sm-4" style="width:320px">
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control", @id = "CompanyId" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           <b class="control-label col-md-2"> Contact </b>
            <div class="col-sm-4" style="width:320px" >
                @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" ,@id= "CustomerId" })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>

            @*<span style="float:left">
                <a class="btn btn-default" href="#" id="catbtn" data-toggle="modal" data-target="#CustomersModal" style="margin-bottom:10px;float:left;">Search Customer</a>
            </span>*@
        </div>

        <div class="form-group">
            <b class="control-label col-md-2"> Contact Name</b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <b class="control-label col-md-2"> Contact No. </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustPhone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <b class="control-label col-md-2"> Email </b>
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group hidden">
            @Html.LabelFor(model => model.DtEntered, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DtEntered, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DtEntered, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnteredBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnteredBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EnteredBy, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedTo, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignedTo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/Job/SalesLead.js"></script>
}
<!-- Modal -->
<div class="modal fade" id="CustomersModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Customer List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <input type="text" id="SearchBarCustomer" onkeyup="searchCustomer()" placeholder="Search for names.." title="Type in a name">

                <ul  id="SearchListCustomer">
                    @foreach (var cust in ViewBag.CustomerList as IEnumerable<JobsV1.Models.Customer>)
                    {
                        <li style="cursor:pointer;" value="@cust.Name">
                            <a onclick="setValue(@cust.Id)">
                               @cust.Name
                            </a>
                        </li>
                    }

                </ul>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>
    function searchCustomer() {
        var input, filter, ul, li, a, i;
        input = document.getElementById("SearchBarCustomer");
        filter = input.value.toUpperCase();
        ul = document.getElementById("SearchListCustomer");
        li = ul.getElementsByTagName("li");
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }

    function setValue(value){
        $('#CustomerId').val(value);
        $('#CustomersModal').modal('toggle');
    }

    function getCompany(){
        var custId = $('#CustomerId').val();
        console.log('customerId : ' + custId);
    }

    //on select of the customer
    $('#CustomerId').on('change', function () {
        var custId = $('#CustomerId').val();
        console.log('customerId: ' + custId);
        ajax_loadContent(custId);
    });

    //load table content on search btn click
    //request data from server using ajax call
    //then clear and add contents to the table
    function ajax_loadContent(custId) {
        //build json object
        var data = {
            custId: custId
        };
           
        //request data from server using ajax call
        $.ajax({
            url: 'getCompanyId',
            type: "GET",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log("SUCCESS");
                console.log(data);
            },
            error: function (data) {
                console.log("ERROR");
                console.log(data);
                var comId = parseInt(data['responseText']);
                console.log(comId);
                $('#CompanyId').val(comId);

               // LoadTable(data);
            }
        });
    }

    

</script>