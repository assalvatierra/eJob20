@model IEnumerable<JobsV1.Models.SalesLead>

@{
    ViewBag.Title = "Leads";
    Session["ROOTMENUID"] = 2;
    var SalesStatCode = (List<JobsV1.Models.SalesStatusCode>)ViewBag.StatusCodes;
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<link href="/Content/TableStyles.css" rel="stylesheet" />
<style>
    .link-status{
        padding:10px;
    }
    
    .link-status:hover{
        color:white;
    }
</style>

<div class="view-header">
    <h2>Sales Lead: List</h2>

    <div class="header-btn-list">
        <div class="btn-group">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" }) 
        </div>
    </div>
</div>

<div class="view-content content-min-width" >

    @*<p>
        
        Sales Lead |
        @Html.ActionLink("Quotation", "JobLeads", "JobMains")
    </p>*@
    <p>
        Filters:
        @Html.ActionLink("New Lead", "Index", new { sortid = 5 }, new { @id = "newLead" }) |
        @Html.ActionLink("OnGoing", "Index", new { sortid = 4 }, new { @id = "ongoing" }) |
        @Html.ActionLink("Accepted", "Index", new { sortid = 1 }, new { @id = "acceptedLead" }) |
        @Html.ActionLink("Closed", "Index", new { sortid = 2 }, new { @id = "closedLead" }) |
        @Html.ActionLink("Rejected", "Index", new { sortid = 6 }, new { @id = "rejectedLead" }) |
        @Html.ActionLink("All", "Index", new { sortid = 3 }, new { @id = "allLead" })
    </p>

    <table class="table table-no-border" >

        @foreach (var item in Model)
        {

            if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
            {
                var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;
            }


            <tr >
                <td id="lead@(item.Id)" class="td-no-border">
                    <div style="text-align:center;" class="date-box">
                        <span style="color:darkblue; font: bold 12px arial, verdana;">@item.Date.ToString("MMM-yyyy")</span>
                        <br /><span style="color:blue; font: bold 28px arial, verdana;">@item.Date.ToString("dd")</span>
                        <span style="color:blue; font: bold 12px arial, verdana;">(@item.Date.ToString("ddd"))</span>
                        @if (item.Price != 0)
                        {
                            <br /><br /><span style="color:red; font: normal 18px arial, verdana;">@item.Price.ToString("##,###")</span>
                        }
                    </div>

                    @{
                        foreach (var status in item.SalesStatus)
                        {
                            if (@status.SalesStatusCodeId == 5)
                            {
                                <img src="~/Images/Customers/Category/Active-30.png" height="20" alt="ACCEPTED" />
                            }

                            if (@status.SalesStatusCodeId == 7)
                            {
                                <img src="~/Images/SalesLead/close-icon.png" height="20" alt="ACCEPTED" />
                            }
                        }
                    }

                </td>
                <td>
                    <!--Sales Lead Status-->
                    <div>

                        @foreach (var salesstat in SalesStatCode)
                        {
                            @*if (item.SalesStatus.Select(s => s.SalesStatusCodeId).Contains(salesstat.Id))
                            {
                                <span style="font-weight:800; color: gray">
                                    @salesstat.Name  &nbsp;>
                                </span>
                            }
                            else
                            {
                                <span>
                                    @Html.ActionLink(salesstat.Name, "AddSalesStatus", new { slId = item.Id, StatusId = salesstat.Id }) &nbsp;>
                                </span>
                            }*@

                            <span>&#187;</span>
                            if (item.SalesStatus.Select(s => s.SalesStatusCodeId).Contains(salesstat.Id))
                            {
                                <span class="btn btn-success btn-arrow-right">
                                    <span class="link-white"> @salesstat.Name </span>
                                </span>
                            }
                            else
                            {
                                <button class="btn btn-primary btn-arrow-right cursor-hand ">
                                    @*@Html.ActionLink(salesstat.Name, "AddSalesStatus", new { slId = item.Id, StatusId = salesstat.Id }, new { @class = "link-white link-status" })*@
                                    <a class="link-white link-status" onclick="UpdateLeadStatus(this, @item.Id, @salesstat.Id)"> @salesstat.Name </a>
                                </button>
                            }
                        }

                    </div>

                    <div>
                        <span style="color:darkgreen;font:bold 16px arial, verdana;">
                            @{
                                try
                                {
                                    if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
                                    {
                                        var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;
                                   
                                    <text>
                                        @company.Name 
                                    </text> 
                                    }
                                }
                                catch (Exception)
                                {

                                }
                            }

                        </span> |
                        <span style="color:maroon;font:bold 12px arial, verdana;">
                            @Html.DisplayFor(modelItem => item.CustName)

                            @if (item.CustPhone.IsEmpty())
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustPhone)
                            }

                            @if (item.CustEmail.IsEmpty())
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustEmail)
                            }

                        </span>

                        &nbsp; &nbsp;
                        @*[ @Html.ActionLink("Edit Contact", "CompanyDetail", new { slid = item.Id, CustId = item.CustomerId }) |*@
                        [ @Html.ActionLink("Edit Lead", "Edit", new { id = item.Id }) |
                        @*@Html.ActionLink("Details", "LeadDetails", new { id = item.Id }) |*@
                        @Html.ActionLink("Profitability", "SalesLeadCat", new { id = item.Id })
                        @*@Html.ActionLink("Files List", "FileList", new { custid = item.CustomerId, salesleadId = item.Id })*@
                        ]

                        @foreach (var salescat in item.SalesLeadCategories)
                        {
                            <img src=@Url.Content(@salescat.SalesLeadCatCode.iconPath)
                                 alt=@salescat.SalesLeadCatCode.CatName height="24"
                                 title=@salescat.SalesLeadCatCode.CatName />
                        }


                        <br />
                        <span style="font-weight:600;color:#282828;">
                            @Html.DisplayFor(modelItem => item.SalesCode) - 
                        </span>

                        <span style="font-weight:600;color:darkblue;">
                            @Html.DisplayFor(modelItem => item.Details)
                        </span>
                        <br />
                        <span style="font:500 arial, verdana;">
                            @Html.DisplayFor(modelItem => item.Remarks)
                        </span>
                        <br />
                       
                        <!-- Activities-->
                        @if (!String.IsNullOrWhiteSpace(item.SalesCode))
                        {
                        
                            if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
                            {
                                var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;
                           
                                Html.RenderAction("CustActivitiesPartial", new { salesCode = item.SalesCode });
                                <span> 
                                    [@Html.ActionLink("Add Activity", "ListCustActivityCodes",
                                     new { id = item.Id, salesCode = item.SalesCode, projectName = item.Details,
                                           amount = item.Price, companyId = company.Id })]
                                </span>
                             }
                        }
                        else
                        {
                                var salesCode = item.SalesCode ?? "";
                                @*@String.IsNullOrWhiteSpace(item.SalesCode)*@
                                <span style="font:bold 8px, arial, verdana; color:maroon ;">
                                    Activities <br />
                                </span>

                                <span style="font:bold 8px, arial, verdana; color: royalblue;">
                                    @foreach (var tmpAct in item.SalesActivities)
                                    {
                                        if (tmpAct.SalesActStatusId == 1)
                                        {
                                            <span style="color:red;font-weight:800;">! </span>
                                            <img src=@Url.Content(@tmpAct.SalesActCode.iconPath)
                                                 alt=@tmpAct.SalesActCode.iconPath height="16"
                                                 title=@tmpAct.SalesActCode.iconPath />

                                            <span style="color:maroon;">@tmpAct.Particulars</span>
                                            <span style="font:status-bar;color:darkgray;"> @tmpAct.DtActivity.ToString("MMM-dd-yyyy")</span>
                                            @Html.ActionLink("Done |", "SalesActivityDone", new { id = tmpAct.Id }, new { @id = "prevDefault", })
                                            @Html.ActionLink(" [x]", "SalesActivityRemove", new { id = tmpAct.Id })

                                            <br />
                                        }
                                        if (tmpAct.SalesActStatusId == 2) 
                                        {
                                            <span style="color:darkgray;font-weight:800;">&#10004; </span>
                                            <img src=@Url.Content(@tmpAct.SalesActCode.iconPath)
                                                 alt=@tmpAct.SalesActCode.iconPath height="16"
                                                 title=@tmpAct.SalesActCode.iconPath />
                                            <span style="color:darkgray;">@tmpAct.Particulars</span>
                                            <span style="font:status-bar;color:darkgray;"> @tmpAct.DtActivity.ToString("MMM-dd-yyyy")</span>
                                            <br />
                                        }
                                        if (tmpAct.SalesActStatusId == 3)
                                        {
                                            <span style="color:darkgray;font-weight:800;">&#x2022; </span>
                                            <img src=@Url.Content(@tmpAct.SalesActCode.iconPath)
                                                 alt=@tmpAct.SalesActCode.iconPath height="16"
                                                 title=@tmpAct.SalesActCode.iconPath />
                                            <span style="color:darkgray;">@tmpAct.Particulars</span>
                                            <span style="font:status-bar;color:darkgray;"> @tmpAct.DtActivity.ToString("MMM-dd-yyyy")</span>
                                            <br />
                                        }
                                    }
                                </span>
                            

                            <span>[ @Html.ActionLink("Add Activity", "ListActivityCodes", new { id = item.Id }) ]</span>
                        }


                        <!-- Items with Prices -->
                        <br /><br />
                        <span style="font:bolder 12px, arial, verdana; color:black;font-weight:600;">
                            ITEMS
                        </span> <br />
                        <div id="SalesLeadItems-@item.Id">
                            @foreach (var invItems in item.SalesLeadItems)
                            {
                                <div style="border:1px solid lightgray;padding:0px;width:100%;margin-bottom:5px;padding-bottom:5px;">

                                    <div style="background-color:lightgray;padding:5px;">
                                        <b>
                                            @invItems.InvItem.Description -
                                            @if (invItems.QuotedPrice != null)
                                            {
                                                <span>P </span>@Decimal.Parse(invItems.QuotedPrice.ToString()).ToString("##,###")
                                            }
                                            <span style="font:normal 10px arial,verdana;">( @invItems.Remarks )</span>
                                        </b>

                                        <span class="pull-right">
                                            <a id="catbtn" class="cursor-hand" data-toggle="modal" data-target="#EditSupLeadItem" style="margin-bottom:10px;" onclick="EditLeadItem(@invItems.Id,@invItems.InvItemId,'@invItems.QuotedPrice', '@invItems.Remarks','@invItems.InvItem.Description')">[ Edit ]</a>
                                            <a class="cursor-hand" onclick="ajax_RemoveItem(@invItems.Id)">[ x ]</a>

                                        </span>
                                    </div>

                                    <div id="supItem-@invItems.Id">
                                        @foreach (var supItem in invItems.SalesLeadQuotedItems)
                                        {
                                            <p style="margin:3px 20px;">
                                                @supItem.SupplierItemRate.SupplierInvItem.Supplier.Name <span>- P</span>
                                                @if (supItem.SupplierItemRate.ItemRate != null)
                                                {
                                                    @Decimal.Parse(supItem.SupplierItemRate.ItemRate).ToString("##,###") <span> / </span>
                                                }

                                                @supItem.SupplierItemRate.SupplierUnit.Unit <span> ( </span>
                                                <span style="font:normal 11px arial,verdana;">
                                                    @DateTime.Parse(supItem.SupplierItemRate.DtValidFrom).ToString("MMM dd yyyy") <span>-</span>
                                                    @DateTime.Parse(supItem.SupplierItemRate.DtValidTo).ToString("MMM dd yyyy")
                                                </span>
                                                <span> ) </span>
                                                <a class="cursor-hand" onclick="removeSupItems(@supItem.Id)">[ x ]</a>
                                            </p>
                                        }
                                    </div>

                                    <!--Add Item-->
                                    <a id="catbtn" class="cursor-hand" data-toggle="modal" data-target="#supItemRate" style="margin-left:15px;" onclick="getItemSuppliers(@invItems.InvItemId,'@invItems.InvItem.Description', @invItems.Id )">[ Add Supplier ]</a>
                                </div>
                            }
                        </div>
                        <br />

                        <!--Add Item-->
                        <a id="catbtn" class="cursor-hand" data-toggle="modal" data-target="#selectSupItem" style="margin-bottom:10px;" onclick="setLeadId(@item.Id)">[ Add Item ]</a>

                        <br />
                        <span style="font: status-bar; color:gray;">
                            Entered: @Html.DisplayFor(modelItem => item.EnteredBy)
                            @@ @Html.DisplayFor(modelItem => item.DtEntered)
                        </span>
                        <br />
                        <span style="font: status-bar; color:gray;">
                            Assigned: @Html.DisplayFor(modelItem => item.AssignedTo)
                        </span>
                    </div>
                </td>
            </tr>
        }

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="2">
                    <h3 class="text-center text-muted"> No Sales Lead Found </h3>
                </td>
            </tr>
        }

    </table>
</div>

<!-- Add Sales Lead Items -->
<div class="modal fade" id="selectSupItem" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Select Item</h4>
            </div>
            <div class="modal-body" id="modal2-content">
                <div class="row">
                    <!--Start of Modal Body-->
                    <div class="form-group col-md-12 hidden">
                        <b class="col-md-2 "> SupId: </b>
                        <div class="col-md-10">
                            <input type="text" maxlength="5" class="form-control" id="supItem-supId" />
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        <b class="col-md-2"> Items: </b>
                        <div class="col-md-7">
                            <select name="InvItems" class="form-control" id="supItem-Items">
                                @foreach (var item in ViewData["InvItems"] as IEnumerable<JobsV1.Models.InvItem>)
                                {
                                    <option value="@item.Id"> @item.Description </option>
                                }
                            </select>
                        </div>
                    </div><br /><br />

                    <div class="form-group col-md-12">
                        <b class="col-md-2 "> Rate: </b>
                        <div class="col-md-10">
                            <input type="number" value="0" maxlength="25" class="form-control" id="supItem-Rate" onkeypress='validate(event)' />
                        </div>
                    </div>
                    <br /><br />

                    <div class="form-group col-md-12">
                        <b class="col-md-2 "> Remarks: </b>
                        <div class="col-md-10">
                            <input type="text" maxlength="20" class="form-control" id="supItem-Remarks" />
                        </div>
                    </div>
                    <!--End of Modal Body-->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ajax_AddSalesLeadItem()"> Submit </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Edit Sales Lead Item-->
<div class="modal fade" id="EditSupLeadItem" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Edit Item <span id="editItemName"> </span></h4>
            </div>
            <div class="modal-body" id="modal2-content">
                <!--Start of Modal Body-->
                <div class="row">
                    <div class="form-group col-md-12 hidden">
                        <b class="col-md-2 "> SupId: </b>
                        <div class="col-md-10">
                            <input type="text" maxlength="5" class="form-control" id="edit-supItem-Id" />
                        </div>
                    </div>

                    <div class="form-group col-md-12">
                        <b class="col-md-2"> Items: </b>
                        <div class="col-md-7">
                            <select name="InvItems" class="form-control" id="edit-supItem-Items">
                                @foreach (var item in ViewData["InvItems"] as IEnumerable<JobsV1.Models.InvItem>)
                                {
                                    <option value="@item.Id"> @item.Description </option>
                                }
                            </select>
                        </div>
                    </div><br /><br />

                    <div class="form-group col-md-12">
                        <b class="col-md-2 "> Rate: </b>
                        <div class="col-md-10">
                            <input type="number" value="0" maxlength="25" class="form-control" id="edit-supItem-Rate" onkeypress='validate(event)' />
                        </div>
                    </div>
                    <br /><br />

                    <div class="form-group col-md-12">
                        <b class="col-md-2 "> Remarks: </b>
                        <div class="col-md-10">
                            <input type="text" maxlength="20" class="form-control" id="edit-supItem-Remarks" />
                        </div>
                    </div>
                </div>
                <!--End of Modal Body-->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="ajax_EditLeadItem()"> Save Changes </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@{Html.RenderPartial("AddSupItemPartial", null, new ViewDataDictionary { { "ItemSuppliers", ViewBag.cItemSupplier } });}

<div class="view-content" hidden>

    <p>
        @*@Html.ActionLink("Create New", "Create") |
        Sales Lead |*@
        @* @Html.ActionLink("Quotation", "JobLeads", "JobMains")*@
    </p>
    <p>
        Filters:
        @Html.ActionLink("New Lead", "Index", null, null) |
        @Html.ActionLink("OnGoing", "Index", new { sortid = 4 }) |
        @Html.ActionLink("Accepted", "Index", new { sortid = 1 }) |
        @Html.ActionLink("Closed", "Index", new { sortid = 2 }) |
        @Html.ActionLink("All", "Index", new { sortid = 3 }, null)
    </p>
</div>

@section scripts
{
    <script src="~/Scripts/Job/Scroll.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('html, body').animate({
                scrollTop: $("#lead@(ViewBag.LeadId)").offset().top - 50
            }, 750);

        });

        if(@((int)Session["SLFilterID"]) != null){

            switch(@((int)Session["SLFilterID"])){
                case 1:
                    $("#acceptedLead").css("color","black")
                    $("#previous-bot").css("color","black")
                    break;
                case 2:
                    $("#closedLead").css("color","black")
                    $("#previous-bot").css("color","black")
                    break;
                case 3:
                    $("#allLead").css("color","black")
                    $("#closed-bot").css("color","black")
                    break;
                case 4:
                    $("#ongoing").css("color","black")
                    $("#ongoing-bot").css("color","black")
                    break;
                case 5:
                    $("#newLead").css("color","black")
                    $("#newLead-bot").css("color","black")
                    break;
                case 6:
                    $("#rejectedLead").css("color","black")
                    $("#closed-bot").css("color","black")
                    break;
                default:
                    $("#newLead").css("color","black")
                    $("#newLead-bot").css("color","black")
                    break;
            }
        }

        // Filter Loading on click
        $("#newLead, #acceptedLead, #closedLead, #ongoing, #rejectedLead, #allLead").click(() => {
            $("#overlay").show();
        });


        function setLeadId(id){
            $("#supItem-supId").val(id);
        }

        //add item
        function ajax_AddSalesLeadItem() {
            //build json object
            console.log("data: " + $("#supItem-Items option:selected").val());

            var data = {
                SalesLeadId: $("#supItem-supId").val(),
                ItemId: $("#supItem-Items option:selected").val(),
                price: $("#supItem-Rate").val(),
                remarks: $("#supItem-Remarks").val()
            };
            console.log(data);
            var url = '/SalesLeads/addSupItem';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {

                },
                error: function (data) {
                    console.log(data);
                    location.reload(true);
                }
            });
        }

        //Remove Item
        function ajax_RemoveItem(Id) {
            //build json object

            var data = {
                id: Id
            };

            var url = '/SalesLeads/RemoveItem';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {

                },
                error: function (data) {
                    console.log(data);
                    location.reload(true);
                }
            });
        }

        function EditLeadItem(id, invItemId, QuotedRate, Remarks,itemName) {
            $('#edit-supItem-Id').val(id);
            $('#edit-supItem-Items').val(invItemId);
            $('#edit-supItem-Rate').val(QuotedRate);
            $('#edit-supItem-Remarks').val(Remarks);

            $('#editItemName').text(itemName);
        }

        //Edit Item
        function ajax_EditLeadItem() {
             //build json object
            var Id = $('#edit-supItem-Id').val();
            var InvItemId = $('#edit-supItem-Items').val();
            var Rate = $('#edit-supItem-Rate').val();
            var Remarks = $('#edit-supItem-Remarks').val();
            var data = {
                id: Id,
                invItemId: InvItemId,
                rate: Rate,
                remarks: Remarks
            };
            console.log(data);
            var url = '/SalesLeads/EditItem';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log(data);
                },
                error: function (data) {
                    console.log(data);
                    location.reload(true);
                }
            });
        }

    //****************************
    //*** Handle Invalid Input ***
    //****************************

    //prevent invalid inputs
    function validate(evt) {
        var theEvent = evt || window.event;

        // Handle paste
        if (theEvent.type === 'paste') {
            key = event.clipboardData.getData('text/plain');
        } else {
            // Handle key press
            var key = theEvent.keyCode || theEvent.which;
            key = String.fromCharCode(key);
        }
        var regex = /[0-9]|\./;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    //handle numbers only on input
    $('#edit-supItem-Rate').on('input',function(){
        //backspace
        if( isNaN($('#edit-supItem-Rate').val())){
            var txt = $('#edit-supItem-Rate');
            txt.val(txt.val().slice(0, -1));
        }

        if($('#edit-supItem-Rate').val() < 0){
            $('#edit-supItem-Rate').val(0);
        }
    });

    //handle numbers only on input
    $('#supItem-Rate').on('input',function(){
        //backspace
        if( isNaN($('#supItem-Rate').val())){
            var txt = $('#supItem-Rate');
            txt.val(txt.val().slice(0, -1));
        }

        if($('#supItem-Rate').val() < 0){
            $('#supItem-Rate').val(0);
        }
    });


    //Update Activity Status
    function UpdateLeadStatus(e, leadId, statusId) {
        $.post("/SalesLeads/PostLeadStatus", { slId: leadId, StatusId: statusId }, (result) => {
            if (result == 'False') {
                alert("Unable to Update Status")
            }
        }).done((result) => {
            //on update success
            $(e).parent().removeClass("btn-primary");
            $(e).parent().addClass("btn-success");
        }).fail(() => {
            //on update failed
            console.log("On Fail");
            console.log(result);

            $(e).parent().removeClass("btn-primary");
            $(e).parent().addClass("btn-primary");

            //display alert message
            alert("Unable to Update Status")
        });

    }
    </script>

}
