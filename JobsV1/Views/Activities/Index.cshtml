@model IEnumerable<JobsV1.Models.CustEntActivity>

@{
    ViewBag.Title = "Daily Activities";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}
<br />
<h2>Customer Activities</h2>
<div class="row">
    <h4 class="col-md-1 control-label"> Filter : </h4>
    <input id="DtStart" name="DtStart" type="text" class="form-control col-md-2" style="margin-right:10px;max-width:140px;" />
    <input id="DtEnd" name="DtEnd" type="text" class="form-control col-md-2" style="margin-right:10px;max-width:140px;" />
    <button class="btn btn-default" style="margin-top:0px;" onclick="Filter()"> Filter </button>
</div>

<h4>Company Activities</h4>

<table class="table">
    <tr>
        <th> Date    </th>
        <th> Project </th>
        <th> Code    </th>
        <th> Amount  </th>
        <th> Status  </th>
        <th> Type    </th>
        <th> Company </th>
        <th> Remarks </th>
        <th> AssignedTo </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @DateTime.Parse(item.Date.ToString()).ToString("MMM dd yyyy")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectName)
            </td>
            <td>
                <a  style="cursor:pointer;" onclick="SearchCodeActivities('@item.SalesCode')">  @Html.DisplayFor(modelItem => item.SalesCode) </a>
            </td>
            <td>
                @(((Decimal)item.Amount).ToString("N0"))
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.ActionLink(item.CustEntMain.Name, "Index", "CustEntActivities", new { id = item.CustEntMainId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>
            <td>
                <a href="@Url.Action("UserActivities", "Activities", new { user = item.Assigned })">
                    @{var input = @item.Assigned;}
                    @try
                    {
                        char ch = '@';
                        int idx = input.IndexOf(ch);
                        <text> @input.Substring(0, idx)</text>
                    }
                    catch (Exception ex)
                    {
                        <text> NA </text>
                    }
                </a>
            </td>
            <td>
                @if (ViewBag.IsAdmin == true)
                {
                    <text>
                        @Html.ActionLink("Edit", "CompanyActsEdit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "CompanyActsDelete", new { id = item.Id })
                    </text>
                }
            </td>
        </tr>
    }
</table>


<h4>Suppliers Activities</h4>

<table class="table">
    <tr>
        <th> Date    </th>
        <th> Code  </th>
        <th> Amount  </th>
        <th> Suppliers  </th>
        <th> Type </th>
        <th> Remarks </th>
        <th> AssignedTo </th>
        <th></th>
    </tr>

    @foreach (var item in ViewBag.SupplierActivities as IOrderedEnumerable<JobsV1.Models.SupplierActivity>)
    {
        <tr>
            <td>
                @DateTime.Parse(item.DtActivity.ToString()).ToString("MMM dd yyyy")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Code) 
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.ActionLink(item.Supplier.Name, "Records", "SupplierActivities", new { id = item.SupplierId }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>
            <td>
                <a href="@Url.Action("SupActivities", "Activities", new { user = item.Assigned })">
                    @{var input = @item.Assigned;}
                    @try
                    {
                        char ch = '@';
                        int idx = input.IndexOf(ch);
                        <text> @input.Substring(0, idx)</text>
                    }
                    catch (Exception ex)
                    {
                        <text>  input </text>
                    }
                </a>
            </td>
            <td>
                @if (ViewBag.IsAdmin == true)
                {
                    <text>
                        @Html.ActionLink("Edit", "SupplierActsEdit", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "SupplierActsDelete", new { id = item.Id })
                    </text>
                }
            </td>
        </tr>
    }
</table>

@Html.Partial("_SalesCodeModal")

@section Scripts{
    <script src="~/Scripts/Job/DefaultDate.js"></script>
    <script src="~/Scripts/Activities/Activities.js"></script>
    <script>
        function SearchCodeActivities(code) {
            $.get("/Activities/GetCodeHistoryList", { salesCode: code }, (result) => {
                console.log(result);
                $("#SearchCode-Activities").children().remove();

                for (var i = 0; i < result.length; i++) {
                    var projectName = result[i]["ProjectName"] == null ? " " : result[i]["ProjectName"] + " / ";

                    var activity = "<a href='../CustEntActivities/Index/" + result[i]["CustEntMainId"] + "' class='list-group-item'> " 
                        + result[i]["Month"] + "/" + result[i]["Day"] + "/" + result[i]["Year"] + " - <b> " + projectName
                        + result[i]["Name"] + "</b> -  " + result[i]["ActivityType"] + " (" + result[i]["Status"]  + ") ";
                    $("#SearchCode-Activities").append(activity);

                }

                $("#SearchCodeModal").modal("show");
            });
        }
    </script>

}