@model IEnumerable<JobsV1.Models.Class.cUserActivity>

@{
    ViewBag.Title = "User Activities : " + @ViewBag.User;
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}
<h2>
    Sales Rep :
    @ViewBag.User
</h2>

<h3>Customer Activities</h3>

<!-- Search -->
<div class="row">
    <div class="col-lg-6">
        <div class="input-group">
            <span> Filter: </span>
            <input type="text" class="form-control" name="DtStart" placeholder="Date From" style="width: 150px;"> -
            <input type="text" class="form-control" name="DtEnd" placeholder="Date To" style="width: 150px;">
            <span class="input-group-btn" style="width:0%;">
                <button class="btn btn-default" style="margin-top:0px;" type="button" onclick="Search()">Go!</button>
            </span>
        </div>
    </div><!-- /.col-lg-6 -->
</div>
<br />
<div class="panel panel-default">
    <div class="panel-body">

        <h4>Company Activities</h4>
        <p>
            <a class="cursor-hand" onclick="CreateActivity()">
                Add Activity
            </a>
        </p>
        @*<a class="cursor-hand" onclick="ReloadActivitySummary()">
                Update
            </a>*@
        <table class="table" id="Act-Main-Table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProjectName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    Work
                </th>
                <th>
                    Company
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assigned)
                </th>
                <th>
                    @if (ViewBag.IsAdmin)
                    {
                        @Html.DisplayNameFor(model => model.Points)
                    }
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @DateTime.Parse(item.Date.ToString()).ToString("MMM-dd yyyy")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProjectName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SalesCode)
                    </td>
                    <td>
                        @Decimal.Parse(item.Amount.ToString()).ToString("N0")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityType)
                    </td>
                    <td>

                        @Html.ActionLink(item.Company, "Details","CustEntMains", new { id = item.CustEntMainId }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Remarks)
                    </td>
                    <td>
                        @item.UserRemoveEmail(item.Assigned)
                    </td>
                    <td>
                        @if (ViewBag.IsAdmin && item.Points != 0)
                        {
                            @Html.DisplayFor(modelItem => item.Points)
                        }
                    </td>
                    <td>
                        @if (ViewBag.IsAdmin)
                        {
                            <text>
                                <a class="cursor-hand" onclick="EditActivity(@item.Id)">
                                    Edit
                                </a> |
                                <a class="cursor-hand" onclick="DeleteActivity(@item.Id)">
                                    Delete
                                </a>
                            </text>
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        @{Html.RenderPartial("UserActivities_PartialTypeReport", (JobsV1.Models.Class.cUserPerformanceReport)ViewBag.PerfSummary);}
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        @{Html.RenderPartial("UserActivities_PartialSalesReport", (JobsV1.Models.Class.cUserSalesReport)ViewBag.SalesSummary);}
    </div>
</div>

@{Html.RenderPartial("UserActivities_ActivityCreate", (JobsV1.Models.CustEntActivity)ViewBag.custEntActivity);}
@{Html.RenderPartial("UserActivities_ActivityEdit", (JobsV1.Models.CustEntActivity)ViewBag.custEntActivity);}


<link rel="stylesheet" type="text/css" href="~/Content/daterangepicker.css">
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/DateRangePicker/moment.min.js"></script>
<script src="~/Scripts/DateRangePicker/daterangepicker.js"></script>
<script src="~/Scripts/Job/DefaultDate.js"></script>
<script type="text/javascript">
        $(document).ready(Initialize());

        function Initialize() {
            setDateDefault();
            setDefaultValues();

            //check table row count
            if ($('#Act-Main-Table tr').length == 1) {

                content = "<tr>";
                content += "<td colspan=10> <p class='text-center'> No Results Found </p> </td>";
                content += "</tr>";

                $(content).appendTo("#Act-Main-Table");
            }

        }

        function setDefaultValues() {
            $("#act-create-assigned").val("@ViewBag.User");
            $("#act-edit-assigned").val("@ViewBag.User");
        }

        //Default date
        function setDateDefault() {
            //test
            console.log("moment date:" +  moment().format("L") );
            console.log("js date:" +  new Date() );

            //Get URL Parameters
            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var sDate = urlParams.get('sDate');
            var eDate = urlParams.get('eDate');
            var user  = '@ViewBag.User';

            //update dates input fields from url parameters
            $('input[name="DtStart"]').val(sDate);
            $('input[name="DtEnd"]').val(eDate);
            ShowSalesReportMsg(sDate, eDate, " ");
            ShowTypeReportMsg(sDate, eDate, " ");

            //when url dates are empty, assign dates 1 week as default
            if (sDate == null || eDate == null) {
                var today = moment(new Date());
                let pastWeek = moment().add(-7, 'days');

                //convert to string
                var sDate = pastWeek.format("MM/DD/YYYY");
                var eDate = today.format("MM/DD/YYYY");
                console.log("today: " + eDate);

                window.location.href = "UserActivities?user="+ user +"&sDate=" + sDate + "&eDate=" + eDate;
            }
        }

        function Search() {
            var sDate = $('input[name="DtStart"]').val();
            var eDate = $('input[name="DtEnd"]').val();
            var user  = '@ViewBag.User';
            console.log("sDate : " + sDate + " - edate: " + eDate  );
            window.location.href = "UserActivities?user="+ user +"&sDate=" + sDate + "&eDate="+eDate;
        }


        /**
         *  Activity Type Summary
         **/
        function FilterTypeSummary( type ) {
            var user = '@ViewBag.User';
            var sDate = moment();
            var eDate = moment();

            $("#Act-Type-Filter-"+type).css("color","black");
            $("#Act-Type-Filter-"+type).siblings("a").css("color","#008ac9");

            switch (type) {
                case "Weekly":
                    sDate = moment().add(-7, 'days').format('MM/DD/YYYY');
                    break;
                case "Monthly":
                    sDate = moment().startOf('month').format('MM/DD/YYYY');
                    break;
                case "Yearly":
                    sDate = moment().startOf('year').format('MM/DD/YYYY');
                    break;
                default:
                    break;
            }
            eDate = eDate.format('MM/DD/YYYY');

            //build json object
            var data = {
                user: user,
                sDate: sDate,
                eDate: eDate
            };

            //request data from server using ajax call
            $.ajax({
                url: '/Activities/GetUserTypeSummary/',
                //url: 'CustEntMains/TableResult',
                type: "GET",
                data: data,
                dataType: 'json',
                success: function (data) {
                    console.log("ATTEMPT TO FILTER TYPE TABLE");
                    ReLoadTypeSummary(data);
                    ShowTypeReportMsg(sDate, eDate, type);
                },
                error: function (data) {
                    console.log("ERROR");
                    console.log(data);
                    //LoadTable(data);
                }
            });
        }

        //populate data result to the type summary table
        function ReLoadTypeSummary(data) {

            //clear table data
            $("#TypeSummaryTable").find("tr:gt(0)").remove();

            content = "<tr>";
            content += "<td> " + data["User"] + "</td>";
            content += "<td> " + data["Sales"] + "</td>";
            content += "<td> " + data["Quotation"] + "</td>";
            content += "<td> " + data["Meeting"] + "</td>";
            content += "<td> " + data["Procurement"] + "</td>";
            content += "<td> " + data["CallsAndEmail"] + "</td>";
            content += "</tr>";

            $(content).appendTo("#TypeSummaryTable");
        }

        function ShowTypeReportMsg(sDate, eDate, filter) {

            sDate = moment(sDate).format("MMM DD YYYY");
            eDate = moment(eDate).format("MMM DD YYYY");

            $("#Act-Type-Filter-Msg").show();
            $("#Act-Type-Filter-Msg").text("Showing " + filter + " Report from " + sDate +" to " + eDate+ " ");
        }


        /**
         *  Activity Sales Summary
         **/
        function FilterSalesSummary( type ) {
            var user = '@ViewBag.User';
            var sDate = moment();
            var eDate = moment();

            $("#Act-Sales-Filter-"+type).css("color","black");
            $("#Act-Sales-Filter-"+type).siblings("a").css("color","#008ac9");

            switch (type) {
                case "Weekly":
                    sDate = moment().add(-7, 'days').format('MM/DD/YYYY');
                    break;
                case "Monthly":
                    sDate = moment().startOf('month').format('MM/DD/YYYY');
                    break;
                case "Yearly":
                    sDate = moment().startOf('year').format('MM/DD/YYYY');
                    break;
                default:
                    break;
            }
            eDate = eDate.format('MM/DD/YYYY');

            //build json object
            var data = {
                user: user,
                sDate: sDate,
                eDate: eDate
            };

            //request data from server using ajax call
            $.ajax({
                url: '/Activities/GetUserSalesSummary/',
                //url: 'CustEntMains/TableResult',
                type: "GET",
                data: data,
                dataType: 'json',
                success: function (data) {
                    console.log("ATTEMPT TO FILTER SALES TABLE");
                    ReLoadSalesSummary(data);
                    console.log(data);
                    ShowSalesReportMsg(sDate, eDate, type);
                },
                error: function (data) {
                    console.log("ERROR");
                    console.log(data);
                    //LoadTable(data);
                }
            });
        }

        //populate data result to the type summary table
        function ReLoadSalesSummary(data) {

            //clear table data
            $("#SalesSummaryTable").find("tr:gt(0)").remove();

            content = "<tr>";
            content += "<td> " + data["User"].toLocaleString() + "</td>";
            content += "<td> " + data["TotalSales"].toLocaleString() + "</td>";
            content += "<td> " + data["TotalQuotation"].toLocaleString() + "</td>";
            content += "<td> " + data["TotalProcurement"].toLocaleString() + "</td>";
            content += "<td> " + data["TotalJobOrder"].toLocaleString() + "</td>";
            content += "</tr>";

            $(content).appendTo("#SalesSummaryTable");
        }

        function ShowSalesReportMsg(sDate, eDate, filter) {
            sDate = moment(sDate).format("MMM DD YYYY");
            eDate = moment(eDate).format("MMM DD YYYY");
            $("#Act-Sales-Filter-Msg").show();
            $("#Act-Sales-Filter-Msg").text("Showing " + filter + " Report from " + sDate +" to " + eDate+ " ");
        }


        function CreateActivity() {
            $("#ActivityCreate").modal("show");
        }

        //DELETE
        function DeleteActivity(id) {
            if (confirm("Do you want to remove this activity?")) {
                ajax_DeleteActivity(id);
            }
        }

        function ajax_DeleteActivity(id) {

            //build json object
            var data = {
                id: id
            };

            console.log(data);

            var url = '/Activities/DeleteActivityRecord';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'text',
                success: function (data) {
                    console.log("ATTEMPTING DELETE");
                    console.log(data);
                    ReloadActivitySummary();
                },
                error: function (data) {
                    console.log("ERROR");
                ReloadActivitySummary();
                    console.log(data);
                }
            });
        }



    /**
      *  Activity Summary
      **/
    function ReloadActivitySummary() {
            //Get URL Parameters
            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var sDate = urlParams.get('sDate');
            var eDate = urlParams.get('eDate');
            var user  = '@ViewBag.User';

            //eDate = moment(eDate).format('MM/DD/YYYY');

            //build json object
            var data = {
                user: user,
                sDate: sDate,
                eDate: eDate
            };

            //request data from server using ajax call
            $.ajax({
                url: '/Activities/GetUserActivitySummary',
                //url: 'CustEntMains/TableResult',
                type: "GET",
                data: data,
                dataType: 'json',
                success: function (data) {
                    console.log("Reloading table");
                    UpdateActivityTable(data);
                },
                error: function (data) {
                    console.log("ERROR");
                    console.log(data);
                    //LoadTable(data);
                }
            });
        }

        //populate data result to the type summary table
        function UpdateActivityTable(data) {
            var isAdmin = "@ViewBag.IsAdmin";
            //clear table data
            $("#Act-Main-Table").find("tr:gt(0)").remove();

            for (let i = 0; i < data.length; i++){
                var id = data[i]["Id"];
                content = "<tr>";
                content += "<td> " + moment(data[i]["Date"]).format("MMM-DD YYYY") + "</td>";
                content += "<td> " + data[i]["ProjectName"] + "</td>";
                content += "<td> " + data[i]["SalesCode"] + "</td>";
                content += "<td> " + data[i]["Amount"].toLocaleString() + "</td>";
                content += "<td> " + data[i]["Status"] + "</td>";
                content += "<td> " + data[i]["Type"] + "</td>";
                content += "<td> " + data[i]["ActivityType"] + "</td>";
                content += "<td> " + data[i]["Company"] + "</td>";
                content += "<td> " + data[i]["Remarks"] + "</td>";
                content += "<td> " + data[i]["Assigned"] + "</td>";
                
                //check if user is admin
                if (isAdmin == "True") {
                    content += "<td> " + data[i]["Points"] + "</td>";
                    content += "<td> ";
                    content += " <a class='cursor-hand' onclick='EditActivity(" + id + ")'>Edit</a> | ";
                    content += " <a class='cursor-hand' onclick='DeleteActivity(" + id + ")'>Delete</a> ";
                    content += "</td> ";
                }


                content += "</tr>";
                $(content).appendTo("#Act-Main-Table");
            }
        }

</script>
