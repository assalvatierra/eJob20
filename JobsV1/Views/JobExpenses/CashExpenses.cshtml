@model IEnumerable<JobsV1.Models.JobExpenses>

@{
    ViewBag.Title = "Expenses";
    Layout = "~/Views/Shared/_ModuleLayout_NoMenu.cshtml";
}

@Html.Partial("~/Views/Shared/Menu.cshtml", null, new ViewDataDictionary { { "ROOTMENUID", 3 } })


<h3>@ViewBag.JobOrderName </h3>

<p>
    Date: @ViewBag.jobDate.ToString("dd/MMM/yyyy")
    <br />Description: @ViewBag.jobDesc - @ViewBag.jobstatus
    <br />@Html.ActionLink("Edit", "Edit", "JobMains", new { id = ViewBag.JobMainId }, null)
    | @Html.ActionLink("Details", "Details", "JobMains", new { id = ViewBag.JobMainId }, null)
</p>

<p>
    @Html.ActionLink("Services", "JobServices", "JobOrder", new { JobMainId = ViewBag.JobMainId }, null) |
    @Html.ActionLink("Itinerary", "JobItinerary", "JobItineraries", new { id = ViewBag.JobMainId }, null) |
    @Html.ActionLink("Notes", "JobNotes", "JobMains", new { id = ViewBag.JobMainId }, null) |
    @Html.ActionLink("Payments", "Payments", "JobPayments", new { id = ViewBag.JobMainId }, null) |
    Expenses
</p>

<h3> Agreed Amount : Php @ViewBag.jobAmount.ToString("#,###.00")  </h3>

<table class="table table-borderless" id="jobExpenseTbl" style="border:1px solid lightgray;">
    <tr>
        <td width="700">
            <b> Payment </b>
        </td>
        <td></td>
        <td></td>
    </tr>
    @foreach (var payments in ViewBag.PaymentRecord as IEnumerable<JobsV1.Models.JobPayment>)
    {
        <tr style="color:#28598f">
            <td>
                &nbsp; &nbsp;
                @payments.Bank.BankName
            </td>
            <td>
                @payments.PaymentAmt.ToString("#,###.00")
            </td>
            <td>
                @payments.Remarks
            </td>
        </tr>
    }


    <tr style="font-weight:bold;background-color:#dddddd">
        <td>Total Payment: </td>
        <td colspan="2">@ViewBag.totalPayment.ToString("#,###.00") </td>
    </tr>

</table>

<table class="table table-borderless" id="jobExpenseTbl" style="border:1px solid lightgray;">

    <tr>
        <td width="700">
            <b>
                Expenses
            </b>
        </td>
        <td colspan="3"></td>
    </tr>
    @foreach (var services in ViewBag.jobservices as IEnumerable<JobsV1.Models.JobServices>)
    {
        <tr>
            <td colspan="4">
                &nbsp; &nbsp;
                @if (services.ActualAmt != null)
                {
                    <text>
                        @services.Particulars (@services.ActualAmt.Value.ToString("#,###.00"))
                    </text>
                }
                else
                {
                    <text> @services.Particulars (0)</text>
                }
                | @Html.ActionLink("Add Expense", "JobExpenses", "JobExpenses", new { id = services.Id }, null)
            </td>
        </tr>
        foreach (var item in Model)
        {
            if (item.JobServicesId == services.Id)
            {

                <tr style="color:#28598f">
                    <td>
                        &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
                        @if (item.DtExpense == null)
                        {
                            <text> - </text>
                        }
                        else
                        {
                            @item.DtExpense.Value.ToString("dd MMM yyyy")
                            <text> - </text>
                        }
                        @item.Expens.Name
                    </td>
                    <td>
                        @item.Amount.ToString("#,###.00")
                    </td>
                    <td>
                        @item.Remarks
                    </td>
                </tr>

            }
        }
    }

    <tr style="font-weight:bold;background-color:#dddddd">
        <td>Total Expenses: </td>
        <td colspan="2">@ViewBag.totalExpenses.ToString("#,###.00") </td>
    </tr>
</table>



<br />
<h3>Posted Income</h3>
<table class="table table-borderless" style="border:1px solid lightgray;">
    <tr>
        <th>Car Rental</th>
        <th>Tour</th>
        <th>Others</th>
        <th>Remarks</th>
        <th></th>
    </tr>
    @foreach (var item in ViewBag.jobPosted as IEnumerable<JobsV1.Models.JobPost>)
    {

        <tr>
            <td>@item.CarRentalInc.ToString("#,###.00")</td>
            <td>@item.TourInc.ToString("#,###.00")</td>
            <td>@item.OthersInc.ToString("#,###.00")</td>
            <td>@item.Remarks</td>
            <td>
                <a href="" id="editPosted" data-toggle="modal" data-target="#editPostedModal" style="margin-bottom:10px;"
                   onclick="editPosted(@item.Id,@item.CarRentalInc,@item.TourInc,@item.OthersInc,'@item.Remarks');">Edit</a>
                | @Html.ActionLink("Delete", "PostedDelete", "JobExpenses", new { id = item.Id }, null)
            </td>
        </tr>

    }

</table>

<div class="jumbotron">
    <div class="container">

        <h3>Summary</h3>
        <h3> Payments:  @ViewBag.totalPayment.ToString("#,###.00") </h3>
        <h3> Expenses:  @ViewBag.totalExpenses.ToString("#,###.00") </h3>
        <h3> Revenue: &nbsp;@ViewBag.totalBalance.ToString("#,###.00")  </h3>
        <span class="hidden" id="RevenueAmt">@ViewBag.totalBalance</span>
    </div>
</div>

<div class="jumbotron">
    <h3>Job Posting</h3>
    <div class="container">
        <div class="col-lg-3">
            <h4> Car Rental </h4>
            <input id="carRentalIncome" type="number" class="form-control" style="width:150px;" value="0" oninput="validatePosted();calcCarIncome();" onkeypress="validate(event)" />
        </div>
        <div class="col-lg-3">
            <h4> Tour </h4>
            <input id="tourIncome" type="number" class="form-control" style="width:150px;" value="0" oninput="validatePosted();calcTour();" onkeypress="validate(event)" />
        </div>
        <div class="col-lg-3">
            <h4> Others </h4>
            <input id="othersIncome" type="number" class="form-control" style="width:150px;" value="0" oninput="validatePosted();" onkeypress='validate(event)' />
        </div>
        <div class="col-lg-8">
            <h4>Remarks</h4>
            <input id="remarksIncome" type="text" width="25" class="form-control" maxlength="80" />
        </div>
        <div class="col-lg-8">
            <!-- Post and Close Buttons -->
            <p style="font-size:12px;margin-top:5px;">
                <input type="checkbox" id="postClose-checkbox" /> Post and Close
            </p>
            <div id="Post-or-close">
                <button class="btn btn-primary" id="PostBtn" onclick="checkInput(@ViewBag.JobMainId, @ViewBag.totalPayment, @ViewBag.totalExpenses, @ViewBag.totalBalance,'PostOrClose')"> Post </button>

                @if (ViewBag.jobstatus != "CLOSED")
                {
                    <button class="btn btn-primary" id="PostBtn" onclick="CloseReloadJob(@ViewBag.JobMainId )"> Close Job </button>
                }
            </div>
            <div id="Post-and-close">
                <button class="btn btn-primary" id="PostBtn" onclick="checkInput(@ViewBag.JobMainId, @ViewBag.totalPayment, @ViewBag.totalExpenses, @ViewBag.totalBalance,'PostAndClose')"> Post and Close </button>
            </div>
            <br />
            <p id="posting-warning-msg" class="text-danger"> Revenue and Total Income does not match </p>
        </div>
    </div>
</div>

<!-- Edit Expenses Modal -->
<div class="modal fade" id="editPostedModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Edit Expenses</h4>
            </div>
            <div class="modal-body row">

                <div class="form-group col-md-12 hidden">
                    <b class="col-md-2 "> Id: </b>
                    <div class="col-md-10">
                        <input type="number" maxlength="12" class="form-control" id="edit-postedId" value="1" />
                    </div>
                </div>


                <div class="form-group col-md-12">
                    <b class="col-md-2 "> Revenue: </b>
                    <div class="col-md-10">
                        <b> @ViewBag.totalBalance.ToString("#,###.00")  </b>
                    </div>
                </div>
                <br />


                <div class="form-group col-md-12">
                    <b class="col-md-2 "> Car Rental: </b>
                    <div class="col-md-10">
                        <input type="number" maxlength="12" class="form-control" id="edit-carRentalInc" value="0" oninput="validatePosted_edit();" onkeypress="validate(event)" />
                    </div>
                </div>
                <br /><br />

                <div class="form-group col-md-12">
                    <b class="col-md-2 "> Tour: </b>
                    <div class="col-md-10">
                        <input type="number" maxlength="12" class="form-control" id="edit-tourInc" value="0" oninput="validatePosted_edit();" onkeypress="validate(event)" />
                    </div>
                </div>
                <br /><br />

                <div class="form-group col-md-12">
                    <b class="col-md-2 "> others: </b>
                    <div class="col-md-10">
                        <input type="number" maxlength="12" class="form-control" id="edit-otherInc" value="0" oninput="validatePosted_edit();" onkeypress="validate(event)" />
                    </div>
                </div>
                <br /><br />

                <div class="form-group col-md-12">
                    <b class="col-md-2 "> Remarks: </b>
                    <div class="col-md-10">
                        <input type="text" maxlength="80" class="form-control" id="edit-postedRemarks" />
                    </div>
                </div>
                <br /><br />

                <div class="form-group col-md-12">
                    <span id="edit-warning-msg" class="col-lg-8 text-danger">The Revenue and Total Income does not match</span>
                </div>

                <!--End of Modal Body-->
            </div>

            <div class="modal-footer">
                <button type="button" id="edit-save" class="btn btn-default" onclick="PostSave()">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script>

    $(document).ready(new function(){
        validatePosted();

        var totalIncome;
        var revenue = $("#RevenueAmt").text();
        //console.log("revenue: "+revenue);

        var revenue = $("#RevenueAmt").text();

        if( $("#carRentalIncome").val() == 0){
            $("#carRentalIncome").val(revenue);
        }

        calcCarIncome();
        calcTour();
        $("#posting-warning-msg").hide();
        $("#Post-and-close").hide();
    });

    /**
      * Expense.js
      * Perform Add, Edit and Remove functions
      * using modal.
      */
    //Add Expense
    function PostJob(jobId,payment,expenses,income) {
        var carRental = $("#carRentalIncome").val();
        var tour = $("#tourIncome").val();
        var others = $("#othersIncome").val() ;
        var remarks = $("#remarksIncome").val();

        //console.log("remarks: " + remarks);
        //build json object

        var data = {
            jobId: jobId,
            paymentAmount: payment,
            expensesAmount : expenses,
            incomeAmount: income,
            carRentalIncome: carRental,
            tourIncome: tour,
            otherIncome: others,
            remarks: remarks
        };

        url = "/JobExpenses/PostJobAccount";

        //Submit data to server using ajax
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log("SUCCESS");
            },
            error: function (data) {
                console.log(data);
            }
        });
    }


    //Close Job
    function CloseJob(jobId) {

        var data = {
            jobId: jobId
        };

        url = "/JobExpenses/closeJob";

        //Submit data to server using ajax
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log("SUCCESS");
            },
            error: function (data) {
                console.log(data);
            }
        });
    }

    //Add Expense
    function CloseReloadJob(jobId) {

        var data = {
            jobId: jobId
        };

        url = "/JobExpenses/closeJob";

        //Submit data to server using ajax
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log("SUCCESS");
            },
            error: function (data) {
                console.log(data);
                location.reload();
            }
        });
    }

    /**
      * Expense.js
      * Perform Add, Edit and Remove functions
      * using modal.
      */
    //Add Expense
    function PostSave() {

        var data = {
            id:            $("#edit-postedId").val(),
            carRentalIncome:  $("#edit-carRentalInc").val(),
            tourIncome:       $("#edit-tourInc").val(),
            otherIncome:      $("#edit-otherInc").val(),
            remarks:          $("#edit-postedRemarks").val()
        };

        url = "/JobExpenses/EditPost";

        //Submit data to server using ajax
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                console.log("SUCCESS");
            },
            error: function (data) {
                console.log(data);
                location.reload();
            }
        });
    }

    //check the input amount of expenses and revenue if equal
    function validatePosted() {
        var carRental = $("#carRentalIncome").val();
        var tour = $("#tourIncome").val();
        var others = $("#othersIncome").val() != null ? $("#othersIncome").val() : 0;
        var total = Number(carRental) + Number(tour) + Number(others);
        var net = @ViewBag.totalBalance;
        var isValid = false;
        console.log("check: "+ net+ " = " + total  );

        if(total == net){
            $("#posting-warning-msg").hide();
            isValid = true;
        }else{
            $("#posting-warning-msg").hide();
            isValid = false;
        }

        if(@ViewBag.totalPayment == 0){;
            $("#posting-warning-msg").hide();
            isValid = false;
        }


        return isValid;
    }

    //validate inputs in the edit modal of expenses
    function validatePosted_edit() {
        var carRental = $("#edit-carRentalInc").val();
        var tour = $("#edit-tourInc").val();
        var others = $("#edit-otherInc").val() != null ? $("#edit-otherInc").val() : 0;
        var total = Number(carRental) + Number(tour) + Number(others);
        var net = @ViewBag.totalBalance;

        if(total == net){
            //valid input - revenue is equal to income
            $("#edit-save").attr("disabled", false);
            $("#edit-warning-msg").hide();
        }else{
            $("#edit-save").attr("disabled", true);
            $("#edit-warning-msg").show();
        }

        if(@ViewBag.totalPayment == 0){
            $("#edit-save").attr("disabled", true);
        }
    }

    //transfer values to the edit modal
    function editPosted(id,carRental, tour, others, remarks){
        $("#edit-postedId").val(id);
        $("#edit-carRentalInc").val(carRental);
        $("#edit-tourInc").val(tour);
        $("#edit-otherInc").val(others);
        $("#edit-postedRemarks").val(remarks);

        validatePosted_edit();
    }

    //handle numbers only
    $('#carRentalIncome,#tourIncome,#othersIncome,#edit-carRentalInc,#edit-tourInc,#edit-otherInc,#edit-postedRemarks').on('input', function () {

        //backspace
        if (isNaN($(this).val())) {
            var txt = $(this);
            txt.val(txt.val().slice(0, -1));
        } else {
            //handle negative number
            if ($(this).val() < 0) {
                $(this).val(0);
            }
        }
        //handle negative number
        if ($(this).val() < 0) {
            $(this).val(0);
        }

    });

    //prevent invalid inputs
    function validate(evt) {
       var theEvent = evt || window.event;
       console.log("validate");

       // Handle paste
       if (theEvent.type === 'paste') {
           key = event.clipboardData.getData('text/plain');
       } else {
       // Handle key press
       var key = theEvent.keyCode || theEvent.which;
           key = String.fromCharCode(key);
       }
       var regex = /[0-9]|\./;
       if (!regex.test(key)) {
           theEvent.returnValue = false;
           if (theEvent.preventDefault) theEvent.preventDefault();
       }
    }

    // CheckInput
    // validate and check if the input from the job income section
    // are numbers and the total are equal to the revenue. Also
    // handles actions with the Post and close buttons
    function checkInput(jobId,payment,expenses,income,postType){
        if(validatePosted()){
            console.log("Check posted ok");
            if(postType == 'PostOrClose'){
                console.log(postType);
                PostJob(jobId,payment,expenses,income);
                location.reload();
            }else if(postType == 'PostAndClose'){
                console.log(postType);
                PostJob(jobId,payment,expenses,income);
                CloseReloadJob(jobId);
                //location.reload();
            }
        }else{
            console.log("Check posted not valid");
            $("#posting-warning-msg").show();
        }
    }

    // Post and Close Check Box
    $('#postClose-checkbox').on('click', function(){
        if ($(this).is(":checked"))
        {
            // it is checked
            $("#Post-or-close").hide();
            $("#Post-and-close").show();
        }else{

            $("#Post-or-close").show();
            $("#Post-and-close").hide();
        }
    });


    function calcCarIncome(){
        console.log("--- Calculate ---");

        var totalIncome;
        var revenue = $("#RevenueAmt").text();

        //if( $("#carRentalIncome").val() == 0){
        //    $("#carRentalIncome").val(revenue);
        //}

        var carIncome = $("#carRentalIncome").val();
        //console.log("carRentalIncome: "+carIncome);
        totalIncome = carIncome;

        //console.log(totalIncome + " != " + revenue);

        if( totalIncome != revenue ){
            var tempTour = revenue - carIncome;
            //console.log("tempTour:" + tempTour);
            $("#tourIncome").val(tempTour);
        }else{
            $("#tourIncome").val(0);
        }

    }

    function calcTour(){
        var totalIncome;
        var revenue = $("#RevenueAmt").text();
        var carIncome = $("#carRentalIncome").val();
        var tourIncome = $("#tourIncome").val();

        totalIncome = parseInt(revenue)- (parseInt(carIncome)+parseInt(tourIncome));
        //console.log("totalIncome:"+totalIncome);

        $("#othersIncome").val(totalIncome);
    }
</script>