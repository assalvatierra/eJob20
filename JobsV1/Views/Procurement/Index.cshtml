@model IEnumerable<JobsV1.Models.SalesLead>

@{
    ViewBag.Title = "Procurement";
    Session["ROOTMENUID"] = 18;
    var SalesStatCode = (List<JobsV1.Models.SalesStatusCode>)ViewBag.StatusCodes;
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    string USER = ViewBag.User;
    bool ISADMIN = ViewBag.IsAdmin;


    var BIDDING = "Bidding Only";
    var FIRM = "Firm Inquiry";
    var BUYING = "Buying Inquiry";
}

<link href="/Content/TableStyles.css" rel="stylesheet" />
<style>
    .link-status {
        padding: 10px;
    }

        .link-status:hover {
            color: white;
        }

    .cursor-hand {
        color: #337ab7;
    }

        .cursor-hand:hover {
            text-decoration: underline;
        }

    .filter-link {
        margin-right: 5px;
    }
</style>

<div class="view-header">
    <h2> Procurement Activities</h2>

    <div class="header-btn-list">
        <div class="btn-group">
            @*@ViewBag.IsAdmin*@
            @*@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })*@
        </div>
    </div>
</div>

<div class="view-content content-min-width">
    <p>
        Filters:
        <span class="label label-primary filter-link">
            @Html.ActionLink("Procurement", "Index", new { sortid = 3 }, new { @id = "status-3", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 3 });}
        </span>
        <span class="label label-primary filter-link">
            @Html.ActionLink("For Approval", "Index", new { sortid = 4 }, new { @id = "status-4", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 4 });}
        </span>
        <span class="label label-primary filter-link">
            @Html.ActionLink("Approved", "Index", new { sortid = 5 }, new { @id = "status-5", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 5 });}
        </span>
        <span class="label label-primary filter-link">
            @Html.ActionLink("Awarded", "Index", new { sortid = 6 }, new { @id = "status-6", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 6 });}
        </span>
        <span class="label label-primary filter-link">
            @Html.ActionLink("Rejected", "Index", new { sortid = 7 }, new { @id = "status-7", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 7 });}
        </span>
        <span class="label label-primary filter-link">
            @Html.ActionLink("Closed", "Index", new { sortid = 8 }, new { @id = "status-8", @class = "link-white" })
            @{Html.RenderAction("GetLeadStatusCount", "SalesLeads", new { statusId = 8 });}
        </span>

        <span class="label label-primary filter-link">
            @Html.ActionLink("All", "Index", new { sortid = 9 }, new { @id = "status-9", @class = "link-white" })
        </span>
    </p>

    <table class="table table-no-border">

        @foreach (var item in Model)
        {

            if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
            {
                var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;
            }


            <tr>
                <td id="lead@(item.Id)" class="td-no-border" style="padding-right: 20px;">
                    <div style="text-align:center;" class="date-box">
                        <span style="color:darkblue; font: bold 12px arial, verdana;">@item.Date.ToString("MMM-yyyy")</span>
                        <br /><span style="color:blue; font: bold 28px arial, verdana;">@item.Date.ToString("dd")</span>
                        <span style="color:blue; font: bold 12px arial, verdana;">(@item.Date.ToString("ddd"))</span>
                        @if (item.Price != 0)
                        {
                            <br /><br /><span style="color:red; font: normal 18px arial, verdana;">@item.Price.ToString("##,###")</span>
                        }
                    </div>

                    <p>
                        <nobr>
                            @if (item.ItemWeight != null)
                            {
                                <a class="cursor-hand" onclick="ShowSalesLeadWeight(@item.Id)">
                                    <img src="~/Images/Icons/icons-weight.png" width="12" />&nbsp;
                                    @item.ItemWeight&nbsp;TONS
                                </a>
                            }
                            else
                            {
                                <a class="cursor-hand" onclick="ShowSalesLeadWeight(@item.Id)">
                                    <img src="~/Images/Icons/icons-weight.png" width="12" />&nbsp;
                                    Update Weight
                                </a>
                            }
                        </nobr>
                    </p>

                    @{
                        foreach (var status in item.SalesStatus)
                        {
                            if (@status.SalesStatusCodeId == 5)
                            {
                                <img src="~/Images/Customers/Category/Active-30.png" height="20" alt="ACCEPTED" />
                            }

                            if (@status.SalesStatusCodeId == 7)
                            {
                                <img src="~/Images/SalesLead/close-icon.png" height="20" alt="ACCEPTED" />
                            }
                        }
                    }

                </td>
                <td>
                    <!--Sales Lead Status-->
                    @Html.Partial("_PartialLeadStatus", item)

                    <div>
                        <!-- Sales Lead Company / Customer Details -->
                        <span style="color:darkgreen;font:bold 16px arial, verdana;">
                            @{
                                try
                                {
                                    if (item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault() != null)
                                    {
                                        var company = item.SalesLeadCompanies.OrderBy(s => s.Id).FirstOrDefault().CustEntMain;

                                        <text>
                                            @company.Name
                                        </text>
                                    }
                                }
                                catch (Exception) { }
                            }
                        </span> |
                        <span style="color:maroon;font:bold 12px arial, verdana;">
                            @Html.DisplayFor(modelItem => item.CustName)

                            @if (item.CustPhone.IsEmpty())
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustPhone)
                            }

                            @if (item.CustEmail.IsEmpty())
                            {
                                <text> / </text>
                                @Html.DisplayFor(modelItem => item.CustEmail)
                            }

                        </span>
                        <span style="margin-left:10px;">
                            @foreach (var salescat in item.SalesLeadCategories)
                            {
                                <img src=@Url.Content(@salescat.SalesLeadCatCode.iconPath)
                                     alt=@salescat.SalesLeadCatCode.CatName height="20" width="20"
                                     title=@salescat.SalesLeadCatCode.CatName />
                            }
                        </span>

                        <!-- Latest Activity Status -->
                        <span>
                            @if (USER == item.AssignedTo || ISADMIN)
                            {
                                if (item.SalesLeadCompanies.FirstOrDefault() != null)
                                {
                                    if (item.SalesLeadCompanies.FirstOrDefault()
                                        .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id).FirstOrDefault() != null)
                                    {

                                        var latestActivity = item.SalesLeadCompanies.FirstOrDefault()
                                            .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id).FirstOrDefault();

                                        <span class="label label-default cursor-hand" onclick="ShowUpdateActivityStatus_Modal(@item.Id)"
                                              style="color:white;">
                                            @latestActivity.CustEntActStatu.Status - @latestActivity.Type
                                        </span>

                                    }
                                }
                            }
                            else
                            {

                                if (item.SalesLeadCompanies.FirstOrDefault() != null)
                                {
                                    if (item.SalesLeadCompanies.FirstOrDefault()
                                       .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id).FirstOrDefault() != null)
                                    {
                                        var latestActivity = item.SalesLeadCompanies.FirstOrDefault()
                                                    .CustEntMain.CustEntActivities.OrderByDescending(c => c.Id).FirstOrDefault();

                                        <span class="label label-default " style="color:white;cursor:no-drop;">
                                            @latestActivity.CustEntActStatu.Status - @latestActivity.Type
                                        </span>
                                    }
                                }
                            }
                        </span>

                        <span style="margin-left:20px;">
                            @Html.ActionLink("[ Details ]", "Details" , new { id = item.Id }, new { @class = "" } )
                        </span>

                        <!-- Sales Lead Details -->
                        <br />
                        <span style="font-weight:600;color:#282828;">
                            @Html.DisplayFor(modelItem => item.SalesCode) -
                        </span>

                        <span style="font-weight:600;color:darkblue;">
                            @Html.DisplayFor(modelItem => item.Details)
                        </span>
                        <br />
                        <span style="font:500 arial, verdana;">
                            @Html.DisplayFor(modelItem => item.Remarks)
                        </span>
                        <br />

                        <!-- Activities -->
                        <!-- Late Loading Procurment / Supplier Activities -->
                        @Html.Partial("_PartialProcActivities", item.SalesLeadSupActivities,
                                    new ViewDataDictionary { { "AssignedTo", item.AssignedTo } , { "IsAdmin", ISADMIN } })

                        <!-- Add Supplier/Procurement Activities -->
                        @if (!String.IsNullOrWhiteSpace(item.SalesCode))
                        {
                            <span>
                                @Html.ActionLink("[ Add Activity ]", "ListProcActivityCodes", new { id = item.Id })
                            </span>
                        }
                        else
                        {
                            <span> Please provide sales code to add procurement activity </span>
                        }

                        <!-- ADMIN ONLY -->
                        <!-- Customer Activites  -->
                        @if (ISADMIN)
                        {
                            <!-- Late Loading Sales / Customer Activities -->
                            if (item.SalesLeadCompanies != null)
                            {

                                var salesActivities = item.SalesLeadCompanies.FirstOrDefault()
                                    .CustEntMain.CustEntActivities
                                    .Where(s => s.SalesCode == item.SalesCode);

                                @Html.Partial("CustActivitiesPartial", salesActivities,
                               new ViewDataDictionary { { "AssignedTo", item.AssignedTo }})
                            }
                        }

                        <!-- Late Loading Procurment / Supplier Activities -->
                        @Html.Partial("_PartialSupplierItems", item.SalesLeadItems)

                        <!--Add Item-->
                        <a id="catbtn" class="cursor-hand" data-toggle="modal" data-target="#selectSupItem" 
                           style="margin-bottom:10px;" 
                           onclick="ShowAddItemModal(@item.Id)"> [ Add Item ] </a>

                        <!--Add Files -->
                        @Html.Partial("_PartialLeadFiles", item.SalesLeadFiles.OrderByDescending(c => c.Id).FirstOrDefault(),
                                new ViewDataDictionary { { "Id", item.Id }, { "FileCount", item.SalesLeadFiles.Count() } })

                        @*<br />*@
                        <span style="font: status-bar; color:gray;">
                            Entered: @Html.DisplayFor(modelItem => item.EnteredBy)
                            @@ @Html.DisplayFor(modelItem => item.DtEntered)
                        </span>
                        <br />
                        <span style="font: status-bar; color:gray;">
                            Assigned: @Html.DisplayFor(modelItem => item.AssignedTo)
                        </span>
                    </div>
                </td>
            </tr>
        }

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="2">
                    <h3 class="text-center text-muted"> No Sales Lead Found </h3>
                </td>
            </tr>
        }

    </table>
</div>


@{Html.RenderPartial("_AddItemModal", null, null);}
@{Html.RenderPartial("_AddItemRateModal", null, new ViewDataDictionary { { "ItemSuppliers", ViewBag.cItemSupplier } });}
@{Html.RenderPartial("_CreateSupRateModal", null, null);}
@{Html.RenderPartial("_EditSupRateModal", null, null);}
@{Html.RenderPartial("_AddLeadWeight");}

@section scripts
{
    <script type="text/javascript" src="~/Scripts/Filters/FormInputFilter.js"></script>
    <script type="text/javascript" src="~/Scripts/Job/Scroll.js"></script>
    <script type="text/javascript" src="~/Scripts/Procurement/AddItemRateModal.js"></script>
    <script type="text/javascript" src="~/Scripts/Procurement/ProcAddItemRate.js"></script>
    <script type="text/javascript" src="~/Scripts/Procurement/CreateSupItemRate.js"></script>
    <script type="text/javascript" src="~/Scripts/Procurement/EditSupItemRate.js"></script>
    <script type="text/javascript" src="~/Scripts/Procurement/Procurement.js"></script>
    <script type="text/javascript" src="~/Scripts/SalesLead/AddLeadFileLink.js"></script>
    <script type="text/javascript">

        //Scroll to lead using ID on page ready
        $(document).ready(function () {
           if ('@(ViewBag.LeadId)' != '') {
                $('html, body').animate({
                    scrollTop: $("#lead@(ViewBag.LeadId)").offset().top - 50
                }, 0);
            }

            //Status Filters
            if(@((int)Session["SLFilterID"]) != null){
                var statusId = @((int)Session["SLFilterID"]);
                switch(statusId){
                    case statusId:
                        $("#status-" + statusId).css("color","black")
                        $("#status-" + statusId).parent().addClass("label-default");
                        $("#status-" + statusId).parent().removeClass("label-primary");
                        break;
                    default:
                        $("#status-3").css("color","black")
                        break;
                }
            }


        });


        function UpdateLeadItemStatus(leadItemId, statusId ) {

            $.post('/Procurement/UpdateLeadItemStatus',  { id: leadItemId, statusId: statusId })
                .done((result) => {
                    console.log(result);
                    if (result == "True") {
                        window.location.reload(false);
                    } else {
                        alert("Unable to Update Sales Lead Item Status");
                    }
                })
                .fail((err) => {
                    alert("Unable to Update Sales Lead Item Status");
                });
        }



        function ShowSalesLeadWeight(leadId) {
            $("#AddLeadWeight-LeadId").val(leadId);

            $("#AddLeadWeightModal").modal("show");
        }

        function Submit_AddSalesLeadWeight() {
            var leadId = $("#AddLeadWeight-LeadId").val();
            var input_weight = $("#AddLeadWeight-Weight").val();

            console.log("leadID:" + leadId);
            console.log("input_weight:" + input_weight);

            $.post("/SalesLeads/UpdateLeadWeight", { id: leadId, weight : input_weight })
                .done(() => {
                    window.location.reload(false);
                })
                .fail(() => {
                    console.log("Unable to update weight");
                });
        }

        function UpdateProcActivity_Edit(activityId) {
            window.location.href = "/Procurement/EditProcActivityCode/" + activityId;
        }

    </script>

}
