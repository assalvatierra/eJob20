@model JobsV1.Models.ReportingViewModels.JobSummaryDetails
@{
    ViewBag.Title = "Job Summary Details";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";

    decimal Triplog_Rate = 0;
    decimal Triplog_Rate_Addon = 0;
    decimal Triplog_RateOT = 0;
    decimal Triplog_TotalRate = 0;
    decimal Triplog_TotalRate_RB = 0;
    decimal Triplog_TotalRate_Supplier = 0;

    decimal Triplog_DriverAmount = 0;
    decimal Triplog_DriverOT = 0;
    decimal Triplog_DriverRate = 0;
    decimal Triplog_DriverAmount_RB = 0;
    decimal Triplog_DriverAmount_Supplier = 0;

    decimal Expenses_Amount = 0;
    decimal Expenses_Payment = 0;
    decimal Expenses_Request = 0;
    decimal Expenses_Request_3rdParty = 0;

    decimal Receivables_Amount = 0;
    decimal Receivables_Payment = 0;
    decimal Receivables_Deposit = 0;

    decimal TotalTriplog_Rate = 0;
    decimal TotalNetAmount = 0;

    decimal decimal_zero = 0;
    int TriplogCount = 0;
}

<h2>Job Summary Details</h2>
<p>
    @Html.ActionLink("Back to List", "JobSummary") |
    @Html.ActionLink("Job Details", "JobServices", "JobOrder", new { jobMainId = Model.Id }, null)
</p>

<h4>
    Job#:
    <a href="/JobOrder/JobServices?JobMainId=@Model.Id">@Model.Id</a>
</h4>
<h4> Account: @Model.Account </h4>
<h4> STATUS: @Model.Status </h4>
<h3> Amount: <b>@Model.Amount.ToString("#,##0.00")</b></h3>
<hr />


<h4> Triplogs </h4>
<table class="table">
    <tr>
        <th>
            #
        </th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Driver
        </th>
        <th>
            Rate
        </th>
        <th>
            Addon
        </th>
        <th>
            OT
        </th>
        <th>
            Drivers
        </th>
        <th>
            OT
        </th>
    </tr>

    @foreach (var trip in Model.TripLogs.OrderBy(d => d.DtTrip))
    {

        Triplog_Rate += trip.Rate;
        Triplog_Rate_Addon += trip.Addon;
        Triplog_RateOT += trip.AddonOT ?? decimal_zero;

        Triplog_DriverRate += trip.DriverFee;
        Triplog_DriverOT += trip.DriverOT;
        Triplog_DriverAmount += trip.DriverFee + trip.DriverOT;

        if (trip.crLogUnit.crLogOwner.Name == "Realbreeze")
        {
            Triplog_DriverAmount_RB += trip.DriverFee + trip.DriverOT;
            Triplog_TotalRate_RB += trip.Rate + trip.Addon + (trip.AddonOT ?? decimal_zero);
        }
        else
        {
            Triplog_DriverAmount_Supplier += trip.DriverFee + trip.DriverOT;
            Triplog_TotalRate_Supplier += trip.Rate + trip.Addon + (trip.AddonOT ?? decimal_zero);
        }

        TriplogCount = TriplogCount + 1;

        <tr>
            <td>
                <a href="/Personel/CarRentalLog/Details/@trip.Id">@trip.Id</a>
            </td>
            <td>
                @trip.DtTrip.ToString("MMM dd yyyy")
            </td>
            <td>
                @trip.crLogUnit.Description (@trip.crLogUnit.crLogOwner.Name)
            </td>
            <td>
                @trip.crLogDriver.Name
            </td>
            <td>
                @trip.Rate
            </td>
            <td>
                @trip.Addon
            </td>
            <td>
                @trip.AddonOT
            </td>
            <td>
                @trip.DriverFee.ToString("#,##0.00")
            </td>
            <td>
                @trip.DriverOT.ToString("#,##0.00")
            </td>

        </tr>
    }

    @{
        Triplog_TotalRate += Triplog_Rate + Triplog_Rate_Addon + Triplog_RateOT;
    }
    <tr>
        <td colspan="4">
            Triplog Count: @TriplogCount
        </td>
        <td>
            @Triplog_Rate.ToString("#,##0.00")
        </td>
        <td>
            @Triplog_Rate_Addon.ToString("#,##0.00")
        </td>
        <td>
            @Triplog_RateOT.ToString("#,##0.00")
        </td>
        <td>
            @Triplog_DriverRate.ToString("#,##0.00")
        </td>
        <td>
            @Triplog_DriverOT.ToString("#,##0.00")
        </td>
    </tr>
    <tr>
        <td colspan="1">
        </td>
        <td colspan="2">
        </td>
        <td colspan="1">
            <br />
            <br />
            RealBreeze:
            <br />
            Supplier:
        </td>
        <td colspan="1">
            <b>
                @Triplog_TotalRate.ToString("#,##0.00")
            </b>
            <span hidden>
                <br />
                @Triplog_TotalRate_RB.ToString("#,##0.00")
                <br />
                @Triplog_TotalRate_Supplier.ToString("#,##0.00")
            </span>
        </td>
        <td colspan="2">
        </td>
        <td colspan="1">
            <br />
            <br />
            RealBreeze:
            <br />
            Supplier:
        </td>
        <td colspan="1">

            Total <br />
            <b>
                @Triplog_DriverAmount.ToString("#,##0.00")
            </b>
            <span hidden>
                <br />
                @Triplog_DriverAmount_RB.ToString("#,##0.00")
                <br />
                @Triplog_DriverAmount_Supplier.ToString("#,##0.00")
            </span>
        </td>
    </tr>
</table>

<hr />

<h4> Expenses </h4>
<table class="table">
    <tr>
        <th>#</th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Status
        </th>
        <th>
            Type
        </th>
        <th>
            Amount
        </th>
    </tr>

    @foreach (var expense in Model.Expenses.Where(e => (e.ApTransStatu.Status == "Returned" || e.ApTransStatu.Status == "Closed" || e.ApTransStatu.Status == "Released") && e.ApTransCategory.Name != "3rd Party Expenses").OrderBy(e => e.DtInvoice))
    {
        if (expense.ApTransStatu.Status == "Returned" || expense.ApTransStatu.Status == "Closed" || expense.ApTransStatu.Status == "Released")
        {
            Expenses_Amount += expense.Amount;
            Expenses_Payment += expense.ApTransPayments.Sum(c => c.ApPayment.Amount);
        }
        else
        {
        }
        <tr>
            <td>
                <a href="/Payables/ApTransactions/Details/@expense.Id">@expense.Id</a>
            </td>
            <td width="120">
                @expense.DtInvoice.ToString("MMM dd yyyy")
            </td>
            <td>
                @expense.Description
                <span class="text-muted"> @expense.Remarks </span>
            </td>
            <td>
                @expense.ApTransStatu.Status
            </td>
            <td>
                @expense.ApTransType.Type
            </td>
            <td>
                @if (expense.ApTransStatu.Status == "Returned" || expense.ApTransStatu.Status == "Closed" || expense.ApTransStatu.Status == "Released")
                {
                    @expense.Amount.ToString("#,##0.00")
                }
                else
                {
                    <span class="text-muted">  @expense.Amount.ToString("#,##0.00")</span>
                }

            </td>
        </tr>
    }
    <tr>
        <td colspan="5">
        </td>
        <td>
            Total <br />
            <b>
                @Expenses_Amount.ToString("#,##0.00")
            </b>
        </td>
    </tr>
</table>

<hr />

<h4> 3rd Party Expenses </h4>
<table class="table">
    <tr>
        <th>#</th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Status
        </th>
        <th>
            Type
        </th>
        <th>
            Amount
        </th>
    </tr>

    @foreach (var expense in Model.Expenses.Where(e => (e.ApTransStatu.Status == "Request" || e.ApTransStatu.Status == "Approved" || e.ApTransStatu.Status == "Returned" || e.ApTransStatu.Status == "Closed" || e.ApTransStatu.Status == "Released") && e.ApTransCategory.Name == "3rd Party Expenses").OrderBy(e => e.DtInvoice))
    {
        Expenses_Request_3rdParty += expense.Amount;

        <tr>
            <td>
                <a href="/Payables/ApTransactions/Details/@expense.Id">@expense.Id</a>
            </td>
            <td width="120">
                @expense.DtInvoice.ToString("MMM dd yyyy")
            </td>
            <td>
                @expense.Description
                <span class="text-muted"> @expense.Remarks </span>
            </td>
            <td>
                @expense.ApTransStatu.Status
            </td>
            <td>
                @expense.ApTransType.Type
            </td>
            <td>
                <span class="text-muted">  @expense.Amount.ToString("#,##0.00")</span>
            </td>
        </tr>
    }
    <tr>
        <td colspan="5">
        </td>
        <td>
            Total <br />
            <b>
                @Expenses_Request_3rdParty.ToString("#,##0.00")
            </b>
        </td>
    </tr>
</table>

<hr />

<h4> Expenses Requests </h4>
<table class="table">
    <tr>
        <th>#</th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Status
        </th>
        <th>
            Type
        </th>
        <th>
            Amount
        </th>
    </tr>

    @foreach (var expense in Model.Expenses.Where(e => (e.ApTransStatu.Status == "Requested" || e.ApTransStatu.Status == "New" || e.ApTransStatu.Status == "Approved") && e.ApTransCategory.Name != "3rd Party Expenses").OrderBy(e => e.DtInvoice))
    {
        Expenses_Request +=  expense.Amount;
        <tr>
            <td>
                <a href="/Payables/ApTransactions/Details/@expense.Id">@expense.Id</a>
            </td>
            <td width="120">
                @expense.DtInvoice.ToString("MMM dd yyyy")
            </td>
            <td>
                @expense.Description
                <span class="text-muted"> @expense.Remarks </span>
            </td>
            <td>
                @expense.ApTransStatu.Status
            </td>
            <td>
                @expense.ApTransType.Type
            </td>
            <td>
                <span class="text-muted">  @expense.Amount.ToString("#,##0.00")</span>
            </td>
        </tr>
    }
    <tr>
        <td colspan="5">
        </td>
        <td>
            Total <br />
            <b>
                @Expenses_Request.ToString("#,##0.00")
            </b>
        </td>
    </tr>
</table>

<hr />

<h4> Receivables </h4>
<table class="table">
    <tr>
        <th>
            #
        </th>
        <th>
            Date
        </th>
        <th>
            Description
        </th>
        <th>
            Status
        </th>
        <th>
            Amount
        </th>
        <th>
            Collected
        </th>
        <th>
            Deposited
        </th>
    </tr>

    @foreach (var receivables in Model.Receivables)
    {
        Receivables_Amount += receivables.Amount;
        Receivables_Payment += receivables.ArTransPayments.Sum(c => c.ArPayment.Amount);
        Receivables_Deposit += receivables.ArTransDeposits.Sum(c => c.ArDeposit.Amount);
        <tr>
            <td>
                <a href="/Receivables/ArTransactions/Details/@receivables.Id"> @receivables.Id</a>
            </td>
            <td>
                @receivables.DtInvoice.ToString("MMM dd yyyy")
            </td>
            <td>
                @receivables.Description
            </td>
            <td>
                @receivables.ArTransStatu.Status
            </td>
            <td>
                @receivables.Amount.ToString("#,##0.00")
            </td>
            <td>
                @receivables.ArTransPayments.Sum(c => c.ArPayment.Amount).ToString("#,##0.00")
                <br />
                @if (receivables.ArTransPayments.Count > 0)
                {
                    foreach (var payments in receivables.ArTransPayments.ToList())
                    {
                        <span class="text-muted">@payments.ArPayment.ArPaymentType.Type</span><br />
                        <span class="text-muted">
                            @payments.ArPayment.Remarks
                        </span>
                    }
                }

            </td>
            <td>
                @receivables.ArTransDeposits.Sum(c => c.ArDeposit.Amount).ToString("#,##0.00")
                @if (receivables.ArTransDeposits.Count > 0)
                {
                    foreach (var payments in receivables.ArTransDeposits.ToList())
                    {
                        <br /><span class="text-muted">@payments.ArDeposit.ArDepositBank.AccountName</span>
                    }

                }
            </td>
        </tr>
    }
    <tr>
        <td colspan="5">
        </td>
        <td>
            Payment <br />
            <b>@Receivables_Payment.ToString("#,##0.00")</b>
        </td>
        <td>
            Deposited <br />
            <b>@Receivables_Deposit.ToString("#,##0.00")</b>
        </td>
    </tr>
</table>

<hr />

@{ TotalNetAmount = Receivables_Payment - Expenses_Amount - Expenses_Request_3rdParty - Triplog_DriverAmount; }

<div style="padding:25px;background-color:#e8e8e8;">
    <h2> Summary </h2>
    <h3> Invoice Amount: <b>@Model.Amount.ToString("#,##0.00")</b></h3>
    <h3> Collected Amount:  <b>@Receivables_Payment.ToString("#,##0.00")</b></h3>
    <h3> Expense Amount:  <b>@Expenses_Amount.ToString("#,##0.00")</b></h3>
    <h3> Drivers Amount:  <b>@Triplog_DriverAmount.ToString("#,##0.00")</b></h3>
    <hr />
    <h3> Net Amount:  <b>@TotalNetAmount.ToString("#,##0.00")</b></h3>
</div>