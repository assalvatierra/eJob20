@model JobsV1.Models.Supplier

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Supplier</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = "60" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        <b class="control-label col-md-2 ">
            Code
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })
            @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2 ">
            Telephone
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact1, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })
            @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2 ">
            Fax
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact2, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })
            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2 ">
            Mobile
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact3, new { htmlAttributes = new { @class = "form-control", @maxlength = "25" } })
            @Html.ValidationMessageFor(model => model.Contact3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @maxlength = "40" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @maxlength = "70" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.TextAreaFor(model => model.Details, 10, 40, new { htmlAttributes = new { @class = "form-control", @maxlength = "240" } })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        <b class="control-label col-md-2 ">
            Country
        </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.c, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <b class="control-label col-md-2 ">
            Country
        </b>
        <div class="col-md-10">
            @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <b class="control-label col-md-2 ">
            City
        </b>
        <div class="col-md-10">
            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SupplierTypeId, "SupplierTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SupplierTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SupplierTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
