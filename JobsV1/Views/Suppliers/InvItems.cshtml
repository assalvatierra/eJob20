@model IEnumerable<JobsV1.Models.SupplierInvItem>

@{
    ViewBag.Title = "InvItems";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<h2>Inventory Product</h2>

<h3>@ViewBag.SupplierName</h3>
<a href="" id="catbtn" data-toggle="modal" data-target="#ItemAddModal" style="margin-bottom:10px;">Add Product</a>


<table class="table">
    <tr>
        <th>
            Product
        </th>
        <th>
            Particulars
        </th>
        <th>
            Material
        </th>
        <th>
            Price (Validity)
        </th>
        <th>
            Remarks
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <b>
                    ( @Html.DisplayFor(modelItem => item.InvItem.ItemCode) )
                    @Html.DisplayFor(modelItem => item.InvItem.Description)
                </b>
            </td>
            <td colspan="4">
            </td>
            <td>
                <a href="#" id="catbtn" data-toggle="modal" data-target="#createInvRate" onclick="AddRateInitial(@item.Id, '(@item.InvItem.ItemCode) @item.InvItem.Description')">Add Rate</a> |
                <a href="#" onclick="conformDelete(@item.Id, ' (@item.InvItem.ItemCode) @item.InvItem.Description ')"> Remove </a>
            </td>
        </tr>
        foreach (var rate in item.SupplierItemRates)
        {
            <tr>
                <td></td>
                <td>
                    @Html.DisplayFor(modelItem => rate.Particulars)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rate.Material)
                </td>
                <td>
                    <p>
                        <b style="color:green;"> @rate.ItemRate / @rate.SupplierUnit.Unit </b>
                        ( @DateTime.Parse(rate.DtValidFrom).ToString("MMM dd, yyyy") - @DateTime.Parse(rate.DtValidTo).ToString("MMM dd, yyyy") )

                    </p>
                    <p>
                        @rate.Remarks
                    </p>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rate.Remarks)
                </td>
                <td>

                    <a href="#" id="catbtn" data-toggle="modal" data-target="#editInvRate" onclick="editInvRate(@rate.Id, '@rate.Particulars', '@rate.Material', @rate.ItemRate , @rate.SupplierUnit.Id, '@rate.DtValidFrom', '@rate.DtValidTo', '@rate.Remarks', @rate.SupplierInvItemId, '@rate.By','@rate.ProcBy' ,'@rate.TradeTerm', '@rate.Tolerance')">Edit</a> |
                    <a href="#" onclick="confirmRateDelete(@rate.Id, 'Php @rate.ItemRate / @rate.SupplierUnit.Unit')"> Remove </a>

                </td>
            </tr>
        }
    }

</table>
@Html.ActionLink("Back to Supplier Details", "Details", new { id = ViewBag.SupplierId })

<!-- Add Item Modal -->
<div class="modal fade" id="ItemAddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Item List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <div class="list-group" id="categorylist">

                    @foreach (var productList in ViewBag.ItemList as IEnumerable<JobsV1.Models.InvItem>)
                    {
                        <a class="list-group-item cursor-hand" onclick="ajax_addProduct(@productList.Id,@ViewBag.SupplierId)">
                            @Html.DisplayFor(modelItem => productList.ItemCode)
                            <span>-</span>
                            @Html.DisplayFor(modelItem => productList.Description)
                            <span>-</span>
                            @Html.DisplayFor(modelItem => productList.Remarks)
                        </a>

                    }
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@{Html.RenderPartial("CreateInvRate", (IEnumerable<JobsV1.Models.SupplierInvItem>)ViewBag.InvItems,
                                    new ViewDataDictionary { { "SupplierId", ViewBag.Id } , { "Model.Id", ViewBag.Id },
                { "SupplierName", ViewBag.SupplierName } , { "ItemList", ViewBag.ItemList }, { "UnitList", ViewBag.UnitList } });}

@section Scripts{
    <script src="~/Scripts/Job/SupplierAddRate.js"></script>
    <script>
        $(document).ready(new function () {
            var today = moment().format('MM/DD/YYYY');
            var endDate = moment(today).add(3, 'month').format('MM/DD/YYYY');

            $("#InvRate-ValidFrom").val(today);
            $("#InvRate-ValidTo").val(endDate);
        });


        //Create item rate
        function ajax_createInvRate() {

            //build json object
            var data = {
                id: $("#InvRate-ItemId").val(),
                Material: $("#InvRate-Material").val(),
                Particulars: $("#InvRate-Particulars").val(),
                Rate: $("#InvRate-Rate").val(),
                Unit: $("#InvRate-UnitType").find(":selected").val(),
                ValidFrom: $("#InvRate-ValidFrom").val(),
                ValidTo: $("#InvRate-ValidTo").val(),
                Remarks: $("#InvRate-Remarks").val(),
                TradeTerm: $("#InvRate-TradeTerm").val(),
                Tolerance: $("#InvRate-Tolerance").val(),
                By: $("#InvRate-By").val(),
                ProcBy: $("#InvRate-ProcBy").val()
            };

            console.log(data);

            var url = '/Suppliers/AddRateInvItems';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    console.log(data);
                    ShowLoading()
                    location.reload(false);
                }
            });
        }

        function conformDelete(Id, desc) {
            var confirmRes = confirm("Do you want to REMOVE " + desc + " ?");
            if (confirmRes) {
                ajax_deleteInv(Id);
            }
        }

        //Edit Rate click
        function editInvRate(Id, Particulars, Material, Rate, UnitType, ValidFrom, ValidTo, Remarks, SupInvId, By, ProcBy, TradeTerm, Tolerance, DtEntered) {
            $("#EditInvRate-ItemId").val(Id);
            $("#EditInvRate-Particulars").val(Particulars);
            $("#EditInvRate-Material").val(Material);
            $("#EditInvRate-Rate").val(Rate);
            $("#EditInvRate-UnitType").val(UnitType);
            $("#EditInvRate-ValidFrom").val(ValidFrom);
            $("#EditInvRate-ValidTo").val(ValidTo);
            $("#EditInvRate-Remarks").val(Remarks);
            $("#EditInvRate-SupInvId").val(SupInvId);
            $("#EditInvRate-TradeTerm").val(TradeTerm);
            $("#EditInvRate-Tolerance").val(Tolerance);
            $("#EditInvRate-By").val(By);
            $("#EditInvRate-ProcBy").val(ProcBy);
            $("#EditInvRate-DtEntered").val(ProcBy);
        }

        //EDIT PRODUCT
        function ajax_editInvRate() {

            //build json object
            var data = {
                id: $("#EditInvRate-ItemId").val(),
                Particulars: $("#EditInvRate-Particulars").val(),
                Material: $("#EditInvRate-Material").val(),
                Rate: $("#EditInvRate-Rate").val(),
                Unit: $("#EditInvRate-UnitType").find(":selected").val(),
                ValidFrom: $("#EditInvRate-ValidFrom").val(),
                ValidTo: $("#EditInvRate-ValidTo").val(),
                Remarks: $("#EditInvRate-Remarks").val(),
                TradeTerm: $("#EditInvRate-TradeTerm").val(),
                Tolerance: $("#EditInvRate-Tolerance").val(),
                SupInvId: $("#EditInvRate-SupInvId").val(),
                By: $("#EditInvRate-By").val(),
                ProcBy: $("#EditInvRate-ProcBy").val(),
                DtEntered: $("#EditInvRate-DtEntered").val()
            };

            console.log(data);

            var url = '/Suppliers/EditRateInvItems';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    console.log(data);
                    ShowLoading()
                    location.reload(false);
                }
            });
        }

        function conformDelete(Id, desc) {
            var confirmRes = confirm("Do you want to REMOVE " + desc + " ?");
            if (confirmRes) {
                ajax_deleteInv(Id);
            }
        }

        //Item Delete
        function ajax_deleteInv(Id) {

            //build json object
            var data = {
                id: Id,
            };

            console.log(data);

            var url = '/Suppliers/RemoveInvItems';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    console.log(data);
                    ShowLoading()
                    location.reload(false);
                }
            });
        }

        function AddRateInitial(id, itemName) {
            $("#InvRate-ItemId").val(id);
            $("#InvRate-ItemName").text(itemName)
        }

        function confirmRateDelete(id, desc) {
            var res = confirm("Do you want to remove " + desc + "?")
            if (res) {
                ajax_deleteItemRate(id);
            }
        }

        //Item Delete
        function ajax_deleteItemRate(Id) {

            //build json object
            var data = {
                id: Id,
            };

            console.log(data);

            var url = '/Suppliers/RemoveRateInvItem';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    console.log(data);
                    ShowLoading()
                    location.reload(false);
                }
            });
        }


        function conformDelete(Id, desc) {
            var confirmRes = confirm("Do you want to REMOVE " + desc + " ?");
            if (confirmRes) {
                ajax_deleteInv(Id);
            }
        }

        //Item Delete
        function ajax_deleteInv(Id) {

            //build json object
            var data = {
                id: Id,
            };

            console.log(data);

            var url = '/Suppliers/RemoveInvItems';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    ShowLoading()
                    console.log(data);
                    location.reload(false);
                }
            });
        }

        //Item Delete
        function ajax_addProduct(invId, supId) {

            //build json object
            var data = {
                invID: invId,
                supID: supId
            };

            console.log(data);

            var url = '/Suppliers/AddInvItems';

            //Post data from server using ajax call
            $.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: 'application/json; charset=utf-8',
                success: function (data) {
                    // console.log("SUCCESS");
                    ShowLoading()
                    console.log(data);
                    location.reload(false);
                },
                error: function (data) {
                    // console.log("ERROR");
                    ShowLoading()
                    console.log(data);
                    location.reload(false);
                }
            });
        }

        function ShowLoading() {
            $("#overlay").show();
        }


        function HideLoading() {
            $("#overlay").hide();
        }
    </script>
}
