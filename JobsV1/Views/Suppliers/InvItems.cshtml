@model IEnumerable<JobsV1.Models.SupplierInvItem>

@{
    ViewBag.Title = "InvItems";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<h2>Inventory Product</h2>

<h3>@ViewBag.SupplierName</h3>
<a href="" id="catbtn" data-toggle="modal" data-target="#ItemAddModal" style="margin-bottom:10px;">Add Product</a> 


<table class="table">
    <tr>
        <th>
            Product
        </th>
        <th>
            Particulars
        </th>
        <th>
            Material
        </th>
        <th>
            Price (Validity)
        </th>
        <th>
            Remarks
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td >
            <b>
                ( @Html.DisplayFor(modelItem => item.InvItem.ItemCode) )
                @Html.DisplayFor(modelItem => item.InvItem.Description)
            </b>
        </td>
        <td colspan="4">

        </td>
        <td>
            <a href="#" id="catbtn" data-toggle="modal" data-target="#createInvRate" onclick="AddRateInitial(@item.Id, '(@item.InvItem.ItemCode) @item.InvItem.Description')">Add Rate</a> | 
            <a href="#" onclick="conformDelete(@item.Id, ' (@item.InvItem.ItemCode) @item.InvItem.Description ')"> Remove </a>
        </td>
    </tr>
    foreach (var rate in item.SupplierItemRates)
    {
    <tr>
       <td></td>
        <td>
            @Html.DisplayFor(modelItem => rate.Particulars )
        </td>
        <td>
            @Html.DisplayFor(modelItem => rate.Material )
        </td>
        <td>
           <p>
               <b style="color:green;"> @rate.ItemRate / @rate.SupplierUnit.Unit </b>
               ( @DateTime.Parse(rate.DtValidFrom).ToString("MMM dd, yyyy") - @DateTime.Parse(rate.DtValidTo).ToString("MMM dd, yyyy") )
           
           </p>
           <p>
              @rate.Remarks  
           </p>
        </td>
        <td>
            @Html.DisplayFor(modelItem => rate.Remarks)
        </td>
        <td>
           
            <a href="#" id="catbtn" data-toggle="modal" data-target="#editInvRate" onclick="editInvRate(@rate.Id, '@rate.Particulars', '@rate.Material', @rate.ItemRate , @rate.SupplierUnit.Id, '@rate.DtValidFrom', '@rate.DtValidTo', '@rate.Remarks', @rate.SupplierInvItemId, '@rate.By','@rate.ProcBy' ,'@rate.TradeTerm', '@rate.Tolerance')">Edit</a> |
            <a href="#" onclick="confirmRateDelete(@rate.Id, 'Php @rate.ItemRate / @rate.SupplierUnit.Unit')"> Remove </a>

        </td>
    </tr>
    }
}

</table>
@Html.ActionLink("Back to Supplier Details", "Details", new { id = ViewBag.SupplierId }) 

<!-- Add Item Modal -->
<div class="modal fade" id="ItemAddModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Item List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <div class="list-group" id="categorylist">

                    @foreach (var productList in ViewBag.ItemList as IEnumerable<JobsV1.Models.InvItem>)
                    {
                        <a href="" class="list-group-item" onclick="ajax_addProduct(@productList.Id,@ViewBag.SupplierId)">
                            @Html.DisplayFor(modelItem => productList.ItemCode)
                            <span>-</span>
                             @Html.DisplayFor(modelItem => productList.Description)
                            <span>-</span>
                            @Html.DisplayFor(modelItem => productList.Remarks)
                        </a>

                    }
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

@{Html.RenderPartial("CreateInvRate", (IEnumerable<JobsV1.Models.SupplierInvItem>)ViewBag.InvItems,
                                new ViewDataDictionary { { "SupplierId", ViewBag.Id } , { "Model.Id", ViewBag.Id },
                { "SupplierName", ViewBag.SupplierName } , { "ItemList", ViewBag.ItemList }, { "UnitList", ViewBag.UnitList } });}


<script>
  
    function conformDelete(Id, desc){
        var confirmRes = confirm("Do you want to REMOVE " + desc + " ?");
        if(confirmRes){
            ajax_deleteInv(Id);
        }
    }

    //Item Delete
    function ajax_deleteInv(Id) {

        //build json object
        var data = {
            id: Id,
        };

        console.log(data);

        var url = '/Suppliers/RemoveInvItems';

        //Post data from server using ajax call
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                // console.log("SUCCESS");
            },
            error: function (data) {
                // console.log("ERROR");
                console.log(data);
                location.reload();
            }
        });
    }
    
    //Item Delete
    function ajax_addProduct(invId, supId) {

        //build json object
        var data = {
            invID: invId,
            supID: supId
        };

        console.log(data);

        var url = '/Suppliers/AddInvItems';

        //Post data from server using ajax call
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                // console.log("SUCCESS");
            },
            error: function (data) {
                // console.log("ERROR");
                console.log(data);
                location.reload();
            }
        });
    }


</script>