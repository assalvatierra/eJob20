@model JobsV1.Models.Supplier

@{
    ViewBag.Title = "Supplier Details";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<h2>Supplier Details</h2>

<div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>

    <hr />
    <h3>@Model.Name</h3>
    <p> @Model.Contact1 
    
        @if (Model.Contact2 != null)
        {
            <span>/ @Model.Contact2</span> 
        }

        @if (Model.Contact3 != null)
        {
            <span>/ @Model.Contact3</span>
        }
     </p>
    <p> <b>Email:</b>  @Model.Email </p>
    <p> <b>Details:</b>  @Model.Details </p>
    <p> <b>City:</b>  @Model.City.Name </p>
    <p> <b>Type:</b>  @Model.SupplierType.Description </p>
  
</div>
<br />
<div >
    <h3> Supplier Contact </h3>
    <div class="col-lg-12">
        <a href="#" id="catbtn" data-toggle="modal" data-target="#createSupContact">Add Contact</a>
    </div>

    <table class="table"> 
        <tr>
            <th>Name</th>
            <th>Landline</th>
            <th>Mobile</th>
            <th>Skype</th>
            <th>Viber</th>
            <th>Remarks</th>
            <th></th>
        </tr>

        @foreach (var contact in ViewBag.supContacts as IEnumerable<JobsV1.Models.SupplierContact>)
        {

            <tr>
                <td>@contact.Name</td>
                <td>@contact.Landline</td>
                <td>@contact.Mobile</td>
                <td>@contact.SkypeId</td>
                <td>@contact.ViberId</td>
                <td>@contact.Remarks</td>
                <td>
                    <a href="#" id="catbtn" data-toggle="modal" data-target="#editSupContact"
                       onclick="EditContactInitial(@contact.Id, '@contact.Name','@contact.Landline', '@contact.Mobile', '@contact.SkypeId' ,'@contact.ViberId', '@contact.Remarks') ">Edit</a> |
                    <a href="#" onclick="ConfirmRemoveContact(@contact.Id,'@contact.Name')">Remove</a>
                </td>
            </tr>
        }

    </table>
</div>


@{Html.RenderPartial("InvItemsPartial", (IEnumerable<JobsV1.Models.SupplierInvItem>)ViewBag.InvItems,
                new ViewDataDictionary { { "SupplierId", Model.Id } , { "Model.Id", Model.Id },
                { "SupplierName", ViewBag.SupplierName } , { "ItemList", ViewBag.ItemList }, { "UnitList", ViewBag.UnitList } });}
            @*ViewBag.SupplierId = id;
            ViewBag.SupplierName = db.Suppliers.Find(id).Name;
            ViewBag.ItemList = db.InvItems.ToList();
            ViewBag.UnitList = db.SupplierUnits.ToList();*@
<!-- Prereq Scripts -->
<script src="~/Scripts/jquery-3.3.1.js"> </script>

@{ Html.RenderPartial("CreateSupContact", new { ViewBag.InvItems }); }
@{ Html.RenderPartial("EditSupContact"); }

<script>

    //display confirmation message for removal of contact
    function ConfirmRemoveContact(id, name) {
        var res = confirm("Do you want to remove " + name + " ?")
        if(res){
            ajax_deleteContactId(id);
        }
    }

    
    //Contact Delete
    function ajax_deleteContactId(Id) {

        //build json object
        var data = {
            id: Id
        };

        console.log(data);

        var url = '/Suppliers/deleteSupContact';

        //Post data from server using ajax call
        $.ajax({
            url: url,
            type: "POST",
            data: data,
            dataType: 'application/json; charset=utf-8',
            success: function (data) {
                // console.log("SUCCESS");
            },
            error: function (data) {
                // console.log("ERROR");
                console.log(data);
                location.reload();
            }
        });
    }
</script>