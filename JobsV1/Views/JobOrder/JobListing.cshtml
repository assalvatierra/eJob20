@model IEnumerable<JobsV1.Controllers.cJobOrder>

@{
    ViewBag.Title = "Job Listing";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<h2>Job Listing</h2>

<p>
    @Html.ActionLink("Create New", "jobCreate", null, null)
    <!--
    | @Html.ActionLink("Work In Progress", "Index", "JobOrder", new { span = 30 }, null)
    | Listing
    | @Html.ActionLink("Job Table", "JobTable", "JobMains", new { span = 30 }, null)
    | @Html.ActionLink("Availability", "Availability", "InvItems")
        -->
</p>

<p>
    Filters:
    @Html.ActionLink("OnGoing", "JobListing", "JobOrder", new { sortid = 1 }, new { @id = "ongoing" }) |
    @Html.ActionLink("Previous", "JobListing", "JobOrder", new { sortid = 2 }, new { @id = "previous" }) |
    @Html.ActionLink("Closed", "JobListing", "JobOrder", new { sortid = 3 }, new { @id = "closed" })
</p>

<table class="table table-condensed">
    <tr>
        <th width="7%">
            From
        </th>
        <th width="7%">
            To
        </th>
        <th width="40%">
            Company
        </th>
        <th width="15%">
            Rate/Payment
        </th>
        <th width="30%">
         
        </th>
    </tr>
    @{ 
        decimal total_rate = 0;
        decimal total_payment = 0;
        decimal total_collectible = 0;

    }
    @foreach (var item in Model)
    {
        <tr>
            <td>
               @if (@item.Services.FirstOrDefault() != null)
               {
                   string s1 = ((DateTime)item.Services.FirstOrDefault().Service.DtStart).ToString("MMM-dd (ddd)");
                   @s1
               }
               else
               {
                   string s1 = (item.Main.JobDate).ToString("MMM-dd (ddd)");
                   @s1

               }
            </td>
            <td>
                @if (@item.Services.FirstOrDefault() != null)
                {

                    string s2 = ((DateTime)item.Services.LastOrDefault().Service.DtEnd).ToString("MMM-dd (ddd)");
                    @s2
                }
            </td>
            <td>
                @if (item.Main.JobStatus.Status == "INQUIRY")
                {
                    <span style="color:#056912">
                        <span style="font-weight:bold;">
                            @item.Company
                        </span>

                        <span>/</span>
                        <span>@item.Main.Customer.Name</span>

                        <span>-</span>
                        <span>
                            @item.Main.Description
                        </span>
                        <span>
                            [ @item.Main.JobStatus.Status ]
                        </span>
                    </span>
                }
                else
                {
                    <span style="color:black">
                        <span style="font-weight:bold;">
                            @item.Company
                        </span>

                        <span>/</span>
                        <span>@item.Main.Customer.Name</span>

                        <span>-</span>
                        <span>
                            @item.Main.Description
                        </span>
                        <span>
                            [ @item.Main.JobStatus.Status ]
                        </span>
                    </span>
                }

            </td>
            <td>
                @{ 

                    total_rate += item.Main.AgreedAmt != null ? (decimal)item.Main.AgreedAmt: 0;
                    total_payment += item.Payment;
                    total_collectible = total_rate - total_payment;

                }

                @if (item.Main.AgreedAmt != 0)
                {
                    <span style="color:blue; font: bold 12px arial, verdana;">
                        @string.Format("{0:N0}", item.Main.AgreedAmt) 
                    </span>
                }
                 
                @if (item.Payment != 0)
                {
                    <span>/ </span>
                    <span style="color:green; font: bold 12px arial, verdana;">
                      @string.Format("{0:N0}", item.Payment)
                    </span>

                    //if Paid in Paypal
                    if (item.Main.JobPayments.Where(s => s.JobMainId == item.Main.Id).FirstOrDefault().BankId == 5)
                    {
                        <span>
                            Paid in
                            <img src="~/Images/paypal.png" width="20" height="20" alt="Paid through paypal" />
                        </span>
                    }
                }
            </td>
            <td>
                @Html.ActionLink("[ Job Details ]", "JobServices", new { JobMainId = item.Main.Id }, null)
                @Html.ActionLink("[ Booking ]", "BookingDetails", new { id = item.Main.Id }, null)
                @Html.ActionLink("[ Invoice ]", "BookingDetails", new { id = item.Main.Id, iType = 1 }, null)
                @Html.ActionLink("[ Payment ]", "Payments", "JobPayments", new { id = item.Main.Id}, null)
                @Html.ActionLink("[ Expenses ]", "CashExpenses", "JobExpenses", new { jobId = item.Main.Id }, null)
                @Html.ActionLink("[ Send Invoice ]", "SendEmail", new { jobId = item.Main.Id, mailType = "CLIENT-INVOICE-SEND" }, null)
            </td>
        </tr>
    }

    <tr style="font-weight:bold;background-color:#dddddd">
        <td colspan="3"></td>
        <td> @string.Format("{0:N0}", total_rate)  / @string.Format("{0:N0}", total_payment)  </td>
        <td> Total Collectible: @string.Format("{0:N0}", total_collectible)  </td>
    </tr>

</table>

@if (ViewBag.CurrentMonth != null)
{
    <br />
    <h4>Closed Jobs for current month</h4>
    <table class="table table-condensed">
        <tr>
            <th width="7%"> From </th>
            <th width="7%"> To </th>
            <th width="40%"> Description</th>
            <th width="15%">Payment / Expenses </th>
            <th width="30%"> </th>
        </tr>
            @{
                decimal current_totalPayment = 0;
                decimal current_totalExpenses = 0;
                decimal current_total = 0;
            }
            @foreach (var item in ViewBag.CurrentMonth as IEnumerable<JobsV1.Controllers.cJobOrder>)
            {

            <tr>
                <td>
                    @if (@item.Services.FirstOrDefault() != null)
                    {
                        string s1 = ((DateTime)item.Services.FirstOrDefault().Service.DtStart).ToString("MMM-dd (ddd)");
                        @s1
                    }
                    else
                    {
                        string s1 = (item.Main.JobDate).ToString("MMM-dd (ddd)");
                        @s1

                    }
                </td>
                <td>
                    @if (@item.Services.FirstOrDefault() != null)
                    {

                        string s2 = ((DateTime)item.Services.LastOrDefault().Service.DtEnd).ToString("MMM-dd (ddd)");
                        @s2
                    }
                </td>
                <td>
                    @if (item.Main.JobStatus.Status == "INQUIRY")
                    {
                        <span style="color:#056912">
                            <span style="font-weight:bold;">
                                @item.Company
                            </span>
                            <span>/</span>
                            <span>@item.Main.Customer.Name</span>

                            <span>-</span>
                            <span>
                                @item.Main.Description
                            </span>
                        </span>
                    }
                    else
                    {
                        <span style="color:black">
                            <span style="font-weight:bold;">
                                @item.Company
                            </span>
                            <span>/</span>
                            <span>@item.Main.Customer.Name</span>
                            <span>-</span>
                            <span>
                                @item.Main.Description
                            </span>
                            <span>
                            </span>
                        </span>
                    }
                </td>
                <td>
                    <!--Payment-->
                    @{
                        current_totalPayment += item.Payment;
                    }
                    @if (item.Payment != 0)
                    {
                        <span style="color:green; font: bold 12px arial, verdana;">
                            @string.Format("{0:N0}", @item.Payment)
                        </span>
                        if (item.Main.JobPayments.Where(s => s.JobMainId == item.Main.Id).FirstOrDefault().BankId == 5)
                        {
                            <span>
                                Paid in
                                <img src="~/Images/paypal.png" width="20" height="20" alt="Paid through paypal" />
                            </span>
                        }
                    }

                    <!--Expenses-->                    
                    @{current_totalExpenses += item.Expenses;}
                    @if (item.Expenses != 0)
                    {
                        <span>/ </span>
                        <span style="color:orangered ; font: bold 12px arial, verdana;">
                            @string.Format("{0:N0}", item.Expenses)
                        </span>
                    }
                    
                    <!--Calculate Payment - Expenses -->
                    @{current_total += current_totalPayment - current_totalExpenses;}
                </td>
                <td>
                    @Html.ActionLink("[ Job Details ]", "JobServices", new { JobMainId = item.Main.Id }, null)
                    @Html.ActionLink("[ Booking ]", "BookingDetails", new { id = item.Main.Id }, null)
                    @Html.ActionLink("[ Invoice ]", "BookingDetails", new { id = item.Main.Id, iType = 1 }, null)
                    @Html.ActionLink("[ Payment ]", "Payments", "JobPayments", new { id = item.Main.Id }, null)
                    @Html.ActionLink("[ Expenses ]", "CashExpenses", "JobExpenses", new { jobId = item.Main.Id }, null)
                    @Html.ActionLink("[ Send Invoice ]", "SendEmail", new { jobId = item.Main.Id, mailType = "CLIENT-INVOICE-SEND" }, null)
                </td>
            </tr>
            }

        <tr style="font-weight:bold;background-color:#dddddd">
            <td colspan="3"></td>
            <td> @string.Format("{0:N0}", current_totalPayment)  / @string.Format("{0:N0}", current_totalExpenses)  </td>
            <td> Total Income: @string.Format("{0:N0}", current_total)  </td>
        </tr>
    </table>
    
}


@if (ViewBag.olderOpenJobs != null)
{
    <br />
    <h4>Older Open Jobs</h4>
    <table class="table table-condensed">
        <tr>
            <th width="7%"> From </th>
            <th width="8%"> To </th>
            <th width="40%"> Description</th>
            <th width="15%">Rate / Payment </th>
            <th width="30%"> </th>
        </tr>
        @{ 
            decimal old_totalRate = 0;
            decimal old_totalPayment = 0;
            decimal old_total = 0;
        }
        @foreach (var item in ViewBag.olderOpenJobs as IEnumerable<JobsV1.Controllers.cJobOrder>)
        {
            <tr>
                <td>
                    @if (@item.Services.FirstOrDefault() != null)
                    {
                        string s1 = ((DateTime)item.Services.FirstOrDefault().Service.DtStart).ToString("MMM-dd (ddd)");
                        @s1
                    }
                    else
                    {
                        string s1 = (item.Main.JobDate).ToString("MMM-dd (ddd)");
                        @s1

                    }
                </td>
                <td>
                    @if (@item.Services.FirstOrDefault() != null)
                    {

                        string s2 = ((DateTime)item.Services.LastOrDefault().Service.DtEnd).ToString("MMM-dd (ddd)");
                        @s2
                    }
                </td>
                <td>
                    @if (item.Main.JobStatus.Status == "INQUIRY")
                    {
                        <span style="color:#056912">
                            <span style="font-weight:bold;">
                                @item.Company
                            </span>

                            <span>/</span>
                            <span>@item.Main.Customer.Name</span>

                            <span>-</span>
                            <span>
                                @item.Main.Description
                            </span>
                            <span>
                                [ @item.Main.JobStatus.Status ]
                            </span>
                        </span>
                    }
                    else
                    {
                        <span style="color:black">
                            <span style="font-weight:bold;">
                                @item.Company
                            </span>

                            <span>/</span>
                            <span>@item.Main.Customer.Name</span>

                            <span>-</span>
                            <span>
                                @item.Main.Description
                            </span>
                            <span>
                                [ @item.Main.JobStatus.Status ]
                            </span>
                        </span>
                    }

                </td>
                <td>
                    @{ old_totalRate += item.Main.AgreedAmt != null ? (decimal)item.Main.AgreedAmt: 0; }
                    @if (item.Main.AgreedAmt != 0)
                    {
                        <span style="color:blue; font: bold 12px arial, verdana;">
                            @string.Format("{0:N0}", item.Main.AgreedAmt)
                        </span>

                    }
                    <span>/ </span>

                    @{ old_totalPayment += item.Payment; }
                    @if (item.Payment != 0)
                    {
                        <span style="color:green; font: bold 12px arial, verdana;">
                            @string.Format("{0:N0}", item.Payment)
                        </span>
                        if (item.Main.JobPayments.Where(s => s.JobMainId == item.Main.Id).FirstOrDefault().BankId == 5)
                        {
                            <span>
                                Paid in
                                <img src="~/Images/paypal.png" width="20" height="20" alt="Paid through paypal" />
                            </span>
                        }
                    }

                    @{ old_total = old_totalRate - old_totalPayment; }
                </td>
                <td>
                    @Html.ActionLink("[ Job Details ]", "JobServices", new { JobMainId = item.Main.Id }, null)
                    @Html.ActionLink("[ Booking ]", "BookingDetails", new { id = item.Main.Id }, null)
                    @Html.ActionLink("[ Invoice ]", "BookingDetails", new { id = item.Main.Id, iType = 1 }, null)
                    @Html.ActionLink("[ Payment ]", "Payments", "JobPayments", new { id = item.Main.Id }, null)
                    @Html.ActionLink("[ Expenses ]", "CashExpenses", "JobExpenses", new { jobId = item.Main.Id }, null)
                    @Html.ActionLink("[ Send Invoice ]", "SendEmail", new { jobId = item.Main.Id, mailType = "CLIENT-INVOICE-SEND" }, null)
                </td>
            </tr>
        }

        <tr style="font-weight:bold;background-color:#dddddd">
            <td colspan="3"></td>
            <td> @string.Format("{0:N0}", old_totalRate) / @string.Format("{0:N0}", old_totalPayment)   </td>
            <td> Total Collectible:  @string.Format("{0:N0}", old_total) </td>
        </tr>
    </table>

}

@Html.Partial("PartialViewJS")

<p>
      @Html.ActionLink("Create New", "jobCreate", null, null)
    | @Html.ActionLink("Work In Progress", "Index", "JobOrder", new { span = 30 }, null)
    | Listing
    | @Html.ActionLink("Job Table", "JobTable", "JobMains", new { span = 30 }, null)
    | @Html.ActionLink("Availability", "Availability", "InvItems")
</p>

<p>
    Filters:
    @Html.ActionLink("OnGoing", "Index", new { sortid = 1 }, new { @id = "ongoing-bot" }) |
    @Html.ActionLink("Previous", "Index", new { sortid = 2 }, new { @id = "previous-bot" }) |
    @Html.ActionLink("Closed", "Index", new { sortid = 3 }, new { @id = "closed-bot" })
</p>

@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            initialize();

            $('html, body').animate({
                scrollTop: $("#main@(ViewBag.mainId)").offset().top - 50
            }, 500);

        });

        switch(@(Session["FilterID"] != null? (int)Session["FilterID"]: 1 )){
            case 1:
                $("#ongoing").css("color","black")
                $("#ongoing-bot").css("color","black")
                break;
            case 2:
                $("#previous").css("color","black")
                $("#previous-bot").css("color","black")
                break;
            case 3:
                $("#closed").css("color","black")
                $("#closed-bot").css("color","black")
                break;
            default:

                break;
        }

        function updateval(){
            var iDiv = document.getElementbyId('categorylist');

            // Now create and append to iDiv
            var innerDiv = document.createElement('p');
            innerDiv.className = 'list-group-item';

            // The variable iDiv is still good... Just append to it.
            iDiv.appendChild(innerDiv);
        }

    </script>

}
