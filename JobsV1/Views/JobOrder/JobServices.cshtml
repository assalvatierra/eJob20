@model IEnumerable<JobsV1.Models.JobServices>

@{
    ViewBag.Title = "Services";
    System.Collections.ArrayList providers = ViewBag.Providers;
    var iti = ViewBag.Itineraries;
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    var jobVehicle = ViewBag.JobVehicle as JobsV1.Models.JobVehicle;
    var siteconfig = ViewBag.SiteConfig;
}




<div class="modal fade" id="aContractorLink" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Contractor / PO</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                @foreach (var item in providers)
                {
                    if ((string)item == "Provider not defined.")
                    {<p>@item</p> }
                else
                {
                    @Html.ActionLink("[" + @item + "]", "SubDetails", "JobMains", new { id = ViewBag.JobOrder.Id, sProvider = @item }, new { @class = "list-group-item" })
                }

            }

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<div class="view-content">

    <h3>Job Order: @ViewBag.JobOrder.Customer.Name</h3>
    <div>
        <p>

            <!-- Vehicle -->
            Date: @ViewBag.JobOrder.JobDate.ToString("dd/MMM/yyyy")
            <span id="jobVehicleText" style="margin:0;">
                <br />Description: @ViewBag.JobOrder.Description &nbsp;
            </span>
            <br />Encoder: @ViewBag.JobEncoder.user - @ViewBag.JobEncoder.dtTrail
            <br />Status:

            @if (ViewBag.JobStatus == "RESERVATION")
            {
                <text>
                    RESERVED
                </text>
            }
            else
            {
                @ViewBag.JobStatus
            }

            <!-- Change Status -->
            @if (ViewBag.JobStatus == "INQUIRY")
            {
                @Html.ActionLink("(Reserve Job) | ", "ReserveJobStatus", "JobOrder", new { id = ViewBag.JobOrder.Id }, null)
                @Html.ActionLink("(Confirm Job)", "ConfirmJobStatus", "JobOrder", new { id = ViewBag.JobOrder.Id }, null)
            }

            @if (ViewBag.JobStatus == "RESERVATION")
            {
                @Html.ActionLink("(Confirm Job)", "ConfirmJobStatus", "JobOrder", new { id = ViewBag.JobOrder.Id }, null)
            }


            <br />
            @Html.ActionLink("Edit", "JobDetails", "JobOrder", new { jobid = ViewBag.JobOrder.Id }, null)

            @if (siteconfig == "AutoCare")
            {

                <text>
                    |<a data-toggle="modal" data-target="#AddVehicleModal"> Vehicle </a>
                    | @Html.ActionLink("Payments", "Payments", "JobPayments", new { id = ViewBag.JobOrder.Id }, null)
                    | @Html.ActionLink("Repair Order", "RepairOrder", "RptGmsAuto", new { id = ViewBag.JobOrder.Id }, null)
                    | @Html.ActionLink("Servince Billing", "ServiceBilling", "RptGmsAuto", new { id = ViewBag.JobOrder.Id }, null)
                </text>
            }
            else
            {
                <text>
                    | @Html.ActionLink("Booking", "BookingDetails", "JobOrder", new { id = ViewBag.JobOrder.Id }, null)
                    | <a id="aContractorLink" data-toggle="modal" data-target="#aContractorLink">Contractors</a>
                    | @Html.ActionLink("Voucher", "BookingDetails", "JobOrder", new { id = ViewBag.JobOrder.Id, iType = 2 }, null)
                    | @Html.ActionLink("Invoice", "BookingDetails", "JobOrder", new { id = ViewBag.JobOrder.Id, iType = 1 }, null)
                    @*  | @Html.ActionLink("Cash Expenses", "JobExpenses", "CashExpenses", new { id = ViewBag.JobOrder.Id }, null)*@
                </text>



                if (ViewBag.JobStatus == "INQUIRY")
                {
                    <text>
                        | <a onclick="ajaxSendQuotation(@ViewBag.JobOrder.Id)"> Send Quotation </a>
                    </text>
                }

                if (ViewBag.JobStatus == "RESERVATION")
                {
                    <text>
                        | <a onclick="ajaxSendReservation(@ViewBag.JobOrder.Id)"> Send Reservation </a>
                    </text>
                }

                <text>
                    | <a href="#" style="margin-bottom:10px;" onclick="ajaxSendMail(@(ViewBag.JobOrder.Id))"> Send Invoice </a>
                </text>

            }




            @*| @Html.ActionLink("Send Quotation", "SendEmailQuotation", "JobOrder", new { id = ViewBag.JobOrder.Id }, null)*@
        </p>
        <p>
            @if (siteconfig == "Realwheels")
            {
            <span>
                Services |
                @Html.ActionLink("Itinerary", "JobItinerary", "JobItineraries", new { id = ViewBag.JobOrder.Id }, null) |
                @Html.ActionLink("Notes", "JobNotes", "JobMains", new { id = ViewBag.JobOrder.Id }, null) |
                @Html.ActionLink("Payments", "Payments", "JobPayments", new { id = ViewBag.JobOrder.Id }, null) |
                @Html.ActionLink("Expenses", "CashExpenses", "JobExpenses", new { jobId = ViewBag.JobOrder.Id }, null) |
                @Html.ActionLink("Text Confirmation", "TextConfirmation", new { id = ViewBag.JobOrder.Id }, null)

            </span>
            }
        </p>
        </div>

    <h2>Services</h2>

    <table class="table">
        <tr>
            <th>
                Type
            </th>
            <th>
                Particulars
            </th>
            <th>
                Supplier Items
            </th>
            <th>
                Supplier
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            JobsV1.Models.JobServicePickup pickup = item.JobServicePickups.FirstOrDefault();

            <tr>
                <td style="white-space:nowrap">
                    @Html.DisplayFor(modelItem => item.Service.Name)
                    @{
                        string sStart = ((DateTime)item.DtStart).ToString("MMM-dd-yyyy (ddd)");
                        string sEnd = ((DateTime)item.DtEnd).ToString("MMM-dd-yyyy (ddd)");
                    }
                    <p>
                        Start: @sStart
                        <br />
                        End: @sEnd
                    </p>

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Particulars)
                    <br />[Quote: @Html.DisplayFor(modelItem => item.QuotedAmt)]
                    <br />[Supplier: @Html.DisplayFor(modelItem => item.SupplierAmt)]
                    <br />[Remarks: @Html.DisplayFor(modelItem => item.Remarks)]

                    @if (siteconfig == "AutoCare" && item.Service.Name.Contains("Change Oil"))
                    {
                      <br />
                    <span> 
                    [
                        @{Html.RenderAction("GetVehicleOilRemarks");}
                    ]</span>
                    }

                </td>
                <td width="175">
                    @foreach (var svc in item.JobServiceItems)
                    {
                        @Html.DisplayFor(modelItem => svc.InvItem.ItemCode)
                        <br />
                        @Html.DisplayFor(modelItem => svc.InvItem.Description)
                       
                        @Html.ActionLink(" [x]", "JsRemoveItem", new { ItemId = svc.InvItemId, serviceId = item.Id })

                        <br />
                    }
                    @Html.ActionLink("Add Item", "BrowseInvItem_withScheduleJS", new { JobServiceId = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.Name)
                    <br />[ Make/Model: @Html.DisplayFor(modelItem => item.SupplierItem.Description) ]
                </td>
                <td>
                    @if (siteconfig == "Realwheels")
                    {
                    <p>
                        @Html.ActionLink("Edit", "JobServiceEdit", new { id = item.Id }) |
                        @Html.ActionLink("Instructions", "DriverInstructions", new { id = item.Id, mainId = item.JobMainId }) |

                        <br />
                        @Html.ActionLink("Pickup", "InitServicePickup", new { id = item.Id }) |
                        @Html.ActionLink("Itinerary", "JobItinerary", "JobItineraries", new { id = ViewBag.JobOrder.Id, SvcId = item.Id }, null) |
                        @Html.ActionLink("Text Form", "TextMessage", new { id = item.Id })  |
                        @Html.ActionLink("Send Notification", "Notification", new { id = item.Id }) |

                        <br />
                        @if (ViewBag.user == "jahdielvillosa@gmail.com" || ViewBag.user == "assalvatierra@gmail.com")
                        {
                            @Html.ActionLink("Delete", "JobSvcDelete", new { id = item.Id })
                        }
                    </p>
                    }


                    @if (siteconfig == "AutoCare")
                    {
                        <p>
                            @Html.ActionLink("Edit", "JobServiceEdit", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "JobSvcDelete", new { id = item.Id })
                        </p>
                    }

                    @*@Html.ActionLink("Expenses", "JobExpenses", "JobExpenses", new { id = item.Id }, null)*@
                </td>
            </tr>
            <tr>
                <td colspan="4" style="border-top:none">
                    @{string sIti = "";
                        foreach (var ititmp in iti)
                        {
                            if (ititmp.SvcId == item.Id)
                            {
                                if (sIti.Trim() != "") { sIti += ","; }
                                else { sIti += "Destinations:"; }

                                sIti += " " + ititmp.Destination.Description;
                            }
                        }
                    }

                    <span style="font:14px arial, verdana;">
                        @sIti
                    </span>

                </td>
            </tr>

            <tr>
                <td colspan="4" style="border-top:none">
                    @if (pickup != null)
                    {
                        <span style="font:bold 12px arial, verdana;">
                            [ Time: @pickup.JsTime @pickup.JsLocation ]  &nbsp; &nbsp;
                            [ Contact: @pickup.ClientName / <a href="tel:@pickup.ClientContact">@pickup.ClientContact</a> ] &nbsp; &nbsp;
                            [ InCharge: @pickup.ProviderName / <a href="tel:@pickup.ProviderContact">@pickup.ProviderContact</a> ]
                        </span>
                    }
                </td>
            </tr>

        }

    </table>
    <p>
        @Html.ActionLink("Create New", "JobServiceAdd", new { JobMainId = ViewBag.JobMainId })
        <br />@Html.ActionLink("Add Template", "BrowseTemplate", new { JobMainId = ViewBag.JobMainId })
        <br />    @Html.ActionLink("Go to JobOrder", "Index", "JobOrder", new { mainid = ViewBag.JobMainId, sortid = ViewBag.sortid }, null)
        <br />@Html.ActionLink("Go to Sales Lead", "Index", "SalesLeads", null, null)
    </p>


</div>

<!-- Modals -->
@Html.Partial("_AddVehicleModal", null, new ViewDataDictionary { { "VehicleList", ViewBag.Vehicles }, { "JobMainId", ViewBag.JobMainId } })
@Html.Partial("_SearchVehicleModal", null, new ViewDataDictionary { { "VehicleList", ViewBag.Vehicles } })


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Job/JobVehicle.js"></script>
    <script>

            $(document).ready(function () {
                //LoadOverlay();
                //jobActionDisplay('@ViewBag.jobAction');
            });


            function jobActionDisplay(action){
                alert(action);
            }

            //SEND Quotation to client in email
            function ajaxSendQuotation(jobId) {
                var data = {
                    jobId: jobId,
                    docType: "QUOTATION"
                }

                console.log(jobId);
                var serviceURL = '/JobOrder/SendEmailBooking';
                console.log("sending email");

                //loading screen
                LoadOverlay();

                //send email using ajax
                $.ajax({
                    type: "POST",
                    url: serviceURL,
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        console.log('success');
                        disableLoadOverlay();
                        console.log("email sent");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                        $("#overlay2-text").text(jqXHR.responseText);
                        disableLoadOverlay();
                        console.log("Email Sent");
                    }
                });
            }

            //SEND RESERVATION DETAILS IN EMAIL TO CLIENT
            function ajaxSendReservation(jobId) {
                var data = {
                    jobId: jobId,
                    docType: "RESERVATION"
                }

                console.log(jobId);
                var serviceURL = '/JobOrder/SendEmailBooking';
                console.log("sending email");

                //loading screen
                LoadOverlay();

                //send email using ajax
                $.ajax({
                    type: "POST",
                    url: serviceURL,
                    data: JSON.stringify(data),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function () {
                        console.log('success');
                        disableLoadOverlay();
                        console.log("email sent");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(jqXHR.responseText);
                        $("#overlay2-text").text(jqXHR.responseText);
                        disableLoadOverlay();
                        console.log("Email Sent");
                    }
                });
            }

            function LoadOverlay() {
                console.log("load overlay");
                $("#overlay2").css("display", "flex");
            }

            function disableLoadOverlay() {
                console.log("disable overlay");
                $("#overlay2").css("display", "none");
        }


        function ajaxSendMail(jobid) {
            var data = {
                jobId: jobid,
                mailType: "CLIENT-INVOICE-SEND"
            }

            var serviceURL = '/JobOrder/SendEmail';

            //loading screen
            LoadOverlay()

            //send email using ajax
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(){
                    console.log('success');
                    disableLoadOverlay();
                },
                error: function(jqXHR, textStatus, errorThrown) {

                    alert(jqXHR.responseText);
                    disableLoadOverlay();
                }
            });
        }

    </script>
}
