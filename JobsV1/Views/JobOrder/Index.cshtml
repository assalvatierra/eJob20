@model IEnumerable<JobsV1.Controllers.cJobOrder>

@{
    ViewBag.Title = "Work in Progress";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
}

<h2>Job Orders</h2>

<p>
    @Html.ActionLink("Create New", "jobCreate", "JobOrder", null,null)  
   
</p>

<p>
    Filters:
    @Html.ActionLink("OnGoing" , "Index", new { sortid = 1 }, new { @id = "ongoing" }) |
    @Html.ActionLink("Previous", "Index", new { sortid = 2 }, new { @id = "previous"}) |
    @Html.ActionLink("Closed"  , "Index", new { sortid = 3 }, new { @id = "closed"  }) 
</p>

<p>
    @ViewBag.today
</p>

<table class="table">

@foreach (var item in Model) {
    <tr >
        <td id="main@(item.Main.Id)">
            <div style="background-color:lightgray;text-align:center;">
                <span style="color:darkblue; font: bold 12px arial, verdana;">@item.Main.JobDate.ToString("MMM-yyyy")</span>
                <br /><span style="color:blue; font: bold 28px arial, verdana;">@item.Main.JobDate.ToString("dd")</span>
                <span style="color:blue; font: bold 12px arial, verdana;">(@item.Main.JobDate.ToString("ddd"))</span>
                <br /><br /><span style="color:red; font: normal 18px arial, verdana;">&nbsp;</span>
                
                @if (@item.Main.AgreedAmt != 0)
                {
                    <span style="color:blue; font: bold 12px arial, verdana;">
                        @string.Format("{0:N}", @item.Main.AgreedAmt)
                    </span>
                    <br />

                }

                @if (@item.Payment != 0)
                {
                    <span style="color:green; font: bold 10px arial, verdana;">
                        @string.Format("{0:N}", @item.Payment)
                    </span>
                    if (item.Main.JobPayments.Where(s => s.JobMainId == item.Main.Id).FirstOrDefault().BankId == 5)
                    {
                        <br />
                        <span>
                            Paid in
                            <img src="~/Images/paypal.png" width="20" height="20" alt="Paid through paypal" />
                        </span>
                    }
                }
            </div>
        </td>

        <td>
            <div>
                <span style="color:darkgreen;font:bold 16px arial, verdana;">
                    @item.Main.Customer.Name
                </span>

                [
                @Html.ActionLink("Customer Details", "CompanyDetail", new { jobid = item.Main.Id, custid = item.Main.CustomerId}) |
                @Html.ActionLink("Edit Job", "JobDetails", new { jobid = item.Main.Id }) |     
                <a href="#" id="catbtn" data-toggle="modal" data-target="#@item.Main.Id" style="margin-bottom:10px;">Change Company</a>
                ]

                <br />
                <span style="font:500 10px;color:darkblue;">
                    @item.Main.Description 
                   
                </span>
                <span>
                   [ @item.Main.JobStatus.Status ]
                </span>
            </div>
            <div>
                    @Html.Partial("PartialViewServiceList", item.Services)
            </div>

            <p>
                @Html.ActionLink("[ Add New Service ]", "JobServiceAdd", new { JobMainId = item.Main.Id }, null)
            </p>

            <p>
                @Html.ActionLink("[ Job Details ]", "JobServices", new { JobMainId = item.Main.Id }, null)
                @Html.ActionLink("[ Booking ]"    , "BookingDetails", new { id = item.Main.Id }, null)
                @Html.ActionLink("[ Invoice ]"    , "BookingDetails", new { id = item.Main.Id, iType = 1 }, null)
                <a href="#" style="margin-bottom:10px;" onclick="showPaymentModal(@(item.Main.Id))" >[ Payment ]</a>
                <a href="#" style="margin-bottom:10px;" onclick="ajaxSendMail(@(item.Main.Id))">[ Send Invoice ]</a>
                @Html.ActionLink("[ Text Confirmation ]", "TextConfirmation", new { id = item.Main.Id }, null)

                <!--
                 Html.ActionLink("[ Send Email ]", "SendEmail", new { jobId = item.Main.Id , mailType = "CLIENT" }, null)
                   --> 
                 

            </p>
         </td>
    </tr>
       
}
</table>

<div class="modal fade" id="mainid" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Company List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <div class="list-group" id="categorylist">

                    @foreach (var list in ViewBag.companyList as IEnumerable<JobsV1.Models.Customer>)
                    {
                        <!--
                        <a href="Url.Action("ChangeCompany", "JobOrder", new { id = item.Main.Id, newId = list.Id },null)" class="list-group-item"> list.Name</a>
                        -->
                    }
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<!-- Modal Payment -->
<div class="modal fade" id="jobPayment" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Payment Methods</h4>
            </div>

            <div class="modal-body" id="modal2-content">
                <h4>
                    Payment History
                </h4>
                <table class="table" id="paymentList">
                    <tr>
                        <th>Transaction Date</th>
                        <th>Type</th>
                        <th>Amount</th>
                    </tr>
                    
                </table>
                <div id="paymentActions">

                </div>
                <!--
                if (item.Main.JobPayments.Count() != 0)
                {

                    foreach (var payments in item.Main.JobPayments)
                    {
                        string pDate = ((DateTime)payments.DtPayment).ToString("MMM dd,yyyy (ddd)");

                        <p>
                            string.Format("{0:N}", payments.PaymentAmt)
                            <span>-</span>
                            pDate
                        </p>
                    }

                    <span style="color:green;">
                        string.Format("{0:N}", item.Payment)
                        <span>-</span>
                        <span>Total</span>
                    </span>
                }
                else
                {
                    <p>No previous payment</p>
                }

                <hr /><h4> Create New Payment </h4>
                <div class="list-group" id="categorylist">
                    <a href="Url.Action("Payments", "JobOrder", new { id = item.Main.Id}, null)" class="list-group-item">  Payment Transaction</a>
                    <a href="Url.Action("PaymentCreate", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Partial Payment" }, null)" class="list-group-item"> Partial Payment</a>
                    <a href="Url.Action("PaymentCreate", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Full Payment" }, null)" class="list-group-item"> Full Payment</a>
                    <a href="Url.Action("PaymentCreatePG", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Personal Guarentee" }, null)" class="list-group-item"> Personal Guarantee</a>
                </div>
                -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->



@Html.Partial("PartialViewJS")


<p>
    @Html.ActionLink("Create New", "jobCreate", null, null)
    | Work In Progress
    | @Html.ActionLink("Listing", "JobListing", "JobOrder", new { span = 30 }, null)
    | @Html.ActionLink("Job Table", "JobTable", "JobMains", new { span = 30 }, null)
    | @Html.ActionLink("Availability", "Availability", "InvItems")
</p>

<p>
    Filters:
    @Html.ActionLink("OnGoing", "Index", new { sortid = 1 }, new { @id = "ongoing-bot" }) |
    @Html.ActionLink("Previous", "Index", new { sortid = 2 }, new { @id = "previous-bot" }) |
    @Html.ActionLink("Closed", "Index", new { sortid = 3 }, new { @id = "closed-bot" })
</p>

<!-- Modal -->
<div class="modal fade" id="Payment" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Company List</h4>
            </div>

            <div class="modal-body" id="modal2-content">

                <div class="list-group" id="categorylist2">
                    <a href="@Url.Action("ChangeCompany", "JobOrder", new { id = 1}, null)" id="set1" class="list-group-item"> Partial Payment</a>
                    <a href="@Url.Action("ChangeCompany", "JobOrder", new { id = 1},null)" class="list-group-item"> Full Payment</a>
                    <a href="@Url.Action("ChangeCompany", "JobOrder", new { id = 1},null)" class="list-group-item"> Client Assurance</a>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script src="~/Scripts/jquery-3.3.1.js"> </script>
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            initialize();

            var mainId = @(ViewBag.mainId);
            if(mainId != ''){

                $('html, body').animate({
                    scrollTop: $("#main@(ViewBag.mainId)").offset().top - 50
                }, 500);
            }
        });

        
        function LoadOverlay(){
            $("#overlay2").css("display","flex");
        }

        
        function disableLoadOverlay(){
            $("#overlay2").css("display","none");
        }

        switch(@(Session["FilterID"] != null? (int)Session["FilterID"]: 1 )){
            case 1:
                $("#ongoing").css("color","black")
                $("#ongoing-bot").css("color","black")
                break;
            case 2:
                $("#previous").css("color","black")
                $("#previous-bot").css("color","black")
                break;
            case 3:
                $("#closed").css("color","black")
                $("#closed-bot").css("color","black")
                break;
            default:

                break;
        }

        function updateval(){
            var iDiv = $('#categorylist').val();

            // Now create and append to iDiv
            var innerDiv = document.createElement('p');
            innerDiv.className = 'list-group-item';

            // The variable iDiv is still good... Just append to it.
            iDiv.appendChild(innerDiv);
        }


        function ajaxSendMail(jobid) {
            var data = {
                jobId: jobid,
                mailType: "CLIENT-INVOICE-SEND"
            }

            var serviceURL = '/JobOrder/SendEmail';

            //loading screen
            LoadOverlay()

            //send email using ajax
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(){
                    console.log('success');
                    disableLoadOverlay();
                },
                error: function(jqXHR, textStatus, errorThrown) {

                    alert(jqXHR.responseText);
                    disableLoadOverlay();
                }
            });
        }

        /*Payments modal
         *Show Payment modal and retrieve the job payments history
         *and show actions with payments.
         */
        function showPaymentModal(jobId){
            $('#jobPayment').modal('show');
            getPaymentData(jobId);
        }

        /**
        * Payment_Ajax
        * Get Payments transactions of the job
        * using the jobId 
        */
        function getPaymentData(jobId){
            var data = {
                jobId: jobId,
            }

            var serviceURL = '/JobOrder/GetPaymentHistory';


            //send email using ajax
            $.ajax({
                type: "POST",
                url: serviceURL,
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data){
                    console.log('success');
                    console.log(data);
                    jobPayments(data,jobId)
                    //disableLoadOverlay();
                },
                error: function(jqXHR) {

                    alert(jqXHR.responseText);
                    //disableLoadOverlay();
                }
            });
        }

        

        function jobPayments(data,jobId){

            if(data["length"] != 0){
                
                console.log(data["0"]["Amount"]);
            //parse data response to json object
            var temp = data;

            //clear table contents except header
            $("#paymentList").find("tr:gt(0)").remove();

            //remove all link from div actions 
            $("#paymentActions").empty();

                //populate table content
                for (var x = 0; x < temp.length; x++) {
                    var content ="<tr>";
                    content += "<td>" + temp[x]["DtPayment"] + "</td>";
                    content += "<td>" + temp[x]["Type"] + "</td>";
                    content += "<td>" + temp[x]["Amount"] + "</td>";

                    content +="</tr>";
                    
                    console.log();
                    $(content).appendTo("#paymentList");
                }
            }

            var contentAction  = "<a href='/JobOrder/Payments/"+ jobId +"' class='list-group-item'>  Payment Transaction</a>" ;
            contentAction += "<a href='/JobOrder/PaymentCreate?JobMainId="+ jobId +"&remarks=Partial Payment' class='list-group-item'> Partial Payment </a>" ;
            contentAction += "<a href='/JobOrder/PaymentCreate?JobMainId="+ jobId +"&remarks=Full Payment' class='list-group-item'> Full Payment </a>" ;
            contentAction += "<a href='/JobOrder/PaymentCreatePG?JobMainId="+ jobId +"&remarks=Personal Guarentee' class='list-group-item'> Personal Guarantee </a>" ;

             //<a href="Url.Action("PaymentCreate", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Partial Payment" }, null)" class="list-group-item"> Partial Payment</a>
             //<a href="Url.Action("PaymentCreate", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Full Payment" }, null)" class="list-group-item"> Full Payment</a>
             //<a href="Url.Action("PaymentCreatePG", "JobOrder", new { JobMainId = item.Main.Id, remarks = "Personal Guarentee" }, null)" class="list-group-item"> Personal Guarantee</a>
             $(contentAction).appendTo("#paymentActions");
        }

    </script>

}
