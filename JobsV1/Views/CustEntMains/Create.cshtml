@model JobsV1.Models.CustEntMain

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CustEntMain</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @maxlength = 60 } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="col-md-2 control-label"> Code </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @maxlength = 30 } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="col-md-2 control-label"> Landline </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="col-md-2 control-label"> Fax </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="col-md-2 control-label"> Mobile </b>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none;">
        @Html.LabelFor(model => model.iconPath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.iconPath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.iconPath, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" >
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control", @id = "cityId" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <b class="control-label col-md-2"> City </b>
        <div class="col-md-10">
            @Html.DropDownList("CityId", null, htmlAttributes: new { @class = "form-control", @id = "cityId" })
        </div>
    </div>

    <div class="form-group hidden">
        @Html.LabelFor(model => model.AssignedTo, "AssignedTo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AssignedTo", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Exclusive, "Exclusivity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Exclusive", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Exclusive, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/jquery-3.3.1.js"> </script>
<script>
    $(document).ready(new function () {
        var msg ="@ViewBag.Msg";
        if (msg != "") {
            alert("Company Name already exist.");
        }
    });
</script>