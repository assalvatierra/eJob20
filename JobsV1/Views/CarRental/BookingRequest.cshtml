@model JobsV1.Models.CarBookingRequest
@using JobsV1.Models

<link href="~/Content/CarBooking.css" rel="stylesheet">

<div class="booking-container">

    <div class="booking-title">
        <h2> Booking Request </h2>
        @Html.ActionLink("Back to Home", "Index")
        <hr />
    </div>

    <div class="booking-form">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group" hidden>
                    @Html.LabelFor(model => model.DtEncoded, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DtEncoded, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DtEncoded, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("Unit", null, htmlAttributes: new { @class = "form-control", id="UnitDropdown" })
                        @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Destinations,"Destination", htmlAttributes: new { @class = "control-label col-md-2 booking-label-adj" }) 
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Destinations, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. Davao City " } })
                        @Html.ValidationMessageFor(model => model.Destinations, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DtBooking,"Date", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DtBooking, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DtBooking, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @placeholder = "ex. 2 Days " } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    <span class="control-label col-md-2"><b> Rate</b> </span>
                    <div class="col-md-10">
                       <input id="Rate" type="text" class="form-control"  readonly/>
                    </div>
                </div>

                <div class="col-md-offset-2 col-md-12 no-padding">
                    <div class="booking-terms">
                        <p>
                            @*<input type="checkbox" />*@
                            <b> Terms and Conditions</b>
                            <ul>
                                <li> Term 1 </li>
                            </ul>
                        </p>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.GoogleCaptcha()
                        @Html.InvalidGoogleCaptchaLabel("Captcha is not valid !")
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Proceed" class="btn btn-primary" style="width:50%;" />
                        <input value="Cancel" class="btn btn-default" style="width:20%;" />
                    </div>
                </div>
            </div>
        }


    </div>

</div>

@section Scripts{
    <script src="~/Scripts/BookingRequest/DtBooking.js"></script>
    <script>
        $('#UnitDropdown').change(() => {
            console.log("get rate");
            getUnitRate();
        });

        function getUnitRate() {
            var unitID = $('#UnitDropdown option:selected').val();
            $.get("~/CarRental/GetUnitRate", { unitId : unitID }, (result) => {
                console.log(result);
                $("#Rate").text(result);
            });
        }
       
    </script>
 }