@model JobsV1.Models.CarReservation
@using JobsV1.Models
@{
    ViewBag.Title = "Car Rental Reservation Request - RealWheels Car Rental Davao";
    ViewBag.Description =
    @"Car Rental Reservation Request - RealWheels Car Rental Davao.";
    ViewBag.CanonicalURL = Context.Request.Url.AbsoluteUri;
    Layout = "~/Views/Shared/_LayoutLandingPage.cshtml";
    //ViewBag.NoIndex = "noindex";

    //Keyword : Car Rental Reservation
}

<link href="~/Content/CarBooking.css" rel="stylesheet">

<style>

    #section-banner{
        height: 600px;
        padding: 60px 0;
        background-color: #303131;
        background: linear-gradient(to bottom, #303131 0%, #4d4f4f 50%, #303131 100%);
    }

    .input-group{
        margin:10px;

    }

    .input-group-addon{
        min-width:100px;
    }

    p{
        font-size:18px;
    }
</style>

<section id="section-banner">
    <div class="container">
        <div class="col-md-6">
            <div class="booking-container" style="padding:30px;">
                <h2 class="col-lg-12" style="font-weight:700;"> Reservation Request </h2>

                <!-- Unit -->
                <div class="col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon"> Unit </span>
                        <select class="form-control" id="rsvCarUnit">
                            @foreach (var carList in ViewBag.CarUnitList as IEnumerable<JobsV1.Models.CarUnit>)
                            {
                                <option value="@carList.Id">
                                    @carList.Remarks - @carList.Description 

                                </option>
                            }
                        </select>
                    </div>
                </div>

                <!-- Pick Up -->
                <div class="col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-map-marker"></span> Pick-Up
                        </span>
                        <input type="text" class="form-control" placeholder="Enter Pickup Location or Airport" id="rsvLocPickup" maxlength="90"/>
                    </div>
                </div>

                <!-- Pick Up Date -->
                <div class="col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span> Pick-Up
                        </span>
                        <input type="text" class="form-control" id="rsvDate-PickUp" />
                    </div>
                </div>

                <!-- Drop-Off Date -->
                <div class="col-lg-12">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span> Drop-Off
                        </span>
                        <input type="text" class="form-control" id="rsvDate-DropOff" />
                    </div>
                </div>

                <div class="col-lg-12">
                    <button class="btn btn-primary" style="width:95%;font-size:25px;" onclick="ContinueReservation()"> Continue Reservation </button>
                </div>
            </div>
        </div>

        <div class="col-md-6" style="color:white;">
            <h1 style="font-weight:800;color:dodgerblue;"> RealWheels Car Rental </h1>
            <h4> Affordable rent a car in Davao City </h4>
            <img src="~/Images/CarRental/Home/Vehicles/Honda-City-Reservation.png" width="500" title="Honda City Reservation" /> 
        </div>
    </div>
</section>

<div class="container">

    <div class="col-md-12">
        <div class="col-md-12">
            <div class="col-md-12" style="margin:50px 20px;">
                <h1>
                    Car Rental Reservation
                </h1>
                <p>
                    If you are looking to make a car booking reservation is Davao, you should consider us.
                    At <a href="/" title="Realwheels davao car rental">Real Wheel Davao</a> , we provide all our customers with
                    flexible and affordable options when they rent a car.
                    Our offices are located at the heart of Davao City, which makes picking your car rental reservations easy.
                    Additionally, you can opt to have your car dropped on at your hotel or the airport when you make a rental
                    car reservation with us. We aim to be the leading car rental service in Davao by offering clients the best
                    quality of cars at the most affordable rates. Besides the rental car service, we also offer tours and travel
                    packages to our clients. You can make a booking for a guided tour of the interior and experience the scenic
                    views of the Mindanao countryside. If you are planning a trip to Davao City and the surrounding, using a
                    rental car can be the easiest way to get around. Here are a few reasons why your rental car booking should
                    be through <a href="/" title="Realwheels davao car rental">Real Wheel Davao</a>.

                </p>
                <div class="col-md-12">

                    <div class="col-md-6">
                        <img src="~/Images/CarRental/Home/Vehicles/Fleet-Vehicles.png" width="500" title="Honda City Reservation" />
                    </div>
                    <div class="col-md-6">
                        <h2>
                            We Have A Large Fleet of Cars
                        </h2>
                        <p>
                            Whether you are traveling alone or as part of a large group of friends or family, we have a car to suit your needs.
                            You can access a rental minivan, van, SUV, pickup, sedan, MPV, or AUV from us. In short, we have vehicles for every situation.
                        </p>

                        <h2>
                            Affordable Rates
                        </h2>
                        <p>
                            The demand for rental cars has been on the rise as more people discover the benefits of renting a car
                            when traveling. As demand has risen, customer expectations have risen as well. At Real Wheels Davao,
                            we can help you access the highest quality of rental cars at a low cost.
                        </p>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <h2>
                            Stress-Free Booking Process
                        </h2>
                        <p>
                            Our service allows you to book the car online or via a phone call. Whichever option you pick on our website,
                            you can be assured that the process will be stress-free. Our staff will handle your request for a car professionally
                            and it will be waiting for you when you arrive at the hotel or land at the airport. We always listen to the
                            needs of our customers and fulfill them to the best of our abilities.
                        </p>

                        <h2>
                            Professional Staff and Drivers
                        </h2>
                        <p>
                            <a href="/" title="Realwheels davao car rental">Real Wheel Davao</a>  is a professional company that hires professional drivers. When you rent a car from us,
                            you can be assured that we will handle your professionally. For those who opt to use one of our drivers,
                            you can be assured of the highest level of professionalism. The driver will show you around and take you
                            on a guided tour of some of the most popular tourist attractions in Davao and the Mindanao courtside.
                            Besides that, our drivers will ensure that you get to your meeting on time, for those that visit Davao
                            on business. They have excellent knowledge of the road network and they will use it to your benefit.
                        </p>
                        <p>
                            <img src="~/Images/Icons/icon-call-blk.png" width="15" style="margin-right:5px;" />
                            <a href="/CarRental/Contact"> You may also contact us through call or email </a>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <img src="~/Images/CarRental/Home/Article/WhyRentACar/Car-rental-process.jpg" width="450" title="Honda City Reservation" style="margin-top:30px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Reservation Modal -->


    <div class="modal fade" role="dialog" id="ReservationRequestModal" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"> Reservation Request </h4>
                </div>

                <div class="modal-body">

                    <div class="booking-container">
                        
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <div class="col-lg-12 car-unit-select" id="btn-rentalUnit">
                                <h3> Unit Select </h3>
                                <div class="col-md-12 col-xs-12 no-padding">
                                    @foreach (var carList in ViewBag.CarUnitList as IEnumerable<JobsV1.Models.CarUnit>)
                                    {
                                        <span class="btn btn-default rsv-unit-item" onclick="selectUnit(this, @carList.Id)">
                                            <input type="radio" name="cars" value="@carList.Description" id="unit-@(carList.Id)" />
                                            <img src="~/Images/CarRental/@carList.CarImages.Where(c => c.CarUnitId == carList.Id).First().ImgUrl" width="50" alt="@carList.Description Car Rental" />
                                            <b class="unit-desc">@carList.Description </b>

                                            <b class="text-success">
                                                &nbsp; P @{Html.RenderAction("GetUnitDefaultPkgPrice", new { unitId = carList.Id });}
                                            </b>
                                        </span>

                                    }
                                    @Html.ValidationMessageFor(model => model.CarUnitId, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-12 col-xs-12" style="margin-top:20px;padding-left:0px;">

                                </div>
                            </div>

                            <div class="form-horizontal col-md-12">
                                <hr />
                                <h3>Usage Details</h3>
                                <p>Fields with * are required.</p>
                                <label style="color:orangered;display:none" id="dtls-warning-usage"></label>

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2"> Trans.Date* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DtTrx, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DtTrx, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2"> Type </label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("CarResTypeId", null, htmlAttributes: new { @class = "form-control", @id = "rnt-rsvType" })
                                        @Html.ValidationMessageFor(model => model.CarUnitId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2"> Vehicle* </label>
                                    <div class="col-md-10">
                                        @Html.DropDownList("CarUnitId", null, htmlAttributes: new { @class = "form-control", @id = "rnt-carUnit" })
                                        @Html.ValidationMessageFor(model => model.CarUnitId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Start&nbsp;Date* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DtStart, new { htmlAttributes = new { @class = "form-control", @id = "rnt-startDate" } })
                                        @Html.ValidationMessageFor(model => model.DtStart, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Pick&nbsp;Up </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LocStart, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" , @id = "rnt-startLoc"} })
                                        @Html.ValidationMessageFor(model => model.LocStart, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Date&nbsp;End* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DtEnd, new { htmlAttributes = new { @class = "form-control", @id = "rnt-endDate" } })
                                        @Html.ValidationMessageFor(model => model.DtEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Drop&nbsp;Off </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LocEnd, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                                        @Html.ValidationMessageFor(model => model.LocEnd, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Destination* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Destinations, new { htmlAttributes = new { @class = "form-control", @id = "rnt-destination", @maxlength = "50" } })
                                        @Html.ValidationMessageFor(model => model.Destinations, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> No&nbsp;Days* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NoDays, new { htmlAttributes = new { @class = "form-control", @id = "rnt-noDays", @maxlength = "2" } })
                                        @Html.ValidationMessageFor(model => model.Destinations, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Type </label>
                                    <div class="col-md-10" style="margin-top:8px;">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="Rental-WithDriver" value="WithDriver">
                                            <label class="form-check-label" for="Rental-SelftDrive">
                                                With Driver
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="Rental-SelfDrive" value="SelfDrive">
                                            <label class="form-check-label" for="Rental-SelfDrive">
                                                Self Drive
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2"> Rate </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BaseRate, new { htmlAttributes = new { @class = "form-control", @id = "rnt-baseRate", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.BaseRate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2"> Usedfor* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UseFor, new { htmlAttributes = new { @class = "form-control", @id = "rnt-usedfor" } })
                                        @Html.ValidationMessageFor(model => model.UseFor, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    @Html.LabelFor(model => model.EstHrPerDay, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10" disabled="disabled">
                                        @Html.EditorFor(model => model.EstHrPerDay, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.EstHrPerDay, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    @Html.LabelFor(model => model.EstKmTravel, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EstKmTravel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.EstKmTravel, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <!-- Renter Details -->
                                <hr />
                                <h3>Renter Details</h3>
                                <p>
                                    Fields with * are required.
                                    @*<label style="color:orangered;display:none" id="dtls-warning"></label>*@
                                </p>


                                <div class="form-group">
                                    <label class="control-label col-md-2"> Name* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterName, new { htmlAttributes = new { @class = "form-control", @id = "rnt-name", @maxlength = "30" } })
                                        @Html.ValidationMessageFor(model => model.RenterName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Company </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterCompany, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                                        @Html.ValidationMessageFor(model => model.RenterCompany, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Email* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterEmail, new { htmlAttributes = new { @class = "form-control", @id = "rnt-email", @maxlength = "30" } })
                                        @Html.ValidationMessageFor(model => model.RenterEmail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Mobile* </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterMobile, new { htmlAttributes = new { @class = "form-control", @id = "rnt-mobile", @maxlength = "20" } })
                                        @Html.ValidationMessageFor(model => model.RenterMobile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Address </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterAddress, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                                        @Html.ValidationMessageFor(model => model.RenterAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Facebook </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterFbAccnt, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                                        @Html.ValidationMessageFor(model => model.RenterFbAccnt, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2"> Linkedln </label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.RenterLinkedInAccnt, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                                        @Html.ValidationMessageFor(model => model.RenterLinkedInAccnt, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2">JobRefNo</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JobRefNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.JobRefNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2">SelfDrive</label>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.SelfDrive, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SelfDrive, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2">PackageId</label>
                                    <div class="col-md-2">
                                        <input class="form-control" type="text" name="packageid" id="dtls-packageId" value="@ViewBag.pkgId" />
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2">Meals By</label>
                                    <div class="col-md-2">
                                        <input class="form-control" type="text" name="mealAcc" id="dtls-mealsAcc" value="@ViewBag.meals" />
                                    </div>
                                </div>

                                <div class="form-group" hidden>
                                    <label class="control-label col-md-2">Fuel By </label>
                                    <div class="col-md-2">
                                        <input class="form-control" type="text" name="fuel" id="dtls-fuel" value="@ViewBag.fuel" />
                                    </div>
                                </div>

                                <!--Captcha validation-->
                                @*<div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <div id="ReCaptchContainer"></div>
                                    </div>
                                </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        @Html.GoogleCaptcha()
                                        @Html.InvalidGoogleCaptchaLabel("Captcha is not valid !")
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Submit" class="btn btn-primary" style="width:50%;" onclick="LoadingSubmit()" />
                                    </div>
                                </div>
                                <br />
                            </div>
                        }
                    </div>
                </div>

                @*<div class="modal-footer">
                    @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="SubmitCAForm('@ViewBag.DriverId')">Submit</button>
                </div>*@
            </div>
        </div>
    </div>


</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/CarRental/FormRenter.js"></script>
    <script type="text/javascript" src="~/Scripts/CarRental/FormRenterValid.js"></script>
    <script>
        $(() => {
            //Initial
            //select unit on default based on carId
            //set default rental type option to with driver
            $("#Rental-WithDriver").prop("checked", true);
            $("input[name='SelfDrive']").val(0);

            if (@ViewBag.carId == 0) {
            } else {

                selectUnit(null, @ViewBag.carId);
                $("#unit-@ViewBag.carId").parent().addClass("unit-selected");
                $("#unit-@ViewBag.carId").parent().siblings().hide();

            }
        });

        $(".rsv-unit-item").click(() => {
            $(this).children('input').prop("checked", true);
        });

        function selectUnit(e, unitId) {
            $(e).addClass("unit-selected").siblings().removeClass('unit-selected');

            $("#unit-" + unitId).prop("checked", true)
            console.log("Selected Unit: " + unitId);
            $("#rnt-carUnit").val(unitId);
            getUnitRate(unitId);

            //disable type self drive if unitId = 1,2,7
            disableSelfDrive(unitId);
        }

        function disableSelfDrive(unitId) {
            if (unitId == 1 || unitId == 2 || unitId == 7) {
                //disable self drive
                $("#Rental-SelfDrive").prop("disabled", true);

                //remove checked on self drive
                $("#Rental-SelfDrive").prop("checked", false);

                //check with driver
                $("#Rental-WithDriver").prop("checked", true);
                $("input[name='SelfDrive']").val(0);

                console.log("disable self drive");
            } else {
                //enable self drive
                $("#Rental-SelfDrive").prop("disabled", false);
                console.log("enable self drive");
            }
        }

        function getUnitRate(unitID) {
            //var unitID = $('#UnitDropdown option:selected').val();
            $.get("/CarRental/GetUnitRate", { unitId: unitID }, (result) => {
                console.log("rate: " + result);
                $("#rnt-baseRate").val(result);
            });
        }

        function LoadingSubmit() {
            $("#overlay").show();
        }

        $("#Rental-WithDriver").click(() => {
            console.log("check with driver");
            //update  with driver value
            $("input[name='SelfDrive']").val(0);

            //uncheck other option
            $("#Rental-SelfDrive").prop("checked", false);
        });

        $("#Rental-SelfDrive").click(() => {
            console.log("check Self Drive");
            //update selfdrive value
            $("input[name='SelfDrive']").val(1);

            //uncheck other option
            $("#Rental-WithDriver").prop("checked", false);
        });


        function ContinueReservation() {

            console.log("Continue Reservation");
            //show all units again
            $("#btn-rentalUnit").children("div").children("span").show();

            //submit form
            let carUnitId = $("#rsvCarUnit").val();
            let locPickup = $("#rsvLocPickup").val();
            let datePickup = $("#rsvDate-PickUp").val();
            let dateDropOff = $("#rsvDate-DropOff").val();
            console.log("CarUnit: " + carUnitId);
            console.log("datePickup: " + datePickup);

            //transfer to reservation
            $("#rnt-startDate").val(datePickup);
            $("#rnt-endDate").val(dateDropOff);

            $("#rnt-startLoc").val(locPickup);



            SelectedUnit(carUnitId);

            //open modal
            $("#ReservationRequestModal").modal('show');
        }

        function SelectedUnit(id) {
            if (id != 0) {
                selectUnit(null, id);
                $("#unit-" + id).parent().addClass("unit-selected");
                $("#unit-" + id).parent().siblings().hide();
            }
        }

    </script>
}
