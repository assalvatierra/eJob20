@model IEnumerable<ArModels.Models.ArTransaction>

@{
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    ViewBag.Title = "Receivables";

    string status = ViewBag.Status;
    string sortBy = ViewBag.SortBy;
    string orderBy = ViewBag.OrderBy;
    DateTime today = ViewBag.Today;

    bool isAdmin = ViewBag.IsAdmin;

    decimal totalAmount  = 0;
    decimal totalPayment = 0;
    decimal totalDeposit = 0;
    decimal totalBalance = 0;

    decimal GrandTotal   = 0;
    decimal GrandPayment = 0;
    decimal GrandDeposit = 0;
    decimal GrandBalance = 0;


    int STATUS_NEW = 1;
    int STATUS_APPROVAL = 2;
    int STATUS_APPROVED = 3;
    int STATUS_BILLINGSENT = 4;
    int STATUS_SETTLEMENT = 5;
    int STATUS_CANCELLED = 7;
    int STATUS_CLOSED = 6;
}

<h2>Receivables Transactions</h2>
<p>
    @*@Html.ActionLink("Back to Home", "Index", "Home", new { area = "" }, new { @class = "btn btn-link" })*@
</p>
<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

<!-- Filters -->
<div class="btn-group" role="group" style="margin-bottom:5px;">
    <button class="btn btn-default disabled">Filter:</button>
    @if (status == "" || status == null)
    {
        <button type="button" class="btn btn-default active">All </button>
    }
    else
    {
        @Html.ActionLink("All", "Index", new { status = "", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (status == "New")
    {
        <button type="button" class="btn btn-default active"> New </button>
    }
    else
    {
        @Html.ActionLink("New", "Index", new { status = "New", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (status == "For Approval")
    {
        <button type="button" class="btn btn-default active"> For Approved </button>
    }
    else
    {
        @Html.ActionLink("For Approval", "Index", new { status = "For Approval", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (status == "Approved")
    {
        <button type="button" class="btn btn-default active"> Approved </button>
    }
    else
    {
        @Html.ActionLink("Approved", "Index", new { status = "Approved", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }


    @if (status == "Billing Sent")
    {
        <button type="button" class="btn btn-default active"> Sent </button> 
    }
    else
    {
        @Html.ActionLink("Sent", "Index", new { status = "Billing Sent", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (status == "Settlement")
    {
        <button type="button" class="btn btn-default active"> For Settlement </button>
    }
    else
    {
        @Html.ActionLink("For Settlement", "Index", new { status = "Settlement", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (status == "Closed")
    {
        <button type="button" class="btn btn-default active"> Closed </button>
    }
    else
    {
        @Html.ActionLink("Closed", "Index", new { status = "Closed", sortBy = sortBy, orderBy = orderBy }, new { @class = "btn btn-default" })
    }
</div>

<div class="btn-group" role="group" style="margin-bottom:5px;">
    <button type="button" class="btn btn-default disabled"> Sort </button>
    @if (sortBy == "DueDate" || sortBy == null)
    {
        <button type="button" class="btn btn-default active"> Due Date </button>
    }
    else
    {
        @Html.ActionLink("Due Date", "Index", new { status = status, sortBy = "DueDate", orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (sortBy == "InvoiceDate")
    {
        <button type="button" class="btn btn-default active"> Invoice Date </button>
    }
    else
    {
        @Html.ActionLink("Invoice Date", "Index", new { status = status, sortBy = "InvoiceDate", orderBy = orderBy }, new { @class = "btn btn-default" })
    }

    @if (sortBy == "Amount")
    {
        <button type="button" class="btn btn-default active"> Amount </button>
    }
    else
    {
        @Html.ActionLink("Amount", "Index", new { status = status, sortBy = "Amount", orderBy = orderBy }, new { @class = "btn btn-default" })
    }
</div>

<div class="btn-group" role="group" style="margin-bottom:5px;">
    <button type="button" class="btn btn-default disabled"> Order </button>
    @if (orderBy == "ASC" )
    {
        <button type="button" class="btn btn-default active"> Asc </button>
    }
    else
    {
        @Html.ActionLink("Asc", "Index", new { status = status, sortBy = sortBy, orderBy = "ASC" }, new { @class = "btn btn-default" })
    }

    @if (orderBy == "DESC" || orderBy == null)
    {
        <button type="button" class="btn btn-default active"> Desc </button>
    }
    else
    {
        @Html.ActionLink("Desc", "Index", new { status = status, sortBy = sortBy, orderBy = "DESC" }, new { @class = "btn btn-default" })
    }

</div>

<table class="table">
    <tr>
        <th>
            Invoice
        </th>
        <th>
            Ref&nbsp;No.
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InvoiceRef)
        </th>
        <th>
            Account
        </th>
        <th style="min-width:160px;">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            Due
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ArTransStatu.Status)
        </th>
        <th>
            Category
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            Payment
        </th>
        <th>
            Deposited
        </th>
        <th> </th>
    </tr>

    @foreach (var receivablesGroup in Model.GroupBy(r => r.DtDue.ToString("MMMM", null)))
    {

        totalAmount = 0;
        totalPayment = 0;
        totalBalance = 0;
        totalDeposit = 0;

        <tr>
            <td colspan="11">
                <span style="font-weight:900;">
                    @receivablesGroup.Key
                </span>
            </td>
        </tr>

        foreach (var item in receivablesGroup)
        {

            //handle text color based on due date
            string textcolor = "black";
            string bgcolor = "none";

            decimal amountVariance = item.Amount * (decimal)0.1;
            var paymentAmount = item.ArTransPayments.Sum(p => p.ArPayment.Amount);

            if (item.ArTransStatusId < 5)
            {

                if (today.CompareTo(item.DtDue) == 0)
                {
                    textcolor = "black";
                    bgcolor = "lightgray";
                }
                else if (today.CompareTo(item.DtDue) > 0)
                {
                    textcolor = "darkred";
                }
                else if (today.CompareTo(item.DtDue) < 0)
                {
                    textcolor = "black";
                }
                else
                {
                    textcolor = "black";
                }

                if (item.ArTransStatusId == 6)
                {
                    textcolor = "gray";
                }
            }
            else
            {
                textcolor = "darkgreen";
            }

            <tr style="color:@textcolor;background-color:@bgcolor;">
                <td>
                    
                    @item.DtInvoice.ToString("MMM dd yyyy")

                </td>
                <td>
                    @item.Id
                </td>
                <td>
                    @if (item.InvoiceId != 0 && item.InvoiceRef != null)
                    {
                        @*@Html.ActionLink(item.InvoiceRef, "JobServices", "JobOrder", new { area = "", jobMainId = item.InvoiceId }, new { target = "_blank" })*@
                        @Html.ActionLink(item.InvoiceRef, "JobSummaryDetails", "Reporting", new { area = "", id = item.InvoiceId }, new { target = "_blank" })
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.InvoiceRef)
                    }
                </td>
                <td>
                    <span style="font-weight:600;">
                        @*item.ArAccount.Company*@
                        @Html.ActionLink(item.ArAccount.Company + " ", "Details", "ArAccounts", new { id = item.ArAccountId }, null)
                    </span>
                    <br>
                    @if (item.ArAccContact != null)
                    {
                        <span> @item.ArAccContact.Name </span>
                    }
                    <br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)<br />
                    <span style="font-size:11px;color:gray;">
                        @item.DtService.ToString("MMM dd yyyy") -

                        @if (item.DtServiceTo != null)
                        {
                            <span> @DateTime.Parse(item.DtServiceTo.ToString()).ToString("MMM dd yyyy")</span>
                        }

                    </span>
                    @if (!String.IsNullOrEmpty(item.Remarks))
                    {
                        <br /> <span style="font-size:11px;color:gray;">@Html.DisplayFor(modelItem => item.Remarks)</span>
                    }
                </td>

                <td>
                    <span>
                        @item.DtDue.ToString("MMM dd yyyy")
                    </span>
                </td>
                <td>
                    @if (item.ArTransStatusId == 1)
                    {
                        <span class="label label-default">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 2)
                    {
                        <span class="label label-info">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 3)
                    {
                        <span class="label label-primary">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 4)
                    {
                        <span class="label label-primary">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 5)
                    {
                        <span class="label label-success">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else
                    {
                        <span class="label label-default">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArCategory.Name)
                </td>
                <td style="background-color:lightgray;">
                    @item.Amount.ToString("#,##0.00")
                </td>
                <td style="color:darkgreen;">
                    @{
                        decimal totalTransPayment = 0;
                        string paymentType = "";
                        bool paymentDeposited = false;
                        string paymentRemarks = "";
                    }

                    @foreach (var payment in item.ArTransPayments)
                    {
                        totalTransPayment = totalTransPayment + payment.ArPayment.Amount;
                        paymentType = payment.ArPayment.ArPaymentType.Type;
                        paymentDeposited = payment.ArPayment.IsDeposited ?? false;
                        paymentRemarks += payment.ArPayment.Remarks;

                        <span>@payment.ArPayment.Amount.ToString("#,##0.00")</span><br />
                        <span style="font-size:11px;color:gray;">@paymentType</span><br />
                        <span style="font-size:11px;color:gray;">@payment.ArPayment.Remarks</span><br />


                        if (item.ArTransPayments.Count() > 1 && !String.IsNullOrEmpty(paymentRemarks))
                        {
                            paymentRemarks += " / ";
                        }
                    }
                    <span>
                        @if ((item.ArTransStatusId >= STATUS_SETTLEMENT) &&
                        (paymentAmount < (item.Amount - amountVariance) || paymentAmount > (item.Amount + amountVariance)))
                        {
                            <img src="~/Images/SalesLead/high-importance.png" width="15"
                                 alt="Amount paid reached a 10% variance of the invoice amount"
                                 title="Amount paid reached a 10% variance of the invoice amount" />
                        }




                        @*@totalTransPayment.ToString("#,##0.00")<br />
                        <span style="font-size:11px;color:gray;">@paymentType</span>

                        @if (paymentDeposited)
                        {
                            <span style="font-size:11px;color:gray;"> - Deposited </span>
                        }*@
                    </span>
                    @*<span style="font-size:11px;color:gray;">
                        @paymentRemarks
                    </span>*@
                </td>
                <td>
                    @foreach (var deposit in item.ArTransDeposits)
                    {
                        totalDeposit += deposit.ArDeposit.Amount;

                        <span style="font-weight:600;"> @deposit.ArDeposit.Amount.ToString("#,##0.00") </span> <br />
                        <span style="font-size:11px;color:gray;"> @deposit.ArDeposit.DtDeposit.ToString("MMM dd yyyy") </span> <br />
                        <span style="font-size:11px;color:gray;">  @deposit.ArDeposit.ArDepositBank.AccountName </span> <br />
                        <span style="font-size:11px;color:gray;">  @deposit.ArDeposit.Remarks </span>

                    }
                </td>
                <td>
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            Actions
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                            <li>
                                @if (item.ArTransStatusId == 1)
                                {
                                    <a class="cursor-link cursor-hand" onclick="UpdateStatus(@item.Id, 2)"> For Approval </a>
                                }
                                else if (item.ArTransStatusId == 2 && isAdmin)
                                {
                                    <a class="cursor-link cursor-hand" onclick="UpdateStatus(@item.Id, 3)"> Approve </a>
                                }
                                else if (item.ArTransStatusId == 3)
                                {
                                    <a class="cursor-link cursor-hand" onclick="UpdateStatus(@item.Id, 4)"> Billing Sent </a>
                                    @Html.ActionLink("Add Payment", "CreateTransPayment", "ArPayments", new { transId = item.Id }, null)

                                }
                                else if (item.ArTransStatusId >= 4 && item.ArTransStatusId <= 5)
                                {
                                    @Html.ActionLink("Add Payment", "CreateTransPayment", "ArPayments", new { transId = item.Id }, null)
                                    @Html.ActionLink("Add Deposit", "CreateTransDeposit", "ArDeposits", new { transId = item.Id }, null)

                                    if (item.ArTransStatusId == 4)
                                    {
                                        <a class="cursor-link cursor-hand" onclick="UpdateStatus(@item.Id, 5)"> For Settlement </a>
                                    }

                                    if (paymentType != "Bank")
                                    {
                                        @*<a class="cursor-link cursor-hand" onclick="UpdateStatusAndDeposit(@item.Id)"> Deposited </a>*@
                                    }

                                }
                                else if (item.ArTransStatusId == 5)
                                {
                                    <a class="cursor-link cursor-hand" onclick="UpdateStatus(@item.Id, 6)"> Close </a>
                                }

                            <li role="separator" class="divider"></li>
                            @if (item.ArTransStatusId < 5)
                            {
                                <li> @Html.ActionLink("Edit", "Edit", new { id = item.Id }) </li>
                                <li> <a class="cursor-hand" onclick="ShowJobLinkModal(@item.Id, '@item.ArAccount.Name - @item.Description')"> Update joblink </a> </li>
                            }
                            else
                            {
                                <li> @Html.ActionLink("Edit Remarks", "EditRemarks", new { id = item.Id }) </li>
                            }
                            <li> @Html.ActionLink("Details", "Details", new { id = item.Id }) </li>
                            <li> @Html.ActionLink("Credit", "Details", "ArAccounts", new { id = item.ArAccountId }, null) </li>
                            <li> @Html.ActionLink("Statement", "StatementPrint", "ArTransactions", new { accountId = item.ArAccountId }, null) </li>
                            <li> @Html.ActionLink("History", "TransactionHistory", "ArTransactions", new { id = item.Id }, null) </li>
                            @*<li> @Html.ActionLink("Delete", "Delete", new { id = item.Id }) </li>*@
                        </ul>
                    </div>
                </td>
            </tr>

            totalPayment += totalTransPayment;
            totalAmount += item.Amount;
        }

        {
            totalBalance = totalAmount - totalPayment;
            GrandTotal += totalAmount;
            GrandPayment += totalPayment;
            GrandDeposit += totalDeposit;
            GrandBalance += totalBalance;
        }
        <tr>
            <td colspan="8">
            </td>
            <td style="background-color:lightgray;">
                <p style="margin-bottom:0px;font-size:9px;color:gray;"> Total Amount </p>
                <p style="font-size:18px;">@totalAmount.ToString("#,##0.00")</p>
            </td>
            <td style="color:darkgreen;">
                <p style="margin-bottom:0px;font-size:9px;color:gray;"> Total Payment </p>
                <p style="font-size:18px;">@totalPayment.ToString("#,##0.00")</p>
            </td>
            <td style="color:darkgreen;">
                <p style="margin-bottom:0px;font-size:9px;color:gray;"> Total Deposit </p>
                <p style="font-size:18px;">@totalDeposit.ToString("#,##0.00")</p>
            </td>
            <td style="font-weight:600;">
                <p style="margin-bottom:0px;font-size:9px;color:gray;"> Total Balance </p>
                <p style="font-size:18px;color:blue;">@totalBalance.ToString("#,##0.00")</p>
            </td>
        </tr>
    }

</table>

<div>
    <table class="table">
        <tr>
            <td>
                <h3>
                    <span style="color:gray;">Grand Total :</span> @GrandTotal.ToString("#,##0.00")
                </h3>
            </td>
            <td>
                <h3>
                    <span style="color:gray;"> Payments :</span> <span style="color:green;">@GrandPayment.ToString("#,##0.00")</span>
                </h3>
            </td>
            <td>
                <h3>
                    <span style="color:gray;"> Deposit :</span> <span style="color:green;">@GrandDeposit.ToString("#,##0.00")</span>
                </h3>
            </td>
            <td>
                <h3>
                    <span style="color:gray;"> Balance :</span> <span style="color:blue;">@GrandBalance.ToString("#,##0.00")</span>
                </h3>
            </td>
        </tr>
    </table>
</div>


@Html.Partial("_ModalJobLink");

@section Scripts{
    <script>

        function UpdateStatus(transId, statusId) {
            $("#overlay").show();
            var result = $.post("/Receivables/ArTransactions/UpdateTransStatus", {
                transId: transId,
                statusId: statusId
                }, (response) => {
                    console.log("Update Status : " + response);
                    if (response == "True") {
                        $("#overlay").hide();
                        window.location.reload(false);
                    } else {
                        alert("Unable to Update transaction.");
                        $("#overlay").hide();
                    }
                }
            );

            console.log(result);
            if (result["ResponseCode"] == 500) {
                alert("Unable to Update transaction.");
                $("#overlay").hide();
            }
        }



        function UpdateStatusAndDeposit(id) {
             $.post("/Receivables/ArMgt/UpdatePaymentAsDeposited",
                {
                    transId: id
                },
                (response) => {
                    console.log("Update Status : " + response);
                    if (response == "True") {
                        window.location.reload(false);
                    } else {
                        alert("Unable to Update Deposit.");
                    }
                }
            );
        }

        function ShowJobLinkModal(id, desc) {
            $("#JobLink-TripLogId").val(id);
            $("#JobLink-Description").val(desc);

            $("#LogJobLinkModal").modal("show");
        }

        function UpdateInvoiceId() {

            let id = $("#JobLink-TripLogId").val();
            let invoiceId = $("#JobLink-JobMainId").val();

            $.post("/Receivables/ArTransactions/UpdateInvoiceId",
                {
                    id: id,
                    invoiceId: invoiceId
                },
                (response) => {
                    console.log("Update Status : " + response);
                    if (response == "True") {
                        window.location.reload(false);
                    } else {
                        alert("Unable to Update Invoice Id.");
                    }
                }
            );
        }

    </script>
}
