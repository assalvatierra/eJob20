@model IEnumerable<ArModels.Models.ArTransaction>

@{
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    ViewBag.Title = "Monthly Receivables";

    DateTime today = ViewBag.Today;

    bool isAdmin = ViewBag.IsAdmin;

    decimal totalAmount = 0;
    decimal totalPayment = 0;
    decimal totalBalance = 0;
    decimal GrandTotal = 0;
}

<h2> Monthly Receivables Report </h2>
<p>
    @Html.ActionLink("Summary", "Index", "ArReports", new { area = "Receivables" }, new { @class = "btn btn-default" }) 
    @Html.ActionLink("Daily", "Daily", "ArReports", new { area = "Receivables" }, new { @class = "btn btn-default" }) 
    @Html.ActionLink("Monthly", "Monthly", "ArReports", new { area = "Receivables" }, new { @class = "btn btn-default disabled" })
</p>

<div style="display:flex;flex-direction:row;">
    <div class="search-panel input-group">
        @using (Html.BeginForm())
        {
            <div class="input-group-btn" style="width:140px;">
                <input type="text" class="form-control" name="dateStart" value="@ViewBag.DateStart" />
            </div>
            <div class="input-group-btn" style="width:140px;">
                <input type="text" class="form-control" name="dateEnd" value="@ViewBag.DateEnd" />
            </div>
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit" value="Search" id="SubmitSearchBtn">
                    Search
                </button>
            </div>
        }

        <div class="input-group-btn" style="margin-left:8px;">
            <button class="btn btn-default" onclick="FilterDateLast(7)">
                Last 7 Days
            </button>
            <button class="btn btn-default" onclick="FilterDateLast(15)">
                Last 15 Days
            </button>
            <button class="btn btn-default" onclick="FilterDateLast(30)">
                Last 30 Days
            </button>
            <button class="btn btn-default" onclick="FilterCurrentMonth()">
                Current Month
            </button>
        </div>
    </div>
</div>
<br />
<p class="text-muted"> Showing Receivables based on payment date </p>
<table class="table">
    <tr>
        <th>
            Invoice
        </th>
        <th>
            Ref&nbsp;No.
        </th>
        <th>
            Payment
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InvoiceRef)
        </th>
        <th>
            Account
        </th>
        <th style="min-width:160px;">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DtDue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ArTransStatu.Status)
        </th>
        <th>
            Category
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            Paid&nbsp;Amount
        </th>
        <th></th>
    </tr>
        @foreach (var item in Model)
        {

            //totalAmount = 0;
            //totalPayment = 0;
            //totalBalance = 0;

            //handle text color based on due date
            string textcolor = "black";
            string bgcolor = "none";

            decimal balance = 0;

            if (item.ArTransStatusId < 5)
            {

                if (today.CompareTo(item.DtDue) == 0)
                {
                    textcolor = "black";
                    bgcolor = "lightgray";
                }
                else if (today.CompareTo(item.DtDue) > 0)
                {
                    textcolor = "darkred";
                }
                else if (today.CompareTo(item.DtDue) < 0)
                {
                    textcolor = "black";
                }
                else
                {
                    textcolor = "black";
                }

            }
            else
            {
                textcolor = "darkgreen";
            }

            <tr style="color:@textcolor;background-color:@bgcolor;">
                <td>
                    @item.DtInvoice.ToString("MMM dd yyyy")
                </td>
                <td>
                    @item.Id
                </td>
                <td>
                    @if (item.ArTransPayments.Count() > 0)
                    {
                        var latestPayment = item.ArTransPayments.LastOrDefault();

                        <span> @latestPayment.ArPayment.DtPayment.ToString("MMM dd yyyy")  </span>
                    }
                </td>
                <td>

                    @if (item.InvoiceId != 0 && item.InvoiceRef != null)
                    {
                        @Html.ActionLink(item.InvoiceRef, "JobServices", "JobOrder", new { area = "", jobMainId = item.InvoiceId }, new { target = "_blank" })
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.InvoiceRef)
                    }
                </td>
                <td>
                    <span style="font-weight:600;">
                        @Html.ActionLink(item.ArAccount.Company + " ", "Details", "ArAccounts", new { id = item.ArAccountId }, null)
                    </span>
                    <br>

                    @if (item.ArAccount.Name != "Personal Account")
                    {
                        <span class="tbl-subtext">@Html.DisplayFor(modelItem => item.ArAccount.Name)</span>
                    }
                    <br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)<br />
                    <span  class="tbl-subtext">
                        @item.DtService.ToString("MMM dd yyyy") -

                        @if (item.DtServiceTo != null)
                        {
                            <span> @DateTime.Parse(item.DtServiceTo.ToString()).ToString("MMM dd yyyy")</span>
                        }

                    </span>
                    @if (!String.IsNullOrEmpty(item.Remarks))
                    {
                        <br /> <span  class="tbl-subtext">@Html.DisplayFor(modelItem => item.Remarks)</span>
                    }
                </td>

                <td>
                    <span>
                        @item.DtDue.ToString("MMM dd yyyy")
                    </span>
                </td>
                <td>
                    @if (item.ArTransStatusId == 1)
                    {
                        <span class="label label-default">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 2)
                    {
                        <span class="label label-info">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 3)
                    {
                        <span class="label label-primary">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 4)
                    {
                        <span class="label label-primary">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else if (item.ArTransStatusId == 5)
                    {
                        <span class="label label-success">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }
                    else
                    {
                        <span class="label label-default">@Html.DisplayFor(modelItem => item.ArTransStatu.Status)</span>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArCategory.Name)
                </td>
                <td style="background-color:lightgray;">
                    @item.Amount.ToString("#,##0.00")
                </td>
                <td style="color:darkgreen;min-width:120px;">
                    @{
                        decimal totalTransPayment = 0;
                        string paymentType = "";
                        bool paymentDeposited = false;
                    }

                    @foreach (var payment in item.ArTransPayments)
                    {
                        totalTransPayment = totalTransPayment + payment.ArPayment.Amount;
                        paymentType = payment.ArPayment.ArPaymentType.Type;
                        paymentDeposited = payment.ArPayment.IsDeposited ?? false;
                    }
                    @{ 
                        balance = item.Amount - totalTransPayment;
                    }
                    <span>
                        @totalTransPayment.ToString("#,##0.00")<br />
                        <span class="tbl-subtext">@paymentType</span>

                        @if (paymentDeposited)
                        {
                            <span class="tbl-subtext">&nbsp;-&nbsp;Deposited </span>
                        }
                    </span>
                </td>
                <td>
                    @if (balance != 0)
                    {
                        <span style="color:blue;">
                            @balance.ToString("#,##0.00")
                        </span>
                    }
                </td>
            </tr>

            totalPayment += totalTransPayment;
            totalAmount += item.Amount;

          }

        <tr>
            <td colspan="9">
            </td>
            <td style="background-color:lightgray;">
                <p class="tbl-total-text"> Total Amount </p>
                <p style="font-size:18px;">@totalAmount.ToString("#,##0.00")</p>
            </td>
            <td style="color:darkgreen;">
                <p class="tbl-total-text"> Total Payment </p>
                <p style="font-size:18px;">@totalPayment.ToString("#,##0.00")</p>
            </td>
            <td>
                <p class="tbl-total-text"> Total&nbsp;Balance </p>
                <p style="font-size:18px;color:blue;">@totalBalance.ToString("#,##0.00")</p>
            </td>
        </tr>
</table>

@section Scripts{
    <script src="~/Areas/Receivables/Scripts/Report/Monthly.js"> </script>
    }