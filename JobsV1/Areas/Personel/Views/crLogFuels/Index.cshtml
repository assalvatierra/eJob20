@model IEnumerable<JobsV1.Areas.Personel.Models.cCrLogFuel>

@{
    ViewBag.Title = "Expenses Logs";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    var IsAdmin = (bool)ViewBag.IsAdmin;
    var StatusId = (int)ViewBag.StatusId;
}

<style>
    .PanelContainer-main {
        background-color: #eff3f6;
        border: none;
    }

    .td-bg-gray {
        background-color: lightgray;
    }

    .th-bg-gray {
        background-color: gray;
        color: white;
    }

    .status-selected {
        color: black;
    }
</style>

<h2>Expenses Logs</h2>
<p>
    @Html.ActionLink("Trip Logs", "Index", "CarRentalLog") |
    @Html.ActionLink("Drivers", "Index", "crLogDrivers") |
    @Html.ActionLink("Units", "Index", "crLogUnits") |
    @Html.ActionLink("Companies", "Index", "crLogCompanies") |
    @Html.ActionLink("Odo", "Index", "CrLogOdoes", null, null) |
    Expenses
</p>
<p id="status-list">
    <span class="text-muted"> Status Filter:  </span>
    @Html.ActionLink("Request", "Index", new { statusId = 1 }, new { @id = "status-request" }) |
    @Html.ActionLink("Approved", "Index", new { statusId = 2 }, new { @id = "status-approved" }) |
    @Html.ActionLink("Released", "Index", new { statusId = 3 }, new { @id = "status-released" }) |
    @Html.ActionLink("Returned", "Index", new { statusId = 4 }, new { @id = "status-returned" })
</p>

<p>
    @Html.ActionLink("Request Expense", "Create") |
    @Html.ActionLink("Previous Logs", "PrevRecords")
</p>
<table class="table">

    <tr>
        <!-- Request -->
        <th>
            @Html.DisplayNameFor(model => model.crLogFuel.crLogUnit.Description)
        </th>
        <th>
            Date Req
        </th>
        @if (StatusId == 4)
        {
         <th>
             Date Paid
         </th>
        }
        <th>
            Type
        </th>
        <th>
            @Html.DisplayNameFor(model => model.crLogFuel.Amount)
        </th>
        <th>
            OR-Amount
        </th>
        <th>
            Odo
        </th>
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.crLogUnit.Description)
                (&nbsp;@Html.DisplayFor(modelItem => item.crLogFuel.crLogDriver.Name)&nbsp;)
            </td>
            <td>
                @item.crLogFuel.dtRequest.ToString("MMM dd yyyy hh:mm tt")
            </td>
           @if (item.LatestStatusId == 4)
            {
            <td>
                @item.crLogFuel.dtFillup.ToString("MMM dd yyyy hh:mm tt") 
            </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.crLogType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.orAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.odoFillup)
            </td>
                <td>
               @switch (item.LatestStatusId)
               {
                   case 1:
                       if (IsAdmin) { 
                        <span>
                            <a class="cursor-hand" onclick="ApproveRequest('@item.crLogFuel.Id')"> Approve </a> 
                        </span>
                       }
                       else
                       {
                            @Html.ActionLink("Edit", "Edit", new { id = item.crLogFuel.Id })
                       }
                       break;
                   case 2:
                       <span>
                           @Html.ActionLink("Print", "PrintApproveForm", new { id = item.crLogFuel.Id }, new { @target = "_blank" }) |
                           <a class="cursor-hand" onclick="ApproveRelease('@item.crLogFuel.Id')"> Release </a> 
                       </span>
                       break;
                   case 3:
                       <span> 
                           <a class="cursor-hand" onclick="InitReturnLogModal('@item.crLogFuel.Id')"> Return </a> 
                       </span>
                       break;
                   default:
                   case 4:
                       <span></span>
                       break;
                }
               @if (IsAdmin)
                {
                    <span>
                       | @Html.ActionLink("Edit", "Edit", new { id = item.crLogFuel.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.crLogFuel.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.crLogFuel.Id })
                    </span>
                }
                </td>
        </tr>
    }

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="7">
                <p class="text-center"> No Record Found </p>
            </td>
        </tr>
    }

</table>

@Html.Partial("_ReturnLogModal")

@section Scripts{
    <script src="~/Areas/Personel/Script/CarRentalLogReturn.js"> </script>
    <script>
        $(() => {
            switch ('@StatusId') {
                case '1':
                    $("#status-request").css('color', 'black');
                    break;
                case '2':
                    $("#status-approved").css('color', 'black');
                    break;
                case '3':
                    $("#status-released").css('color', 'black');
                    break;
                case '4':
                    $("#status-returned").css('color', 'black');
                    break;
                default:
                    $("#status-request").css('color', 'black');
                    break;
            }
        });


        function ApproveRequest(id) {
            $.post("/Personel/crLogFuels/ApproveRequest", { id: parseInt(id) }, (result) => {
                console.log(result)
                if (result == 'True') {
                    window.location.reload();
                } else {
                    alert("An Error occured while process your request");
                }
            });
        }



        function ApproveRelease(id) {
            $.post("/Personel/crLogFuels/ApproveRelease", { id: parseInt(id) }, (result) => {
                console.log(result)
                if (result == 'True') {
                    window.location.reload();
                } else {
                    alert("An Error occured while process your request");
                }
            });
        }

        function InitReturnLogModal(id) {
            $("#return-LogFuelId").val(id);
            $("#return-Odo").val(0);
            $("#return-Amount").val("0.00");
            $("#return-Date").val(moment().format("MM/DD/YYYY hh:mm A"));
            $("#ReturnLogModal").modal("show");
        }

        function SubmitReturnLog() {
            var data = {
                id: $("#return-LogFuelId").val(),
                date: $("#return-Date").val(),
                odo: $("#return-Odo").val(),
                amount: $("#return-Amount").val()
            }

            $.post("/Personel/CrLogFuels/SubmitReturnLog", data, (result) => {
                console.log(result);
                if (result == 'True') {
                    window.location.reload();
                } else {
                    alert("An Error occured while process your request");
                }
            });
        }


    </script>
}