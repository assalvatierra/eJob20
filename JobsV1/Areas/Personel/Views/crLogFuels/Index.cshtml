@model IEnumerable<JobsV1.Areas.Personel.Models.cCrLogFuel>

@{
    ViewBag.Title = "Expenses Logs";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    var IsAdmin = (bool)ViewBag.IsAdmin;
    var StatusId = (int)ViewBag.StatusId;

    //Status Counts
    int RequestCount = (int)ViewBag.RequestCount;
    int ApprovedCount = (int)ViewBag.ApprovedCount;
    int ReleasedCount = (int)ViewBag.ReleasedCount;
}

<style>
    .PanelContainer-main {
        background-color: #eff3f6;
        border: none;
    }
</style>

<h2>Expenses Logs</h2>
<p>
    @Html.ActionLink("Trip Logs", "Index", "CarRentalLog") |
    @Html.ActionLink("Drivers", "Index", "crLogDrivers") |
    @Html.ActionLink("Units", "Index", "crLogUnits") |
    @Html.ActionLink("Companies", "Index", "crLogCompanies") |
    @Html.ActionLink("Cash Transactions", "Index", "CarRentalCashRelease") |
    Expenses
</p>
<p id="status-list">
    <span class="text-muted"> Status Filter:  </span>
    @Html.ActionLink("Request", "Index", new { statusId = 1 }, new { @id = "status-request" })
    <span class="badge"> @RequestCount </span> |
    @Html.ActionLink("Approved", "Index", new { statusId = 2 }, new { @id = "status-approved" })
    <span class="badge"> @ApprovedCount </span> |
    @Html.ActionLink("Released", "Index", new { statusId = 3 }, new { @id = "status-released" })
    <span class="badge"> @ReleasedCount </span> |
    @Html.ActionLink("Returned", "Index", new { statusId = 4 }, new { @id = "status-returned" }) |
    @Html.ActionLink("UnReturned", "Unreturned", null, null)
</p>

<p>
    @Html.ActionLink("Request Expense", "Create") |
    @Html.ActionLink("Previous Logs", "PrevRecords")
</p>
<table class="table">

    <tr>
        <!-- Request -->
        <th>
            Id
        </th>
        <th>
            @Html.DisplayNameFor(model => model.crLogFuel.crLogUnit.Description)
        </th>
        <th>
            Date Req
        </th>
        @if (StatusId == 4)
        {
            <th>
                Date Paid
            </th>
        }
        <th>
            Type
        </th>
        <th>
            @Html.DisplayNameFor(model => model.crLogFuel.Amount)
        </th>
        <th>
            Remarks
        </th>
        @if (StatusId == 4)
        {
            <th>
                OR-Amount
            </th>
            <th>
                Odo
            </th>
            <th>
                Payment Type
            </th>
            <th>
                isFullTank
            </th>
        }
        <th>

        </th>
    </tr>

    @foreach (var item in Model)
    {
        var itemDesc = item.crLogFuel.crLogUnit.Description + "( " + item.crLogFuel.crLogDriver.Name + " )";
        <tr id="@item.crLogFuel.Id">
            <td>
                @item.crLogFuel.Id
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.crLogUnit.Description)
                (&nbsp;@Html.DisplayFor(modelItem => item.crLogFuel.crLogDriver.Name)&nbsp;)
            </td>
            <td>
                @item.crLogFuel.dtRequest.ToString("MMM dd yyyy")
            </td>
           @if (item.LatestStatusId == 4)
            {
            <td>
                @item.crLogFuel.dtFillup.ToString("MMM dd yyyy") 
            </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.crLogType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.Remarks)
            </td>
             @if (item.LatestStatusId == 4)
            {
          
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.orAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.odoFillup)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.crLogFuel.crLogPaymentType.Type)
            </td>
            <td>
                @if (item.crLogFuel.isFullTank == true)
                {
                    <input type="checkbox" checked="checked" />
                }
                else
                {
                    <input type="checkbox" />
                }
            </td>
            }
                <td>
               @switch (item.LatestStatusId)
               {
                   case 1:
                       if (IsAdmin) { 
                        <span>
                            <a class="cursor-hand" onclick="ApproveRequest(this, '@item.crLogFuel.Id')"> Approve </a> 
                        </span>
                       }
                       else
                       {
                            @Html.ActionLink("Edit", "Edit", new { id = item.crLogFuel.Id })
                       }
                       break;
                   case 2:
                       <span>
                           @Html.ActionLink("Print", "PrintApproveForm", new { id = item.crLogFuel.Id }, new { @target = "_blank" }) |
                           @Html.ActionLink("PO", "PrintPOForm", new { id = item.crLogFuel.Id }, new { @target = "_blank" }) |
                           <a class="cursor-hand" onclick="ApproveRelease(this, '@item.crLogFuel.Id')"> Release </a> 
                       </span>
                       break;
                   case 3:
                      
                       <span> 
                           <a class="cursor-hand" onclick="InitReturnLogModal('@item.crLogFuel.Id', '@itemDesc', '@item.crLogFuel.Amount', '@item.crLogFuel.dtRequest', '@item.crLogFuel.Remarks')"> Return </a> 
                       </span>
                       break;
                   default:
                   case 4:
                       <span></span>
                       break;
                }
               @if (IsAdmin)
                {
                    <span>
                       | @Html.ActionLink("Edit", "Edit", new { id = item.crLogFuel.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.crLogFuel.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.crLogFuel.Id })
                    </span>
                }
                </td>
        </tr>
    }

    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="7">
                <p class="text-center"> No Record Found </p>
            </td>
        </tr>
    }

</table>

@Html.Partial("_ReturnLogModal")

@section Scripts{
    <script src="~/Areas/Personel/Script/CarRentalLogReturn.js"> </script>
    <script>
        $(() => {
            FilterStatus('@StatusId');
        });

    </script>
}