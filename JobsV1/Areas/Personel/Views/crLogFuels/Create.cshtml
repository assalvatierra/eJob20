@model JobsV1.Areas.Personel.Models.crLogFuel

@{
    ViewBag.Title = "Release Fuel";
}

<h2>Release Fuel</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create Fuel Log</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" hidden>
        @Html.LabelFor(model => model.dtRequest, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dtRequest, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dtRequest, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogUnitId, "Unit", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogUnitId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.crLogUnitId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogDriverId, "Driver", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogDriverId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.crLogDriverId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.crLogTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @value = "0" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.dtFillup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dtFillup, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dtFillup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.odoFillup, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.odoFillup, new { htmlAttributes = new { @class = "form-control", @value = "0" } })
            @Html.ValidationMessageFor(model => model.odoFillup, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.orAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.orAmount, new { htmlAttributes = new { @class = "form-control", @value = "0" } })
            @Html.ValidationMessageFor(model => model.orAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" hidden>
        @Html.LabelFor(model => model.isFullTank, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(model => model.isFullTank, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.isFullTank, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogPaymentTypeId, "Payment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogPaymentTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.crLogPaymentTypeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script src="~/Areas/Personel/Script/CrLogFuel.js"></script>
    <script>
        $(() => {
            $("input[name='dtRequest']").val(moment().format("MM/DD/YYYY hh:mm A"));
        })
    </script>
}