@model IEnumerable<JobsV1.Areas.Personel.Models.crLogPassenger>

@{
    ViewBag.Title = ViewBag.Driver + " Drivers Trip Passengers";
    int TripId = ViewBag.TripId ?? 0;
    int DriversId = ViewBag.DriversId ?? 0;
    int ForPickupCount = 0;
    int ContactedCount = 0;
    int BoardedCount = 0;
    int FailedCount = 0;
    int DeclinedCount = 0;
    int DroppedCount = 0;
    DateTime datetimeNow = ViewBag.DateTimeNow;
    TimeSpan timeNow = datetimeNow.TimeOfDay;
}

<div class="col-md-12">
    <h3>  @ViewBag.Driver / @ViewBag.UnitDetails </h3>
    <h4>
        Status
        <span class="text-muted">Trip :</span>

        @if (TripId == 0)
        {
            <span> No Trip Found. Try again later. </span>
        }
        else
        {
            @ViewBag.TripDetails
        }
    </h4>

    <p>
        <span style="margin-right:10px;">
            <span class="status-circle-green"> </span> Done
        </span>
        <span style="margin-right:10px;">
            <span class="status-circle-orange"> </span> Declined
        </span>
        <span style="margin-right:10px;">
            <span class="status-circle-red">  </span> Failed
        </span>
    </p>

    <button class="btn btn-default" onclick="location.reload()" style="width:105%;">
        Refresh List - @datetimeNow.ToString("hh:mm tt")
    </button>

    @*<button class="btn btn-default" onclick="GetPassengerList()" style="width:100%;" hidden>
            Get List
        </button>*@
</div>



<div class="col-md-12" style="padding-right:0px;">
    <div class="list-group text-md" id="passengers-list">
        @foreach (var item in Model)
        {

         DateTime tripDt = item.crLogTrip.DtTrip;

        <a href="#" class="list-group-item closeLink" onclick="ShowPassengerAction(@item.Id,'@item.Name','@item.Contact', '@item.crLogPassStatusId')">
            <div class="driverTripPass-pickup">
                <h5 class="mb-1">
                    @Html.DisplayFor(modelItem => item.PickupTime) -
                    @Html.DisplayFor(modelItem => item.PickupPoint)
                </h5>
                <div class="pull-right">
                    @if (item.crLogPassStatusId == 1)
                    {
                        ForPickupCount += 1;
                        <span class="badge badge-secondary"> @item.crLogPassStatu.Status </span>
                    }
                    @if (item.crLogPassStatusId == 2)
                    {
                        ContactedCount += 1;
                        <span class="badge badge-primary"> @item.crLogPassStatu.Status </span>
                    }
                    @if (item.crLogPassStatusId == 3)
                    {
                        BoardedCount += 1;
                        <span class="badge badge-info"> @item.crLogPassStatu.Status </span>
                    }
                    @if (item.crLogPassStatusId == 4)
                    {
                        DroppedCount += 1;
                        <span class="badge badge-success"> @item.crLogPassStatu.Status </span>
                    }
                    @if (item.crLogPassStatusId == 5)
                    {
                        DeclinedCount += 1;
                        <span class="badge badge-warning"> @item.crLogPassStatu.Status </span>
                    }
                    @if (item.crLogPassStatusId == 6)
                    {
                        FailedCount += 1;
                        <span class="badge badge-danger"> @item.crLogPassStatu.Status </span>
                    }

                    @if (item.crLogPassStatusId == 7)
                    {
                        <span class="badge badge-success"> @item.crLogPassStatu.Status </span>
                    }
                </div>
            </div>
            <p class="mb-1" style="font-size:19px;margin-bottom:-5px;">
                <span>
                    @try
                    {
                        DateTime dtNow = datetimeNow;

                        string pt = item.PickupTime;
                        string dt = item.DropTime;

                        string tripDt_Pickup_string = tripDt.ToShortDateString() + " " + item.PickupTime;
                        string tripDt_Drop_string = tripDt.ToShortDateString() + " " + item.DropTime;

                        DateTime dtPickup = new DateTime();
                        DateTime dtBoard = new DateTime();
                        DateTime dtDropped = new DateTime();

                        if (!DateTime.TryParse(tripDt_Pickup_string, out dtPickup))
                        {
                            dtPickup = new DateTime(
                                   tripDt.Year, tripDt.Month, tripDt.Day,
                                   int.Parse(pt.Substring(0, pt.IndexOf(":"))),
                                   int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                                   0);
                        }

                        if (!DateTime.TryParse(tripDt_Drop_string, out dtDropped))
                        {
                            dtPickup = new DateTime(
                                   tripDt.Year, tripDt.Month, tripDt.Day,
                                   int.Parse(pt.Substring(0, pt.IndexOf(":"))),
                                   int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                                   0);
                        }

                        dtBoard = dtPickup;

                        if (item.NextDay == true)
                        {
                            dtPickup = dtPickup.AddDays(1);
                            dtBoard = dtBoard.AddDays(1);
                            dtDropped = dtDropped.AddDays(1);
                        }

                        if (dtPickup > dtDropped)
                        {
                            dtDropped = dtDropped.AddDays(1);
                        }
                        DateTime TwelveTime = new DateTime(
                                   tripDt.Year, tripDt.Month, tripDt.Day,
                                    12, 0, 0);

                        //adjust time less hour for driver notification
                        dtPickup = dtPickup.AddHours(-1);

                        <!-- Contact -->
                        if (item.timeContacted.Length > 2)
                        {
                            if (item.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (item.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else if (item.crLogPassStatusId == 7)
                            {
                                //failed
                                <span class="status-circle-green"> </span>
                            }
                            else
                            {
                                try
                                {

                                    //success
                                    <span class="status-circle-green"> </span>

                                }
                                catch
                                {
                                    //success
                                    <span class="status-circle-orange">  </span>
                                }
                            }
                        }
                        else
                        {
                            //not yet contacted
                            if (dtPickup <= dtNow)
                            {
                                //handle late boarding

                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    //handle late boarding
                                    <span class="status-circle-red"> </span>
                                }
                            }
                            else
                            {
                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    <span class="status-circle-gray"> </span>
                                }
                            }
                        } <!-- End of Contact -->

                        <!-- Boarding -->
                        if (item.timeBoarded.Length > 2)
                        {

                            if (item.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (item.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else if (item.crLogPassStatusId == 7)
                            {
                                //failed
                                <span class="status-circle-green"> </span>
                            }
                            else
                            {

                                try
                                {
                                    //success
                                    <span class="status-circle-green"> </span>
                                }
                                catch
                                {
                                    //success
                                    <span class="status-circle-orange">  </span>
                                }
                            }
                        }
                        else
                        {

                            //not yet boarded
                            if (dtBoard <= dtNow)
                            {
                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    try
                                    {
                                        string tripDt_TimeBoarded = dtDropped.ToShortDateString() + " " + item.timeBoarded;
                                        DateTime dtBoarded_actual = new DateTime();

                                        if (!DateTime.TryParse(tripDt_TimeBoarded, out dtBoarded_actual))
                                        {
                                            dtBoard = new DateTime(
                                                       dtDropped.Year, dtDropped.Month, dtDropped.Day,
                                                       int.Parse(pt.Substring(0, pt.IndexOf(":"))) + 12,
                                                       int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                                                       0);
                                        }

                                        if (dtBoarded_actual > dtBoard)
                                        {
                                            //late dropped
                                            <span class="status-circle-green">  </span>
                                        }
                                        else
                                        {
                                            //success
                                            <span class="status-circle-green">  </span>
                                        }

                                    }
                                    catch
                                    {
                                        //success
                                        <span class="status-circle-orange">  </span>
                                    }
                                }
                            }
                            else
                            {
                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    <span class="status-circle-gray"> </span>
                                }
                            }
                        } <!-- End of Boarding -->
                        <!-- Drop Off -->
                        if (item.timeDelivered.Length > 2)
                        {

                            if (item.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (item.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else if (item.crLogPassStatusId == 7)
                            {
                                //failed
                                <span class="status-circle-green"> </span>
                            }
                            else
                            {
                                try
                                {
                                    string tripDt_TimeDelivered = dtDropped.ToShortDateString() + " " + item.timeDelivered;
                                    DateTime dtDelivered_actual = new DateTime();

                                    if (!DateTime.TryParse(tripDt_TimeDelivered, out dtDelivered_actual))
                                    {
                                        dtDropped = new DateTime(
                                                   dtDropped.Year, dtDropped.Month, dtDropped.Day,
                                                   int.Parse(pt.Substring(0, pt.IndexOf(":"))),
                                                   int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                                                   0);
                                    }

                                    if (dtDelivered_actual > dtDropped)
                                    {
                                        //late dropped
                                        <span class="status-circle-yellow">  </span>
                                    }
                                    else
                                    {
                                        //success
                                        <span class="status-circle-green">  </span>
                                    }

                                }
                                catch
                                {
                                    //success
                                    <span class="status-circle-orange">  </span>
                                }

                            }
                        }
                        else
                        {

                            //not yet dropped
                            if (dtDropped <= dtNow)
                            {
                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    //handle late boarding
                                    <span class="status-circle-red"> </span>
                                }
                            }
                            else
                            {
                                if (item.crLogPassStatusId == 5)
                                {
                                    //declined
                                    <span class="status-circle-orange"> </span>
                                }
                                else if (item.crLogPassStatusId == 6)
                                {
                                    //failed
                                    <span class="status-circle-red"> </span>
                                }
                                else if (item.crLogPassStatusId == 7)
                                {
                                    //failed
                                    <span class="status-circle-green"> </span>
                                }
                                else
                                {
                                    <span class="status-circle-gray"> </span>
                                }
                            }
                        }
                    }
                    catch
                    {
                        <span> Error </span>
                    }
                </span>

                <span>
                    @item.Name - @item.Contact
                </span>

            </p>
            <p class="no-padding no-margin">
                <small style="font-size:13px;color:gray;">Destination: @item.DropTime - @item.DropPoint </small>

            </p>

            @if (item.crLogPassStatusId == 5)
            {
                //declined
                <p class="no-padding no-margin">
                    <small style="font-size:13px;color:orange;"> @item.Remarks </small>

                </p>
            }
            else if (item.crLogPassStatusId == 6)
            {
                //failed
                <p class="no-padding no-margin">
                    <small style="font-size:13px;color:red;"> @item.Remarks </small>

                </p>
            }
            else if (item.crLogPassStatusId == 7)
            {
                <p class="no-padding no-margin">
                    <small style="font-size:13px;color:forestgreen;"> @item.Remarks </small>

                </p>
            }
            <p>
            <small style="font-size:13px;color:gray;"> @item.RestDay </small>

            </p>
        </a>
        }
    </div>
</div>

@if (TripId != 0)
{
    <div class="col-md-12" style="margin-right:0px;padding-right:0px;">
        <h3>Summary</h3>
        <p class="driverTripPass-summary">
            <button type="button" class="btn btn-primary" >
                For Pickup <span class="badge badge-light">@ForPickupCount</span>
                <span class="sr-only">passengers</span>
            </button>
            <button type="button" class="btn btn-primary">
                Contacted <span class="badge badge-light">@ContactedCount</span>
                <span class="sr-only">passengers</span>
            </button>
            <button type="button" class="btn btn-info">
                On Board <span class="badge badge-light">@BoardedCount</span>
                <span class="sr-only">passengers</span>
            </button>
            <button type="button" class="btn btn-success">
                Dropped <span class="badge badge-light">@DroppedCount</span>
                <span class="sr-only">passengers</span>
            </button>
            <button type="button" class="btn btn-warning">
                Declined <span class="badge badge-light">@DeclinedCount</span>
                <span class="sr-only">passengers</span>
            </button>
            <button type="button" class="btn btn-danger">
                Missed <span class="badge badge-light">@FailedCount</span>
                <span class="sr-only">passengers</span>
            </button>
        </p>
    </div>
}

<p class="col-md-12">
    <a href="/mod/110/driver/@DriversId" class="btn btn-default" style="width:105%;">
        Back to My Trip List
    </a>
   @* @Html.ActionLink("Back to Trip List", "DriversTripList", new { id = DriversId })*@
</p>

<!-- Passenger Action -->
<div class="modal fade" role="dialog" id="PassDetailsModal">
    <div class="modal-dialog" style="width:330px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="Cancel_SubmitPassCopyLogs()" data-dismiss="modal">&times;</button>
                <h5 class="modal-title"> Passenger Actions </h5>
            </div>

            <div class="modal-body">
                <div class="row" style="padding:10px;">
                    <div class="driverTripPass-action-pass">
                        <h3 id="passDetails-name"> Customer Name </h3>
                        <a href="tel:09" id="passDetails-contact" class="btn btn-default">
                            <img src="~/Images/Icons/icon-call-blk.png" width="16" style="margin-right:5px;" />
                            <span id="passDetails-contact-text"> 0912-345-6789</span>
                        </a>
                    </div>
                    <button  id="passDetails-contacted" class="list-group-item list-group-item-action flex-column align-items-start" onclick="ShowConfirmAction(2)">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                CONTACTED
                            </h5>
                        </div>
                    </button>
                    <button id="passDetails-board" class="list-group-item list-group-item-action flex-column align-items-start" onclick="ShowConfirmAction(3)">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                BOARDED
                            </h5>
                        </div>
                    </button>
                    <button  id="passDetails-drop" class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmActionStatus_Dropped(4)">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                DROPPED
                            </h5>
                        </div>
                    </button>

                </div>

                <input id="PassId" type="text" value="0" hidden />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Confirm Action -->
<div class="modal fade" role="dialog" id="ConfirmActionModal">
    <div class="modal-dialog" style="width:330px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" onclick="Cancel_SubmitPassCopyLogs()" data-dismiss="modal">&times;</button>
                <h5 class="modal-title"> Passenger Status </h5>
            </div>

            <div class="modal-body">
                <div class="row" style="padding:10px;">
                    <div class="driverTripPass-action-pass">
                        <h3 id="confirm-passDetails-name">
                            Customer Name Contacted ?
                        </h3>
                    </div>
                    <button class="list-group-item list-group-item-action flex-column align-items-start active" style="margin-top:20px;" onclick="ConfirmActionStatus()">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                YES
                            </h5>
                        </div>
                    </button>

                    <button class="list-group-item list-group-item-action flex-column align-items-start" id="ConfirmAction-Decline" onclick="ShowDeclinedModal()">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                YES, but declined
                            </h5>
                        </div>
                    </button>

                    <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ShowFailedModal()">
                        <div style="display:flex;justify-content:center;">
                            <h5 class="mb-1" style="font-weight:600;">
                                NO
                            </h5>
                        </div>
                    </button>
                </div>
                <input id="confirmActionId" type="text" value="0" hidden />
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Declined Action -->
<div class="modal fade" role="dialog" id="DeclinedActionModal">
    <div class="modal-dialog" style="width:330px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"> Declined Action </h4>
            </div>

            <div class="modal-body">
                <div class="row" style="padding:10px;">
                    <div class="driverTripPass-action-pass">
                        <h3>
                            State reason
                        </h3>
                    </div>
                    <div class="list-group">
                        
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="Action_PassengerRestDay()">
                            Passenger Rest Day
                        </button>
                        @foreach (var remarks in ViewBag.RemarksDenied as IEnumerable<JobsV1.Areas.Personel.Models.crLogPassRemarks>)
                        {
                            <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                                @remarks.Description
                            </button>
                        }
                        @*<button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger has private service
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger on rest day
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger commuted
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger declined
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger transferred to another van
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmDeclinedAction(this)">
                            Passenger unspecified reason
                        </button>*@
                    </div>
                    <p>Please provide a reason: </p>
                    <input class="form-control" type="text" id="Denied_TextInput" style="margin-top:10px;" />

                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="DeniedActionModal_SubmitText()">Submit</button>
            </div>
        </div>
    </div>
</div>

<!-- Failed Action -->
<div class="modal fade" role="dialog" id="FailedActionModal">
    <div class="modal-dialog" style="width:330px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"> Failed Action </h4>
            </div>

            <div class="modal-body">
                <div class="row" style="padding:10px;">
                    <div class="driverTripPass-action-pass">
                        <h3>
                            Please provide a reason
                        </h3>
                    </div>
                    <div class="list-group">

                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="Action_PassengerRestDay()">
                            Passenger Rest Day
                        </button>

                        @foreach (var remarks in ViewBag.RemarksFailed as IEnumerable<JobsV1.Areas.Personel.Models.crLogPassRemarks>)
                        {
                            <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                                @remarks.Description
                            </button>
                        }

                        @*
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger not on the pickup location
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger did not arrive on time
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger will be late
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger is absent / on-leave / rest day
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Unspecified reason
                        </button>*@



                    </div>
                    <p>Please provide a reason: </p>
                    <input class="form-control" type="text" id="Failed_TextInput" style="margin-top:10px;" />
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="FailedActionModal_SubmitText()">Submit</button>
            </div>
        </div>
    </div>
</div>


<!-- Failed Action -->
<div class="modal fade" role="dialog" id="ModalFailed">
    <div class="modal-dialog" style="width:330px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"> Failed Action </h4>
            </div>

            <div class="modal-body">
                <div class="row" style="padding:10px;">
                    <div style="display:flex;justify-content:center;flex-direction:column;">
                        <h3 style="margin-top:0px;display:flex;justify-content:center;">
                            Please provide a reason
                        </h3>
                    </div>
                    <div class="list-group">
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger not anwering text/call
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger not on the pickup location
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger did not arrive on time
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger will be late
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Passenger is absent / on-leave / rest day
                        </button>
                        <button class="list-group-item list-group-item-action flex-column align-items-start" onclick="ConfirmFailedAction(this)">
                            Unspecified reason
                        </button>
                    </div>

                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>

        $(() => {
            window.setInterval(function () {
                //reload page every one minute
                location.reload();
            }, 60000);
        });

        function GetPassengerList() {
            var tripId = @TripId;
            // get driver list of passengers

            var res = $.get("/Personel/crLogPassengers/GetTripPassList", { id: tripId }, (result) => {
                var parsedResult = JSON.parse(result)
                console.log(parsedResult);
                if (parsedResult.length > 0) {
                    //populate list
                    for (var i = 0; i < parsedResult.length; i++) {

                        var action = '<button class="list-group-item" onclick="ShowPassengerAction(' + parsedResult[i]["Id"] + ',\'' + parsedResult[i]["Name"] + '\',\'' + parsedResult[i]["Contact"] + '\', ' + parsedResult[i]["crLogPassStatusId"] +')\"> ';

                        var passDetails = '  ' + action
                            + '<div class="driverTripPass-pickup">'
                            + ' <h5 class="mb-1">'
                            + parsedResult[i]["PickupTime"] + ' - ' + parsedResult[i]["PickupPoint"]
                            + '</h5>'
                            + '<div class="pull-right"> <span class="badge ' + GetBadgeColor(parsedResult[i]["crLogPassStatusId"]) +'">'
                            + parsedResult[i]["Status"] +
                            '</span></div>'
                            + '</div> '
                            + '<p class="mb-1" style="font-size:19px;">'
                            + GetStatusColors(parsedResult[i]["crLogPassStatusId"], parsedResult[i]["PickupTime"])
                            + parsedResult[i]["Name"] + ' - ' + parsedResult[i]["Contact"]
                            + '</p>'
                            + '<p class="mb-1" style="font-size:13px;"> Destination : '
                            + parsedResult[i]["DropTime"] + ' - ' + parsedResult[i]["DropPoint"]
                            + '</p>'
                            + '</button>';

                        $("#passengers-list").append(passDetails);
                    }
                } else {
                    console.log("Unable to update")
                }
            });
        }

        function GetBadgeColor(statusId) {
            switch (statusId) {
                case 1:
                    return "badge-secondary";
                case 2:
                    return "badge-primary";
                case 3:
                    return "badge-info";
                case 4:
                    return "badge-success";
                case 5:
                    return "badge-warning";
                case 6:
                    return "badge-danger"; 
                default:
                    return "badge-secondary";
            }
        }


        function GetStatusColors(statusId, Pickuptime) {
            var DtimeNow = new Date();

            var timePickup = moment(Pickuptime, ['h:m a', 'H:m']);
            var timeNow = DtimeNow.getTime();

            console.log("Pickuptime : " + Pickuptime);
            console.log("Pickuptime : " + timePickup);
            console.log("timeNow : " + timeNow);
            console.log(timeNow > timePickup)

            if (statusId == 3) {
                return '<span class="status-circle-info"> </span>  ';
            }

            if (statusId == 4) {
                 return '<span class="status-circle-success"> </span>  ';
            }

            if (statusId == 2) {
                if (timeNow > timePickup) {
                    return '<span class="status-circle-danger"> </span>  ';
                } else {
                    return '<span class="status-circle-gray"> </span>  ';
                }
            }

            if (statusId == 6) {
                return '<span class="status-circle-warning"> </span>  ';
            }

            if (statusId == 7) {
                return '<span class="status-circle-danger"> </span>  ';
            }
            return '<span class="status-circle-gray"> </span>  ';
        }

        function ShowPassengerAction(passId, passName, passContact, statusId) {
            $("#PassDetailsModal").modal('show');
            $("#passDetails-name").text(passName);
            $("#passDetails-contact-text").text(passContact);
            $("#passDetails-contact").attr("href", "tel:" + passContact.replace(/-/g, ''));

            $("#PassId").val(passId);
            //confirmation
            console.log("setting passid :" + passId);

            //reset status
            $("#passDetails-drop").removeClass('disabled');
            $("#passDetails-board").removeClass('disabled');
            $("#passDetails-contacted").removeClass('disabled');
            $("#passDetails-drop").prop('disabled', false);
            $("#passDetails-contacted").prop('disabled', false);
            $("#passDetails-board").prop('disabled', false);

            $("#ConfirmAction-Decline").show();
            //filter status
            if (statusId == 1) {
                $("#passDetails-board").addClass('disabled');
                $("#passDetails-drop").addClass('disabled');
                $("#passDetails-board").prop('disabled', true);
                $("#passDetails-drop").prop('disabled', true);
            } else if (statusId == 2) {
                $("#passDetails-contacted").addClass('disabled');
                $("#passDetails-drop").addClass('disabled');
                $("#passDetails-contacted").prop('disabled', true);
                $("#passDetails-drop").prop('disabled', true);
                $("#ConfirmAction-Decline").hide();
            } else if (statusId == 3) {
                $("#passDetails-contacted").addClass('disabled');
                $("#passDetails-board").addClass('disabled');
                $("#passDetails-contacted").prop('disabled', true);
                $("#passDetails-board").prop('disabled', true);
            } else if (statusId == 4) {
                $("#passDetails-drop").addClass('disabled');
                $("#passDetails-board").addClass('disabled');
                $("#passDetails-contacted").addClass('disabled');
                $("#passDetails-drop").prop('disabled', true);
                $("#passDetails-contacted").prop('disabled', true);
                $("#passDetails-board").prop('disabled', true);
            } else {
                $("#passDetails-drop").addClass('disabled');
                $("#passDetails-board").addClass('disabled');
                $("#passDetails-contacted").addClass('disabled');
                $("#passDetails-drop").prop('disabled', true);
                $("#passDetails-contacted").prop('disabled', true);
                $("#passDetails-board").prop('disabled', true);
            }
            return false;
        }


        function ShowConfirmAction(actionId) {
            $("#ConfirmActionModal").modal('show');
            $("#PassDetailsModal").modal('hide');


            var passName = $("#passDetails-name").text();
            var action = "Contacted ";
            switch (actionId) {
                case 2:
                    action = "Contacted ";
                    break;
                case 3:
                    action = "Boarded ";
                    break;
                case 4:
                    action = "Delivered ";
                    break;
                default:
                    action = "Contacted "; 
                    break;
            }

            console.log("action: "+action);

            $("#confirmActionId").val(actionId);
            $("#confirm-passDetails-name").text(" Is " + passName + " " + action + " ?");

            return false;

        }

        function ConfirmActionStatus() {

            console.log("Updating status");
            var actId = $("#confirmActionId").val();
            var passId = $("#PassId").val();

            var d = new Date();
            //remove seconds from time string
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });

            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: " " }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#ConfirmActionModal").modal("hide");
                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                }
            });

            console.log(res);
            return false;
        }


        function ConfirmActionStatus_Dropped(ActId) {

            console.log("Updating status");
            var actId = ActId;
            var passId = $("#PassId").val();

            var d = new Date();
            //remove seconds from time string
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });



            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: " " }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#ConfirmActionModal").modal("hide");
                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                }
            });
            console.log(res);
            return false;
        }

        function CancelActionStatus() {
            var reason = $("#confirmAction_No").find(":selected").text();
            $("#ConfirmActionModal").modal('hide');
            console.log("passId : " + passId);
            return false;
        }

        //Declined
        function ShowDeclinedModal() {
            $("#ConfirmActionModal").modal('hide');
            $("#DeclinedActionModal").modal('show');
            //$("#ConfirmActionModal").modal('hide');
            return false;
        }

        function ConfirmDeclinedAction(e) {
            var reason = $(e).text().trim();
            console.log("reason: " + reason);
            $("#DeclinedActionModal").modal('hide');

            var actId = 5; //declined
            var passId = $("#PassId").val();

            var d = new Date();
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });


            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: reason  }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#DeclinedActionModal").modal("hide");
                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                }
            });
            return false;
        }


        function ShowFailedModal() {
            $("#ConfirmActionModal").modal('hide');
            $("#FailedActionModal").modal('show');
            return false;
        }
        function ConfirmFailedAction(e) {
            var reason = $(e).text().trim();
            console.log("reason: " + reason);
            $("#FailedActionModal").modal('hide');

            var actId = 6; //failed
            var passId = $("#PassId").val();

            var d = new Date();
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });


            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);


            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason : reason }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#FailedActionModal").modal("hide");

                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                }
            });
            return false;
        }

        $('.closeLink').click(function (e) {
            return false;
        });



        function DeniedActionModal_SubmitText() {
            console.log($("#Denied_TextInput").val());
            var reason_val = $("#Denied_TextInput").val();

            if (reason_val === null || reason_val === '') {
                alert("Please prove a reason for failed delivery.");
                return false;
            }

            console.log("reason: " + reason_val);
            $("#DeclinedActionModal").modal('hide');

            var actId = 5; //denied
            var passId = $("#PassId").val();

            var d = new Date();
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });


            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: reason_val }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#DeclinedActionModal").modal("hide");

                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                    return false;
                }
            });
        }

        function FailedActionModal_SubmitText() {
            console.log($("#Failed_TextInput").val());
            var reason_val = $("#Failed_TextInput").val();

            if (reason_val === null || reason_val === '') {
                alert("Please prove a reason for failed delivery.");
                return false;
            }

            console.log("reason: " + reason_val);
            $("#FailedActionModal").modal('hide');

            var actId = 6; //failed
            var passId = $("#PassId").val();

            var d = new Date();
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });


            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: reason_val }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#FailedActionModal").modal("hide");

                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                    return false;
                }
            });
        }

        function Action_PassengerRestDay() {
            var reason_val = "Passenger on Rest Day";

            console.log("reason: " + reason_val);
            $("#FailedActionModal").modal('hide');

            var actId = 7; //RestDay
            var passId = $("#PassId").val();

            var d = new Date();
            var timeNow = d.toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit', hour12: true });


            console.log("actId : " + actId);
            console.log("passId : " + passId);
            console.log("time : " + timeNow);

            var res = $.post("/Personel/crLogPassengers/PassengerStatusUpdate", { id: passId, actId: actId, time: timeNow, reason: reason_val }, (result) => {
                console.log("result:" + result);

                if (result == "True") {
                    //close modal
                    $("#FailedActionModal").modal("hide");

                    //reload page
                    location.reload();
                } else {

                    alert("An Error occured while updating status.");
                    return false;
                }
            });
        }
    </script>
}