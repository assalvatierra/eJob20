@model IEnumerable<JobsV1.Areas.Personel.Models.crLogPassenger>

@{
    ViewBag.Title = "Passenger Manifest";
    DateTime datetimeNow = ViewBag.DateTimeNow;
    TimeSpan timeNow = datetimeNow.TimeOfDay;
}
@if (ViewBag.CompanyId != 0)
{
    <a href="/mod/110/company/trip/@ViewBag.CompanyId">
        <h2> @ViewBag.Company  </h2>
    </a>
}

<h2>Passenger List </h2>
<h4>as Of: @datetimeNow.ToString("MMM dd yyyy hh:mm tt")</h4>
<p>
    @if (ViewBag.CompanyId != 0)
    {
        @Html.ActionLink("Back to Passengers Manifest", "Index", new { companyId = ViewBag.CompanyId }, new { @class="btn btn-default" })
    }
    else
    {
        @Html.ActionLink("Back to Passengers Manifest", "Index", null, new { @class = "btn btn-default" })
    }
</p>
<p>
    <div class="btn-group">
        <button class="btn btn-default disabled">Sort :</button>

        @if (ViewBag.CompanyId != 0)
        {
            if (ViewBag.SortBy == "PickupTime")
            {
                @Html.ActionLink("By Pickup Time ", "PassengersList", new { companyId = ViewBag.CompanyId, sortBy = "PickupTime" }, new { @class = "btn btn-default active" })
            }
            else
            {
                @Html.ActionLink("By Pickup Time ", "PassengersList", new { companyId = ViewBag.CompanyId, sortBy = "PickupTime" }, new { @class = "btn btn-default" })
            }

            if (ViewBag.SortBy == "Area")
            {
                @Html.ActionLink("By Area ", "PassengersList", new { companyId = ViewBag.CompanyId, sortBy = "Area" }, new { @class = "btn btn-default active" })
            }
            else
            {
                @Html.ActionLink("By Area ", "PassengersList", new { companyId = ViewBag.CompanyId, sortBy = "Area" }, new { @class = "btn btn-default" })
            }

        }
        else
        {
            if (ViewBag.SortBy == "PickupTime")
            {
                @Html.ActionLink("By Pickup Time ", "PassengersList", new { sortBy = "PickupTime" }, new { @class = "btn btn-default active" })
            }
            else
            {
                @Html.ActionLink("By Pickup Time ", "PassengersList", new { sortBy = "PickupTime" }, new { @class = "btn btn-default" })
            }


            if (ViewBag.SortBy == "Area")
            {
                @Html.ActionLink("By Area ", "PassengersList", new { sortBy = "Area" }, new { @class = "btn btn-default active" })
            }
            else
            {
                @Html.ActionLink("By Area ", "PassengersList", new { sortBy = "Area" }, new { @class = "btn btn-default" })
            }

        }
    </div>
</p>
<p>
    <span style="margin-right:10px;"></span>
    <span style="margin-right:10px;">
        <span class="status-circle-green"> </span> Done
    </span>
    <span style="margin-right:10px;">
        <span class="status-circle-orange"> </span> Declined
    </span>
    <span style="margin-right:10px;">
        <span class="status-circle-red">  </span> Failed
    </span>
</p>

<table style="border:1px solid lightgray;" class="table">
    <tr>
        <th>&nbsp;</th>
        <th>##</th>
        <th>Name And Contact</th>
        <th>
            @if (ViewBag.SortBy == "Area")
            {
                <span> &#9660;Area </span>
            }
            else
            {
                <span> Area </span>
            }

        </th>
        <th>
            @if (ViewBag.SortBy == "PickupTime" || ViewBag.SortBy == "")
            {
                <span> &#9660; Origin </span>
            }
            else
            {
                <span> Origin </span>
            }

        </th>
        <th width="140">Destination</th>
        <th>STATUS</th>
        <th>Contacted</th>
        <th>Boarded</th>
        <th>Delivered</th>
        <th>Remarks</th>
        <th>Driver</th>
        <th>Unit</th>
    </tr>
    @{
        int passcnt = 0;
    }
    @foreach (var pass in Model)
    {

        passcnt++;
        DateTime tripDt = pass.crLogTrip.DtTrip;

        <tr>
            <td style="padding:10px;min-width:80px;">

                @try
                {
                    DateTime dtNow = datetimeNow;

                    string pt = pass.PickupTime;
                    string dt = pass.DropTime;

                    string tripDt_Pickup_string = tripDt.ToShortDateString() + " " + pass.PickupTime;
                    string tripDt_Drop_string = tripDt.ToShortDateString() + " " + pass.DropTime;

                    DateTime dtPickup = new DateTime();
                    DateTime dtBoard = new DateTime();
                    DateTime dtDropped = new DateTime();

                    if (!DateTime.TryParse(tripDt_Pickup_string, out dtPickup))
                    {
                        dtPickup = new DateTime(
                               tripDt.Year, tripDt.Month, tripDt.Day,
                               int.Parse(pt.Substring(0, pt.IndexOf(":"))) + 12,
                               int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                               0);
                    }

                    if (!DateTime.TryParse(tripDt_Drop_string, out dtDropped))
                    {
                        dtPickup = new DateTime(
                               tripDt.Year, tripDt.Month, tripDt.Day,
                               int.Parse(pt.Substring(0, pt.IndexOf(":"))) + 12,
                               int.Parse(pt.Substring(pt.IndexOf(":") + 1, 2)),
                               0);
                    }

                    dtBoard = dtPickup;

                    if (pass.NextDay == true)
                    {
                        dtPickup = dtPickup.AddDays(1);
                        dtBoard = dtBoard.AddDays(1);
                        dtDropped = dtDropped.AddDays(1);
                    }

                    if (dtPickup > dtDropped)
                    {
                        dtDropped = dtDropped.AddDays(1);
                    }
                    DateTime TwelveTime = new DateTime(
                               tripDt.Year, tripDt.Month, tripDt.Day,
                                12, 0, 0);

                    //adjust time less hour for driver notification
                    dtPickup = dtPickup.AddHours(-1);


                    <!-- Contact -->
                    if (pass.timeContacted.Length > 2)
                    {
                        if (pass.crLogPassStatusId == 5)
                        {
                            //declined
                            <span class="status-circle-orange"> </span>
                        }
                        else if (pass.crLogPassStatusId == 6)
                        {
                            //failed
                            <span class="status-circle-red"> </span>
                        }
                        else
                        {
                            //success
                            <span class="status-circle-green"> </span>
                        }
                    }
                    else
                    {
                        //not yet contacted
                        if (dtPickup <= dtNow)
                        {
                            //handle late boarding

                            if (pass.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (pass.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else
                            {
                                //handle late boarding
                                <span class="status-circle-red"> </span>
                            }
                        }
                        else
                        {
                            <span class="status-circle-gray"> </span>
                        }
                    } <!-- End of Contact -->

                    <!-- Boarding -->
                    if (pass.timeBoarded.Length > 2)
                    {

                        if (dtBoard >= dtNow)
                        {
                            if (pass.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (pass.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else
                            {
                                //handle late boarding
                                <span class="status-circle-orange"> </span>
                            }
                        }
                        else
                        {
                            if (dtBoard >= dtNow)
                            {
                                //handle late boarding
                                <span class="status-circle-orange"> </span>
                            }
                            else
                            {

                                //success
                                <span class="status-circle-green"> </span>

                            }
                        }
                    }
                    else
                    {

                        if (pass.NextDay == true)
                        {
                            dtBoard = dtBoard.AddDays(1);
                        }

                        //not yet boarded
                        if (dtBoard <= dtNow)
                        {
                            if (pass.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (pass.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else
                            {
                                //handle late boarding
                                <span class="status-circle-red"> </span>
                            }
                        }
                        else
                        {
                            <span class="status-circle-gray"> </span>
                        }
                    } <!-- End of Boarding -->
                    <!-- Drop Off -->
                    if (pass.timeDelivered.Length > 2)
                    {

                        if (pass.crLogPassStatusId == 5)
                        {
                            //declined
                            <span class="status-circle-orange"> </span>
                        }
                        else if (pass.crLogPassStatusId == 6)
                        {
                            //failed
                            <span class="status-circle-red"> </span>
                        }
                        else
                        {
                                //success
                                <span class="status-circle-green"> </span>
                        }
                    }
                    else
                    {

                        //not yet dropped
                        if (dtDropped <= dtNow)
                        {
                            if (pass.crLogPassStatusId == 5)
                            {
                                //declined
                                <span class="status-circle-orange"> </span>
                            }
                            else if (pass.crLogPassStatusId == 6)
                            {
                                //failed
                                <span class="status-circle-red"> </span>
                            }
                            else
                            {
                                //handle late boarding
                                <span class="status-circle-red"> </span>
                            }
                        }
                        else
                        {
                            <span class="status-circle-gray"> </span>
                        }
                    }
                }
                catch
                {
                    <span> Error </span>
                }

            </td>
            <td>(@passcnt)</td>
            <td>
                <span style="font-weight:600;"> @pass.Name</span> <br />
                <span class="text-muted" style="font-size:12px;"> @pass.Contact</span>
            </td>
            <td>
                <span class="text-muted"> @pass.Area</span>
            </td>
            <td>
                [ @pass.PickupTime / @pass.PickupPoint
               
                @if (pass.NextDay == true)
                {
                    <span>(+1)</span>
                }  

                ] &nbsp;
            </td>
            <td>
                [ @pass.DropTime / @pass.DropPoint ] &nbsp;
            </td>
            <td style="text-align:center;color:darkslateblue;">

                @if (pass.crLogPassStatusId == 1)
                {
                    <span class="badge badge-secondary"> @pass.crLogPassStatu.Status </span>
                }
                @if (pass.crLogPassStatusId == 2)
                {
                    <span class="badge badge-primary"> @pass.crLogPassStatu.Status </span>
                }
                @if (pass.crLogPassStatusId == 3)
                {
                    <span class="badge badge-info"> @pass.crLogPassStatu.Status </span>
                }
                @if (pass.crLogPassStatusId == 4)
                {
                    <span class="badge badge-success"> @pass.crLogPassStatu.Status </span>
                }
                @if (pass.crLogPassStatusId == 5)
                {
                    <span class="badge badge-warning"> @pass.crLogPassStatu.Status </span>
                }
                @if (pass.crLogPassStatusId == 6)
                {
                    <span class="badge badge-danger"> @pass.crLogPassStatu.Status </span>
                }
            </td>

            @{
                var sContacted = pass.timeContacted.Trim() == "" ? "--:--" : pass.timeContacted;
                var sBoarded = pass.timeBoarded.Trim() == "" ? "--:--" : pass.timeBoarded;
                var sDelivered = pass.timeDelivered.Trim() == "" ? "--:--" : pass.timeDelivered;
            }

            
            <td style="text-align:center;">
                 <span class="text-muted">@sContacted</span>
            </td>
            <td style="text-align:center;">
                 <span class="text-muted"> @sBoarded</span>
            </td>
            <td style="text-align:center;">
                 <span class="text-muted">@sDelivered</span>
            </td>
            <td>
                @pass.Remarks
            </td>
            <td>
                @pass.crLogTrip.crLogDriver.Name
            </td>
            <td>
                @pass.crLogTrip.crLogUnit.Description
            </td>
           

        </tr>


    }

</table>

<script>
    window.setInterval(function () {
        //reload page every one minute
        location.reload();
    }, 60000);
</script>