@model IEnumerable<JobsV1.Areas.Personel.Models.crLogTrip>

@{
    ViewBag.Title = "Passenger Manifest";
    DateTime datetimeNow = ViewBag.DateTimeNow;
    TimeSpan timeNow = datetimeNow.TimeOfDay;
}
@if (ViewBag.CompanyId != 0)
{
    <a href="/mod/110/company/trip/@ViewBag.CompanyId">
        <h2> @ViewBag.Company  </h2>
    </a>
}

<h2>Passenger Manifest</h2>

<h4>
    As Of:
    <a href="#" onclick="ShowChangeDateModal()">
        @datetimeNow.ToString("MMM dd yyyy hh:mm tt")
    </a>

</h4>

<p>
    @Html.ActionLink("Passengers List", "PassengersList", null, null)
</p>
<p>
    <span style="margin-right:10px;"></span>
    <span style="margin-right:10px;">
        <span class="status-circle-green"> </span> Done
    </span>
    <span style="margin-right:10px;">
        <span class="status-circle-orange"> </span> Declined
    </span>
    <span style="margin-right:10px;">
        <span class="status-circle-red">  </span> Failed
    </span>
</p>

<table class="table">

    @foreach (var item in Model)
    {
        if (ViewBag.CompanyId == 0)
        {
            <tr>
                <th colspan="3">
                    <a href="/mod/110/company/trip/@item.crLogCompanyId">  @Html.DisplayFor(modelItem => item.crLogCompany.Name)</a>
                </th>
            </tr>
        }

        <tr>
            <th>
                Driver: @Html.DisplayFor(modelItem => item.crLogDriver.Name)
            </th>
            <th>
                Unit: @Html.DisplayFor(modelItem => item.crLogUnit.Description)
            </th>
            <th>
                Date: @Html.DisplayFor(modelItem => item.DtTrip)
            </th>
        </tr>
        <tr>
            <td colspan="3">
                @{ int passcnt = 0;}
                <table style="border:3px solid cadetblue;">
                    <tr>
                        <th style="min-width:60px;">&nbsp;</th>
                        <th>##</th>
                        <th style="min-width:150px;">Name And Contact</th>
                        <th style="min-width:100px;">Area</th>
                        <th style="min-width:100px;">Origin</th>
                        <th style="min-width:100px;">Destination</th>
                        <th style="min-width:90px;">STATUS</th>
                        <th>Contacted</th>
                        <th>Boarded</th>
                        <th>Delivered</th>
                        <th style="min-width:100px;">Options</th>
                    </tr>

                    @foreach (var pass in item.crLogPassengers.OrderBy(c => c.NextDay).OrderBy(c => c.PickupTime))
                    {
                        passcnt++;
                        DateTime tripDt = pass.crLogTrip.DtTrip;

                        <tr>
                            <td style="padding-top:10px;">
                                &nbsp;
                                @if (pass.timeContacted.Trim().Length > 2)
                                {
                                    if (pass.crLogPassStatusId == 5)
                                    {
                                        //declined
                                        <span class="status-circle-orange" title="Passenger Declined"> </span>
                                    }
                                    else if (pass.crLogPassStatusId == 6)
                                    {
                                        //failed
                                        <span class="status-circle-red" title="Driver Failed to Contact Passenger"> </span>
                                    }
                                    else
                                    {
                                        //success
                                        <span class="status-circle-green" title="Passenger Contacted"> </span>
                                    }
                                }
                                else
                                {
                                    DateTime dt0 = datetimeNow;
                                    string st1 = pass.PickupTime;
                                    DateTime dt1 = new DateTime(
                                        tripDt.Year, tripDt.Month, tripDt.Day,
                                        int.Parse(st1.Substring(0, st1.IndexOf(":"))) + 12,
                                        int.Parse(st1.Substring(st1.IndexOf(":") + 1, 2)),
                                        0).AddHours(-1);

                                    if (pass.NextDay == true)
                                    {
                                        dt1.AddDays(1);
                                    }

                                    if (DateTime.Compare(dt0, dt1) <= 0)
                                    {
                                        <span class="status-circle-gray" title="Passenger not yet contacted"> </span>
                                    }
                                    else
                                    {
                                        <span class="status-circle-red" title="Driver failed to contact passenger on time"> </span>
                                    }

                                }

                                @if (pass.timeBoarded.Trim().Length > 2)
                                {
                                    if (pass.crLogPassStatusId == 5)
                                    {
                                        //declined
                                        <span class="status-circle-orange" title="Passenger declined"> </span>
                                    }
                                    else if (pass.crLogPassStatusId == 6)
                                    {
                                        //failed
                                        <span class="status-circle-red" title="Passenger not yet boarded"> </span>
                                    }
                                    else
                                    {
                                        //success
                                        <span class="status-circle-green" title="Passenger is on board"> </span>
                                    }
                                }
                                else
                                {
                                    DateTime dt0 = datetimeNow;
                                    string st1 = pass.PickupTime;
                                    DateTime dt1 = new DateTime(
                                        tripDt.Year, tripDt.Month, tripDt.Day,
                                        int.Parse(st1.Substring(0, st1.IndexOf(":"))) + 12,
                                        int.Parse(st1.Substring(st1.IndexOf(":") + 1, 2)),
                                        0);

                                    if (pass.NextDay == true)
                                    {
                                        dt1.AddDays(1);
                                    }


                                    if (DateTime.Compare(dt0, dt1) <= 0)
                                    {
                                        <span class="status-circle-gray" title="Passenger not yet boarded"> </span>
                                    }
                                    else
                                    {
                                        <span class="status-circle-red" title="Failed to board Passenger on pickup time"> </span>
                                    }

                                }

                                @if (pass.timeDelivered.Length > 2)
                                {
                                    if (pass.crLogPassStatusId == 5)
                                    {
                                        //declined
                                        <span class="status-circle-orange" title="Passenger declined"> </span>
                                    }
                                    else if (pass.crLogPassStatusId == 6)
                                    {
                                        //failed
                                        <span class="status-circle-red" title="Failed to Dropped Passenger"> </span>
                                    }
                                    else
                                    {
                                        //success
                                        <span class="status-circle-green" title="Passenger Dropped"> </span>
                                    }
                                }
                                else
                                {
                                    DateTime dt0 = datetimeNow;
                                    string st1 = pass.DropTime;
                                    DateTime dt1 = new DateTime(
                                        tripDt.Year, tripDt.Month, tripDt.Day,
                                        int.Parse(st1.Substring(0, st1.IndexOf(":"))) + 12,
                                        int.Parse(st1.Substring(st1.IndexOf(":") + 1, 2)),
                                        0);

                                    if (pass.NextDay == true)
                                    {
                                        dt1.AddDays(1);
                                    }


                                    if (DateTime.Compare(dt0, dt1) <= 0)
                                    {
                                        <span class="status-circle-gray" title="Passenger not yer dropped"> </span>
                                    }
                                    else
                                    {
                                        <span class="status-circle-red" title="Failed to Dropped passenger on time"> </span>
                                    }
                                }
                                &nbsp;

                            </td>
                            <td>(@passcnt)&nbsp;</td>
                            <td>
                                @pass.Name / @pass.Contact&nbsp;
                            </td>
                            <td>
                                @pass.Area
                            </td>
                            <td>
                                [ @pass.PickupTime / @pass.PickupPoint ] &nbsp;
                            </td>
                            <td>
                                [ @pass.DropTime / @pass.DropPoint ] &nbsp;
                            </td>
                            <td style="text-align:center;color:darkslateblue;">
                                @pass.crLogPassStatu.Status
                            </td>

                            @{
                                var sContacted = pass.timeContacted.Trim() == "" ? "--:--" : pass.timeContacted;
                                var sBoarded = pass.timeBoarded.Trim() == "" ? "--:--" : pass.timeBoarded;
                                var sDelivered = pass.timeDelivered.Trim() == "" ? "--:--" : pass.timeDelivered;
                            }

                            <td style="text-align:center;">
                                @sContacted &nbsp;
                            </td>
                            <td style="text-align:center;">
                                @sBoarded &nbsp;
                            </td>
                            <td style="text-align:center;">
                                @sDelivered
                            </td>

                            <td>
                                &nbsp;[ @Html.ActionLink("Transfer", "TransferPassenger", new { id = pass.Id }) ]
                            </td>

                        </tr>

                    }

                    <tr><td colspan="4">&nbsp</td></tr>
                </table>

            </td>

        </tr>
        <tr>
            <td colspan="6">
                &nbsp;
            </td>
        </tr>
    }

</table>


<!-- Copied Logs Date -->
<div class="modal fade" role="dialog" id="ChangeDateModal">
    <div class="modal-dialog" style="min-width:330px;max-width:500px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"> Select Trip Date</h4>
            </div>

            @using (Html.BeginForm())
            {
                <div class="modal-body">
                    <div style="margin-left:0px;">

                        <form>
                            <div class="form-group">
                                <input type="text" name="dateTrip" />
                            </div>
                        </form>
                        <input type="submit" value="Create" class="btn btn-default" />

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            }
        </div>
    </div>
</div>


@section Scripts{
    <script>
        window.setInterval(function () {
            //reload page every one minute
            location.reload();
        }, 60000);

        function ShowChangeDateModal() {
            $("#ChangeDateModal").modal('show');
        }
    </script>
}