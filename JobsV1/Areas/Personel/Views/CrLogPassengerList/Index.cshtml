@model IEnumerable<JobsV1.Areas.Personel.Models.crLogTrip>

@{
    ViewBag.Title = "Passenger Manifest";
}

<h2>Passenger Manifest</h2>
<h4>as Of: @System.DateTime.Now</h4>

<table class="table">

@foreach (var item in Model) {
    <tr>
        <th>
            Driver: @Html.DisplayFor(modelItem => item.crLogDriver.Name)
        </th>
        <th>
            Unit: @Html.DisplayFor(modelItem => item.crLogUnit.Description)
        </th>
        <th>
            Date: @Html.DisplayFor(modelItem => item.DtTrip)
        </th>
    </tr>
    <tr>
        <td colspan="3">
            @{ int passcnt = 0;}
            <table style="border:3px solid cadetblue;">
                <tr>
                    <th>&nbsp;</th>
                    <th>##</th>
                    <th>Name And Contact</th>
                    <th>Origin</th>
                    <th>Destination</th>
                    <th>STATUS</th>
                    <th>Contacted</th>
                    <th>Boarded</th>
                    <th>Delivered</th>
                    <th>Options</th>

                </tr>

                @foreach (var pass in item.crLogPassengers.OrderByDescending(s=>s.PickupTime))
                {
                    passcnt++;

            <tr>
                <td>
                    &nbsp;
                    @if (pass.timeContacted.Trim().Length > 2)
                    {
                        <span class="status-circle-green"> </span>
                    }
                    else
                    {
                        DateTime dt0 = System.DateTime.Now;
                        string st1 = pass.PickupTime;
                        DateTime dt1 = new DateTime(
                            dt0.Year, dt0.Month, dt0.Day,
                            int.Parse(st1.Substring(0, st1.IndexOf(":"))) + 12,
                            int.Parse(st1.Substring(st1.IndexOf(":") + 1, 2)),
                            0).AddHours(-1);

                        if (DateTime.Compare(dt0, dt1) <= 0)
                        {
                            <span class="status-circle-gray"> </span>
                        }
                        else
                        {
                            <span class="status-circle-red"> </span>
                        }

                    }

                    @if (pass.timeBoarded.Trim().Length > 2)
                    {
                        <span class="status-circle-green"> </span>
                    }
                    else
                    {

                        DateTime dt0 = System.DateTime.Now;
                        string st1 = pass.PickupTime;
                        DateTime dt1 = new DateTime(
                            dt0.Year, dt0.Month, dt0.Day,
                            int.Parse(st1.Substring(0, st1.IndexOf(":"))) + 12,
                            int.Parse(st1.Substring(st1.IndexOf(":") + 1, 2)),
                            0);

                        if (DateTime.Compare(dt0, dt1) <= 0)
                        {
                            <span class="status-circle-gray"> </span>
                        }
                        else
                        {
                            <span class="status-circle-red"> </span>
                        }

                    }

                    @if (pass.timeDelivered.Length > 2)
                    {
                        <span class="status-circle-green"> </span>
                    }
                    else
                    {
                        <span class="status-circle-gray"> </span>
                    }
                    &nbsp;

                </td>
                <td>(@passcnt)&nbsp;</td>
                <td>
                    @pass.Name / @pass.Contact &nbsp;
                </td>
                <td>
                    [ @pass.PickupTime / @pass.PickupPoint ] &nbsp;
                </td>
                <td>
                    [ @pass.DropTime / @pass.DropPoint ] &nbsp;
                </td>
                <td style="text-align:center;color:darkslateblue;">
                    @pass.crLogPassStatu.Status
                </td>

                @{
                    var sContacted = pass.timeContacted.Trim() == "" ? "--:--" : pass.timeContacted;
                    var sBoarded = pass.timeBoarded.Trim() == "" ? "--:--" : pass.timeBoarded;
                    var sDelivered = pass.timeDelivered.Trim() == "" ? "--:--" : pass.timeDelivered;
                }

                <td style="text-align:center;">
                    @sContacted &nbsp;
                </td>
                <td style="text-align:center;">
                    @sBoarded &nbsp;
                </td>
                <td style="text-align:center;">
                    @sDelivered
                </td>

                <td>
                    &nbsp;[ @Html.ActionLink("Transfer", "TransferPassenger", new { id = pass.Id }) ]
                </td>

            </tr>
                }

                <tr><td colspan="4">&nbsp</td></tr>
            </table>

        </td>

    </tr>
    <tr>
        <td colspan="6">
               &nbsp;
        </td>
    </tr>
}

</table>
