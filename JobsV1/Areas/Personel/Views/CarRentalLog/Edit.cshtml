@model JobsV1.Areas.Personel.Models.crLogTrip

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>crLogTrip</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.crLogDriverId, "Driver", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogDriverId", null, htmlAttributes: new { @class = "form-control dropdown-search" })
            @Html.ValidationMessageFor(model => model.crLogDriverId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogUnitId, "Unit", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogUnitId", null, htmlAttributes: new { @class = "form-control dropdown-search" })
            @Html.ValidationMessageFor(model => model.crLogUnitId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.crLogCompanyId, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("crLogCompanyId", null, htmlAttributes: new { @class = "form-control dropdown-search" })
            @Html.ValidationMessageFor(model => model.crLogCompanyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DtTrip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DtTrip, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DtTrip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddonOT, "AddOn OT", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddonOT, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.AddonOT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Addon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Addon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Addon, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Expenses, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Expenses, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Expenses, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DriverFee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DriverFee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DriverFee, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DriverOT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DriverOT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DriverOT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OdoStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OdoStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OdoStart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OdoEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OdoEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.OdoEnd, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.crLogClosingId, "crLogClosingId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.crLogClosingId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.crLogClosingId)
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.crLogClosingId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.crLogClosingId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.crLogClosingId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TripHours, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TripHours, new { htmlAttributes = new { @class = "form-control", @maxlength = "2", @id = "TripHours-textbox" } })
            @Html.ValidationMessageFor(model => model.TripHours, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control jqtimepicker", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control jqtimepicker-end", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OTRate, "Trip OT Rate", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.OTRate, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.OTRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DriverOTRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DriverOTRate, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.DriverOTRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.IsFinal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IsFinal, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.IsFinal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.AllowEdit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AllowEdit, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.AllowEdit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TripTicket, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TripTicket, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.AllowEdit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.IncludeOT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.IncludeOT, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.IncludeOT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script src="~/Scripts/Filters/FormInputFilter.js"></script>
    <script src="~/Areas/Personel/Script/CreateTripLogTime.js"></script>
    <script>
        $(() => {
            //initial 
            console.log($("#TripHours-textbox").val());
            if ($("#TripHours-textbox").val() == "") {
                $("#TripHours-textbox").val("12");
            }

            InitDropdownSearch();
        });


        //For Initializing search in dropdowns
        //Add class dropdown-search in dropdown inputs
        function InitDropdownSearch() {
            $('.dropdown-search').select2();
        }
    </script>
}