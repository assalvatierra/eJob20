@model IEnumerable<JobsV1.Models.Class.rptJobPayments>
@{
    ViewBag.Title = "Job Payment Status Report";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";
    string sDate = ViewBag.DtStart;
    string eDate = ViewBag.DtEnd;
    decimal total_Amount = 0;
    decimal total_AmountOil = 0;
    decimal total_AmountPaint = 0;
    decimal total_AmountOthers = 0;
    decimal total_PaymentAmount = 0;
    decimal total_Discount = 0;
    decimal PartsOils = ViewBag.PartsOils;
    decimal Painting = ViewBag.Painting;
    decimal OtherSvcs = ViewBag.OtherSvcs;

}
<div class="row" style="margin-top:10px;">
    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
        <h2>Job Payment Status Report </h2>

        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <h4 class="col-md-2 col-md-2 col-sm-2 col-xs-12 control-label form-label form-filter-label"> Filter: </h4>
                    <div class=" form-filter-div col-lg-3 col-md-3 col-sm-3 col-xs-6" style="max-width:120px;">
                        <input id="DtStart" name="DtStart" type="text" class="form-control form-filter-input" />
                    </div>
                    <div class="form-filter-div col-lg-3 col-md-3 col-sm-3 col-xs-6" style="max-width:120px;">
                        <input id="DtEnd" name="DtEnd" type="text" class="form-control form-filter-input" />
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2" style="padding:0px;">
                        <button class="btn btn-default form-filter-input" type="submit"> Filter </button>
                    </div>
                </div>
            </div>
        }
        <h4>
            Showing Jobs for @sDate - @eDate
        </h4>
    </div>

    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">

        <table class="table" style="margin-top:20px;">
            <tr>
                <th>
                    <h3 class="text-center"> Parts & Oils </h3>
                    <h1 class="text-center">
                        @PartsOils.ToString("N0")
                    </h1>
                </th>
                <th>
                    <h3 class="text-center"> Painting </h3>
                    <h1 class="text-center">
                        @Painting.ToString("N0")
                    </h1>
                </th>
                <th>
                    <h3 class="text-center"> Others </h3>
                    <h1 class="text-center">
                        @OtherSvcs.ToString("N0")
                    </h1>
                </th>
            </tr>
        </table>
    </div>
</div>


<!-- Charts
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding:20px 0px;" >
    <canvas id="myChart-JobsCount" width="300" height="100"></canvas>
</div>
     -->
<table class="table">
    <tr>
        <th>
            <h3 class="text-center text-success"> Total Paid </h3>
            <h1 class="text-center text-success">
                @ViewBag.CountPaid
            </h1>
        </th>
        <th>
            <h3 class="text-center text-warning"> Total Unpaid </h3>
            <h1 class="text-center text-warning">
                @ViewBag.CountUnpaid
            </h1>
        </th>
        <th>
            <h3 class="text-center text-info"> Total Terms </h3>
            <h1 class="text-center text-info">
                @ViewBag.CountTerms
            </h1>
        </th>
        <th>
            <h3 class="text-center"> Total Jobs </h3>
            <h1 class="text-center">
                @ViewBag.JobsCount
            </h1>
        </th>
    </tr>
</table>

<table class="table">
    <tr>
        <th>
            JobId
        </th>
        <th>
            Date
        </th>
        <th>
            Customer
        </th>
        <th style="min-width:200px;">
            Job Description
        </th>
        <th>
            Status
        </th>
        <th>
            Parts and Oils
        </th>
        <th>
            Painting
        </th>
        <th>
            Others
        </th>
        <th>
            Discount
        </th>
        <th>
            Paid Amount
        </th>
        <th>
            Amount
        </th>
    </tr>
    @foreach (var item in Model)
    {
        total_Amount += item.Amount;
        total_PaymentAmount += item.PaymentAmount;
        total_Discount += item.DiscountAmount;

        total_AmountOil += item.PartsOilsJobAmount;
        total_AmountPaint += item.PaintJobAmount;
        total_AmountOthers += item.OtherSvcsJobAmount;


        <tr>
            <td>
                @item.Id
            </td>
            <td>
                @item.JobDate.ToShortDateString()
            </td>
            <td>
                @item.Customer  <span class="text-muted"> / @item.Company </span>
            </td>
            <td>
                @{
                    var desc = item.JobDesc;
                    if (desc.Length > 32)
                    {
                        desc = desc.Substring(0, 32) + "...";
                    }
                }
                @Html.ActionLink(desc, "JobServices", "JobOrder", new { JobMainId = item.Id }, new { target = "blank" })
            </td>
            <td>
                @if (item.PaymentStatus.Status == "Paid")
                {
                    <span class="text-success">
                        @item.PaymentStatus.Status
                    </span>
                }
                else if (item.PaymentStatus.Status == "Unpaid")
                {
                    <span class="text-warning">
                        @item.PaymentStatus.Status
                    </span>
                }
                else
                {
                    <span>
                        @item.PaymentStatus.Status
                    </span>
                }

            </td>
            <!-- Parts and Oils -->
            <td>
                @item.PartsOilsJobAmount.ToString("N0")
            </td>
            <!-- Paintings -->
            <td>
                @item.PaintJobAmount.ToString("N0")
            </td>
            <td>
                @item.OtherSvcsJobAmount.ToString("N0")
            </td>
            <td class="text-muted">
                @item.DiscountAmount.ToString("N0")
            </td>
            <td class="text-success">
                @item.PaymentAmount.ToString("N0")
            </td>
            <td>
                @item.Amount.ToString("N0")
            </td>
        </tr>
    }
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="7">
                <p class="text-center"> No Jobs Found </p>
            </td>
        </tr>
    }
    else
    {


        <tr>
            <td colspan="5">
                <p class="pull-right">
                    Total
                </p>
            </td>
            <td>
                <!-- Parts and Oils -->
                <span>@total_AmountOil.ToString("N0")</span>
            </td>
            <td>
                <!-- Paints -->
                <span>@total_AmountPaint.ToString("N0")</span>
            </td>
            <td>
                <!-- Others -->
                <span>@total_AmountOthers.ToString("N0")</span>
            </td>
            <td>
                <span class="text-muted">@total_Discount.ToString("N0")</span>
            </td>
            <td>
                <span class="text-success">@total_PaymentAmount.ToString("N0")</span>
            </td>
            <td>
                <span>@total_Amount.ToString("N0")</span>
            </td>
        </tr>

    }
</table>


@section Scripts{
    <script src="~/Scripts/Job/DefaultDate.js"></script>
    <script src="~/Scripts/Chartjs/Chart.js"></script>
    <script>
        $(() => {
            Initialize();
        });

        function Initialize() {
            var dtStart = '@ViewBag.DtStart';
            var dtEnd = '@ViewBag.DtEnd';

            if (dtStart == '') {
                $('#DtStart').val(moment().format("MM/DD/YYYY"));
            } else {
                $('#DtStart').val(moment(dtStart).format("MM/DD/YYYY"));
            }
            if (dtEnd == '') {
                $('#DtEnd').val(moment().format("MM/DD/YYYY"));
            } else {
                $('#DtEnd').val(moment(dtEnd).format("MM/DD/YYYY"));
            }
        }


        // Line graph sample
        var ctx_bar = document.getElementById('myChart-JobsCount').getContext('2d');
        var myChart = new Chart(ctx_bar, {
            type: 'pie',
            data: {
                labels: ['Paid', 'Unpaid', 'Terms'],
                datasets: [{
                    label: '# of Votes',
                    data: [@ViewBag.CountPaid, @ViewBag.CountUnPaid, @ViewBag.CountTerms],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)'
                    ],
                    borderWidth: 1
                }]
            }
            //options: {
            //    scales: {
            //        yAxes: [{
            //            ticks: {
            //                beginAtZero: true
            //            }
            //        }]
            //    }
            //}
        });
    </script>
}