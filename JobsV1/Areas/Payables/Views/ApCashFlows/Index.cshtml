@model IEnumerable<ApModels.Models.Custom.CashFlowModel>

@{
    ViewBag.Title = "CashFlow";
    Layout = "~/Views/Shared/_ModuleLayout.cshtml";

    decimal TotalRequest = 0;
    decimal TotalCashIn = 0;
    decimal TotalCashout = 0;
    decimal TotalFunded = 0;
    decimal TotalBalance = 0;
    decimal TotalProjectedBalance = 0;
    decimal TotalProjectedAfterWithdraw = 0;
    decimal DailyOpeningBalance = 0;
    bool isAdmin = ViewBag.IsAdmin ?? false;
}

<h2>CashFlow</h2>

<p>
    @Html.ActionLink("Back to Expenses", "Index", "Aptransactions") | 
    @Html.ActionLink("Posted Cash Flows", "Posted", null, null)
</p>
<p>
    @Html.ActionLink("Cash In", "Create", null, new { @class = "btn btn-default" })
</p>

<h4> Date: @ViewBag.Today </h4>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            Cash Request
        </th>
        <th>
            Approved Request
        </th>
        <th>
            Funded
        </th>
        <th>
            Cash in
        </th>
        <th>
            Expenses
        </th>
        <th style="width:120px;"></th>
    </tr>

    @foreach (var dategroup in Model.GroupBy(c => c.Date))
    {
        decimal tempCashIn = 0;
        decimal tempCashOut = 0;
        <tr>
            <td colspan="6" class="text-primary">
                @dategroup.Key.ToString("MMM dd yyyy")
            </td>
        </tr>

        foreach (var item in dategroup.OrderBy(c => c.OrderNo))
        {

            TotalCashIn += item.CREDIT;
            TotalCashout += item.DEBIT;
            TotalRequest += item.REQUEST == null ? (decimal)(0) : (decimal)item.REQUEST;
            TotalFunded += item.FUNDED == null ? (decimal)(0) : (decimal)item.FUNDED;

            tempCashIn += item.CREDIT;
            tempCashOut += item.DEBIT;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                    <span class="text-muted"> @Html.DisplayFor(modelItem => item.Remarks)</span>
                </td>
                <td></td>
                <td>
                    @if (item.REQUEST != null)
                    {
                        <span class="text-success"> @item.REQUEST</span>
                    }
                </td>

                <td>
                    @if (item.FUNDED != null)
                    {
                        <span class="text-primary"> @item.FUNDED</span>
                    }
                </td>
                <td>

                    @if (item.CREDIT != 0)
                    {
                        @item.CREDIT.ToString("#,##0.00")
                    }
                </td>
                <td>
                    @if (item.DEBIT != 0)
                    {
                        @item.DEBIT.ToString("#,##0.00")
                    }
                </td>
                <td style="width:120px;">
                    @if (item.Id != 0)
                    {
                        if (isAdmin)
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id })<span> |</span>
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        }
                    }
                </td>
            </tr>
        }
        <tr>
            <td colspan="4">
                Closing Balance
            </td>
            <td>
                @tempCashIn.ToString("#,##0.00")
            </td>
            <td>
                @tempCashOut.ToString("#,##0.00")
            </td>
            <td>

                @{
                    DailyOpeningBalance += tempCashIn - tempCashOut;
                }

                <span class="pull-right"> @DailyOpeningBalance.ToString("#,##0.00") </span>
            </td>
        </tr>
    }
    <!-- TOTALS CALCULATIONS -->
    @{
        TotalBalance = TotalCashIn - TotalCashout - TotalFunded;
        TotalProjectedBalance = TotalBalance - TotalRequest;

        decimal PettyCash = 0;
        decimal ForWithdrawPetty = 0;
        decimal ForWithdrawActual = 0;

        if (TotalProjectedBalance < 4000)
        {
            ForWithdrawPetty = (decimal)5000 - TotalProjectedBalance;
        }

        if (TotalProjectedBalance < 0)
        {
            ForWithdrawActual = TotalProjectedBalance * (-1);
        }

        TotalProjectedAfterWithdraw = TotalProjectedBalance + ForWithdrawPetty;

        //calculate petty cash
        if (ForWithdrawPetty > 5000)
        {

            PettyCash = ForWithdrawPetty;
        }
        else
        {
            PettyCash = ForWithdrawPetty;
        }
    }

    @if (ForWithdrawActual != 0)
    {

        <tr>
            <td>
                For Withdrawal
            </td>
            <td class="text-info">
                @ForWithdrawActual.ToString("#,##0.00")
            </td>
            <td colspan="4">
            </td>
            <td>
            </td>
        </tr>
    }
    <tr>
        <td>
        </td>
        <td>
            <span class="text-muted"> Total Cash Request </span><br />
            <span id="TotalCashIn" class="text-info">@ForWithdrawActual.ToString("#,##0.00")</span>
        </td>
        <td>
            <span class="text-muted"> Total Request </span><br />
            <span id="TotalCashIn" class="text-info">@TotalRequest.ToString("#,##0.00")</span>
        </td>
        <td>
            <span class="text-muted"> Total Funded </span><br />
            <span id="TotalCashIn" class="text-info">@TotalFunded.ToString("#,##0.00")</span>
        </td>
        <td>
            <span class="text-muted"> Total Cash-in </span><br />
            <span id="TotalCashIn">@TotalCashIn.ToString("#,##0.00")</span>
        </td>
        <td>
            <span class="text-muted"> Total Expenses </span><br />
            <span id="TotalCashout">@TotalCashout.ToString("#,##0.00")</span>
        </td>
        <td></td>
    </tr>
    <tr>
        <td colspan="4">
        </td>
        <td>
            <span class="text-muted"> Actual Balance </span>
        </td>
        <td>
            <span id="totalBalance">@TotalBalance.ToString("#,##0.00")</span>
        </td>
        <td>
        </td>
    </tr>
    <tr>
        <td colspan="4">
        </td>
        <td>
            <span class="text-muted"> Projected Balance </span>
        </td>
        <td>
            <span id="totalBalance">@TotalProjectedBalance.ToString("#,##0.00")</span>
        </td>
        <td>
        </td>
    </tr>
    @if (PettyCash > 0)
    {

        <tr>
            <td colspan="7">
                <b class="text-bold">  Petty Cash</b>
            </td>
        </tr>
        <tr>
            <td>
                For Withdrawal + Petty Cash
            </td>
            <td class="text-info">
                @PettyCash.ToString("#,##0.00")
            </td>
            <td colspan="4">
            </td>
            <td>
            </td>
        </tr>
        <tr>
            <td colspan="4">
            </td>
            <td>
                <span class="text-muted"> After Withdrawal </span>
            </td>
            <td>
                <span id="totalBalance" class="text-success">@TotalProjectedAfterWithdraw.ToString("#,##0.00")</span>
            </td>
            <td>
            </td>
        </tr>
    }

    @*<tr>
            <td>
                To Expenses
            </td>
            <td class="text-info">
                @TotalRequest.ToString("#,##0.00")
            </td>
            <td colspan="4">
            </td>
            <td>
            </td>
        </tr>
        <tr>
            <td>
                To Petty Cash
            </td>
            <td class="text-info">
                @pettyCash.ToString("#,##0.00")
            </td>
            <td colspan="4">
            </td>
            <td>
            </td>
        </tr>*@
    <tr>
        <td colspan="5">
        </td>
        <td>
            <button class="btn btn-primary" onclick="PostBalance()">
                Post Balance
            </button>
        </td>
        <td></td>
    </tr>
</table>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Areas/Payables/Scripts/ApTransactions/ApTransCreate.js"></script>
    <script>
        function PostBalance() {

            var data = {
                DtPost: moment(new Date()).format("MM/DD/YYYY"),
                Cash  : @TotalCashIn,
                Amount : @TotalCashout,
                Balance : @TotalBalance,

            }

            console.log(data);

            var con = $.post("/Payables/ApCashFlows/CashFlowPost", data, (res) => {
                if (res == "True") {
                    alert("Balance Posted.");
                    window.location.reload(false);
                } else {
                    alert("Unable to post Balance.");
                    window.location.reload(false);
                }
            }).fail(() => {
                alert("Unable to post Balance.");
                window.location.reload(false);
            });

            console.log(con);
        }
    </script>
}
